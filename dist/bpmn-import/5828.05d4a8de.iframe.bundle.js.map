{"version":3,"file":"5828.05d4a8de.iframe.bundle.js","mappings":";;;;;;AAaA;;;;;;;;;;;;;;;;AC0GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA4DA;;AAMA;;AAEA;;;AAGA;;;;AAIA;AAKA;;AAEA;AAEA;;;;;;;;;;;;;;;AC1JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmBA;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsDA;;AAgCA;;AAEA;AACA;AACA;AACA;;AASA;AACA;;;;AAMA;;AAEA;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AA+BA;AAKA;;AAEA;;;AAKA;;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAkDA;;;AAKA;;AAEA;AACA;;;;;;AAMA;AACA;;;AAGA;;;;AAQA;;;;;;;;;;;;;;;;;;;ACtEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;;AA4BA;;;;AAMA;;AAEA;;AAEA;;;;;AAKA;;;AAGA;;;;AAKA;;AAiOA;AACA;AACA;;AAtCA;;AAEA;;;AAGA;AACA;;AAEA;;;;AAIA;;;;AAIA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;;;AAaA;AAOA;AACA;AACA;AACA;AAGA;;AAMA;;AAKA;;AAGA;;;ACpYA;AACA;;AAQA;;;;;AAEA;;;;;;;;ACnEA;;;;;;;;;;;;;;;;AAAA;;AAmBA;AACA;;;AAGA;AAEA","sources":["webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/banner.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/button-set.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/button.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-menu.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/file-card.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/file-picker-d0e02807.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.base-7a919db2.js","webpack://@pi/bpmn-import/../../node_modules/@nintexglobal/earthling-components/dist/esm/label.js"],"sourcesContent":["import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst base = css`\n  :host {\n    display: grid;\n    color: inherit;\n  }\n`;\nconst styles = [commonStyles, base];\n\n/**\n * @tag ne-icon\n * @tagname ne-icon\n *\n * @description Control that renders an SVG icon, this will typically be used inside of other elements such as a toolbar button.\n *\n * @cssproperty {color} [color] Icon color inheted from the parent color\n */\nlet NeIcon = class NeIcon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.fixedSize = '';\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return renderIcon({\n      type: this.type,\n      fixedSize: this.fixedSize\n    });\n  }\n};\n__decorate([property({\n  attribute: 'type',\n  reflect: true\n})], NeIcon.prototype, \"type\", void 0);\n__decorate([property({\n  type: String\n})], NeIcon.prototype, \"fixedSize\", void 0);\nNeIcon = __decorate([customElement('ne-icon')], NeIcon);\n\nexport { NeIcon };\n//# sourceMappingURL=icon.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NeIcon } from './icon.js';\nimport { f as fire } from './events-1173f562.js';\nimport { A as AlertType } from './alertType-bddadb4d.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-banner-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-banner-color-background-success: var(--ne-ref-color-green-50, #008738);\n  --ne-banner-color-background-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-banner-color-background-danger: var(--ne-ref-color-red-50, #E60000);\n  --ne-banner-color-background-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-banner-color-label-default: var(--ne-ref-color-white, #ffffff);\n  --ne-banner-color-label-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-banner-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-banner-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-banner-shadow: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n  --ne-banner-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-banner-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-banner-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n}\n`;\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .banner {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: top;\n    align-content: center;\n    padding: var(--ne-banner-padding-horizontal) var(--ne-banner-padding-vertical);\n    box-sizing: border-box;\n    box-shadow: var(--ne-banner-shadow)\n    border: none;\n    border-radius: var(--ne-banner-border-radius-default);\n    align-items: flex-start\n  }\n\n  .info {\n    background-color: var(--ne-banner-color-background-info);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .success {\n    background-color: var(--ne-banner-color-background-success);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .danger {\n    background-color: var(--ne-banner-color-background-danger);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .warning {\n    background-color: var(--ne-banner-color-background-warning);\n    color: var(--ne-banner-color-label-warning);\n  }\n\n  .content {\n    flex-grow: 1;\n    word-wrap: break-word;\n    font-family: var(--ne-banner-font-family);\n    font-size: var(--ne-banner-font-size);\n  }\n\n  .banner.closable .content {\n    padding-right: 0;\n  }\n\n  .icon {\n    flex-shrink: 0;\n    display: grid;\n    box-sizing: border-box;\n    background-color: transparent;\n    padding-top: var(--ne-ref-spacing-xxx-small);\n\n  }\n\n  .type-icon {\n    min-width: var(--ne-banner-sizing-icon);\n    height: var(--ne-banner-sizing-icon);\n    margin: 0 var(--ne-banner-gap);\n  }\n\n  .close-button {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: none;\n    border-radius: var(--ne-button-border-radius);\n    min-width: var(--ne-banner-sizing-icon);\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n  \n  .close-button * {\n    cursor: pointer;\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-banner\n * @tagname ne-banner\n *\n * @description Control to render a banner at the top of the screen by content supplied to an unnamed slot.\n *\n * @slot default The slot can be any string or HTML Element with child elements that makes out the content of the banner\n *\n * @event ne-close Raised when the internal built in close button is clicked\n */\nlet NeBanner = class NeBanner extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the variant type of the banner. Currently \"info\", \"success\" and \"danger\" is supported\n     */\n    this.variantType = AlertType.info;\n    /**\n     * Specifies whether the banner should have a built in close button or not.\n     */\n    this.closable = false;\n    // Events\n    this._onClose = () => {\n      fire(this, 'ne-close', {});\n    };\n    // Functions\n    this.getTypeIcon = () => {\n      let iconType;\n      // eslint-disable-next-line default-case\n      switch (this.variantType) {\n        case AlertType.info:\n          iconType = Icons.info;\n          break;\n        case AlertType.success:\n          iconType = Icons.success;\n          break;\n        case AlertType.danger:\n          iconType = Icons.dangerExclamation;\n          break;\n        case AlertType.warning:\n          iconType = Icons.warningExclamation;\n          break;\n      }\n      return html`<ne-icon type=${iconType}></ne-icon>`;\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon\n    };\n  }\n  render() {\n    return html`<div\n      role=\"alert\"\n      class=\"${classMap({\n      banner: true,\n      [this.variantType]: true,\n      closable: this.closable\n    })}\"\n    >\n      <span class=\"icon type-icon\">${this.getTypeIcon()}</span>\n      <div class=\"content\"><slot></slot></div>\n      ${this.closable ? html`<button\n            id=\"close-button\"\n            class=\"close-button\"\n            @click=\"${this._onClose}\"\n            aria-label=\"close\"\n          >\n            <span\n              class=\"${classMap({\n      icon: true,\n      'type-icon': true,\n      [this.variantType]: true\n    })}\"\n              ><ne-icon type=${Icons.closeDefault}></ne-icon\n            ></span>\n          </button>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  attribute: 'type',\n  reflect: true\n})], NeBanner.prototype, \"variantType\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeBanner.prototype, \"closable\", void 0);\nNeBanner = __decorate([customElement('ne-banner')], NeBanner);\n\nexport { NeBanner };\n//# sourceMappingURL=banner.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-button-set-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-button-set-border-width: var(--ne-ref-border-width-small, 1px);\n}\n`;\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .ne-button-set {\n    display: flex;\n    flex-flow: row;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    padding-top: var(--ne-button-set-padding-vertical);\n    padding-bottom: var(--ne-button-set-padding-vertical);\n    gap: var(--ne-button-set-gap);\n    width: 100%;\n  }\n\n  .ne-button-set ::slotted(.right-start) {\n    margin-left: auto;\n  }\n\n  .divider-top {\n    border-top: solid;\n    border-top-width: var(--ne-button-set-border-width);\n    border-top-color: var(--ne-button-set-color-border);\n  }\n\n  .divider-bottom {\n    border-bottom: solid;\n    border-bottom-width: var(--ne-button-set-border-width);\n    border-bottom-color: var(--ne-button-set-color-border);\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-button-set\n * @tagname ne-button-set\n *\n * @slot default This is where the contents of the button set will be inserted\n */\nlet NeButtonSet = class NeButtonSet extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.showTopDivider = false;\n    this.showBottomDivider = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=\"${classMap({\n      'ne-button-set': true,\n      'divider-top': this.showTopDivider,\n      'divider-bottom': this.showBottomDivider\n    })}\"\n    >\n      <slot></slot>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-top'\n})], NeButtonSet.prototype, \"showTopDivider\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-bottom'\n})], NeButtonSet.prototype, \"showBottomDivider\", void 0);\nNeButtonSet = __decorate([customElement('ne-button-set')], NeButtonSet);\n\nexport { NeButtonSet };\n//# sourceMappingURL=button-set.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens } from './button.tokens-e79c8bbf.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst baseButton = css`\n  .btn {\n    font-family: var(--ne-button-font-family);\n    font-size: var(--ne-button-font-size);\n    padding: var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal) var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal);\n    gap: var(--ne-button-gap);\n    border-radius: var(--ne-button-border-radius);\n    outline: none;\n    display: grid;\n    grid-auto-flow: column;\n  }\n\n  .btn:focus {\n    outline: 4px solid var(--ne-button-color-border-focus);\n  }\n\n  .btn-primary {\n    border: 1px solid var(--ne-button-color-border-primary-default);\n    color: var(--ne-button-color-label-primary-default);\n    background-color: var(--ne-button-color-background-primary-default);\n  }\n\n  .btn-primary:hover {\n    background-color: var(--ne-button-color-background-primary-hover);\n  }\n\n  .btn-primary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-primary-disabled);\n    background-color: var(--ne-button-color-background-primary-disabled);\n  }\n\n  .btn-secondary {\n    border: 1px solid var(--ne-button-color-border-secondary-default);\n    color: var(--ne-button-color-label-secondary-default);\n    background-color: var(--ne-button-color-background-secondary-default);\n  }\n\n  .btn-secondary:hover {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-secondary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-secondary-disabled);\n    background-color: var(--ne-button-color-background-secondary-disabled);\n  }\n\n  .btn-secondary:focus {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-destructive {\n    border: 1px solid var(--ne-button-color-border-destructive-default);\n    color: var(--ne-button-color-label-destructive-default);\n    background-color: var(--ne-button-color-background-destructive-default);\n  }\n\n  .btn-destructive:hover {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-destructive:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-destructive-disabled);\n    background-color: var(--ne-button-color-background-destructive-disabled);\n  }\n\n  .btn-destructive:focus {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-text {\n    border: 0;\n    color: var(--ne-button-color-label-text-default);\n    background-color: transparent;\n  }\n\n  .btn-text:hover {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-text:disabled {\n    border: 0;\n    color: var(--ne-button-color-label-text-disabled);\n    background-color: var(--ne-button-color-background-text-disabled);\n  }\n\n  .btn-text:focus {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-inverse {\n    color: var(--ne-button-color-label-inverse-default);\n    background-color: transparent;\n    border: 1px solid var(--ne-button-color-border-inverse-default);\n  }\n\n  .btn-inverse:hover {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .btn-inverse:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-inverse-disabled);\n    background-color: var(--ne-button-color-background-inverse-disabled);\n  }\n\n  .btn-inverse:focus {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .icon-slot {\n    min-width: 18px;\n    max-width: 18px;\n  }\n`;\nconst styles = [tokens, baseButton, commonStyles];\n\nconst buttonVariantsArray = ['primary', 'secondary', 'destructive', 'text', 'inverse'];\n/**\n * @tag ne-button\n * @tagname ne-button\n *\n * @slot default This is where the contents of the button will be inserted\n *\n * @event ne-click Raised when the button is clicked.\n */\nlet NeButton = class NeButton extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies that a button should be disabled */\n    this.disabled = false;\n    /** Specifies the text that will be read by the screen reader */\n    this.ariaLabel = '';\n    this.variant = 'primary';\n    this.onClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`\n      <button\n        id=${this.id}\n        type=\"button\"\n        ?disabled=${this.disabled}\n        @click=\"${this.onClick}\"\n        aria-label=${this.ariaLabel || nothing}\n        class=${classMap({\n      btn: true,\n      'btn-primary': this.variant === 'primary',\n      'btn-secondary': this.variant === 'secondary',\n      'btn-destructive': this.variant === 'destructive',\n      'btn-text': this.variant === 'text',\n      'btn-inverse': this.variant === 'inverse'\n    })}\n      >\n        <span class=${this.leftIconType !== undefined ? 'icon-slot' : 'hidden'}>\n          <slot name=\"left\">${renderIcon({\n      type: this.leftIconType\n    })}</slot>\n        </span>\n        <slot></slot>\n        <span\n          class=${this.rightIconType !== undefined ? 'icon-slot' : 'hidden'}\n        >\n          <slot name=\"right\">${renderIcon({\n      type: this.rightIconType\n    })}</slot>\n        </span>\n      </button>\n    `;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeButton.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon',\n  reflect: true\n})], NeButton.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'right-icon',\n  reflect: true\n})], NeButton.prototype, \"rightIconType\", void 0);\n__decorate([property({\n  reflect: true\n})], NeButton.prototype, \"variant\", void 0);\nNeButton = __decorate([customElement('ne-button')], NeButton);\n\nexport { NeButton, buttonVariantsArray };\n//# sourceMappingURL=button.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-menu-color-elevated-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-elevated-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-dropdown-menu-color-flat-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-flat-border: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-dropdown-menu-border-radius-elevated: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-border-radius-flat-top: var(--ne-ref-border-radius-none, 0);\n  --ne-dropdown-menu-border-radius-flat-bottom: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-padding-horizontal: var(--ne-ref-spacing-none, 0);\n  --ne-dropdown-menu-padding-vertical: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-dropdown-menu-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-dropdown-menu-shadow-elevated: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n}\n`;\n\nconst baseDropdownMenu = css`\n  .dropdown-menu {\n    margin: 0;\n    padding: var(--ne-dropdown-menu-padding-vertical)\n      var(--ne-dropdown-menu-padding-horizontal);\n    border-width: var(--ne-dropdown-menu-border-width);\n    border-style: solid;\n  }\n\n  .dropdown-menu.elevated {\n    border-color: var(--ne-dropdown-menu-color-elevated-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-elevated);\n    background-color: var(--ne-dropdown-menu-color-elevated-background);\n    box-shadow: 3px 3px 5px rgb(22 23 24 / 10%);\n  }\n\n  .dropdown-menu.flat {\n    border-color: var(--ne-dropdown-menu-color-flat-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-bottom)\n      var(--ne-dropdown-menu-border-radius-flat-bottom);\n    background-color: var(--ne-dropdown-menu-color-flat-background);\n  }\n\n  .dropdown-menu .fixed-height {\n    /* Shows 6 rows */\n    max-height: calc(10 * (1em * 1.2));\n    overflow-y: auto;\n  }\n\n  .dropdown-menu-footer {\n    padding: 0 14px;\n  }\n\n  .dropdown-menu ::slotted(li) {\n    display: block;\n  }\n`;\nconst styles = [tokens, baseDropdownMenu, commonStyles];\n\nconst dropdownMenuVariantsArray = ['elevated', 'flat'];\n/**\n * @description Control that renders a dropdown menu that can be used by and connected to other components (for example the toolbar button, the dropdown field).\n *\n * @slot default A list of elements to be displayed as items in the dropdown menu can be inserted here (it is suggested to use a list of 'ne-dropdown-menu-item' elements)\n */\nlet NeDropdownMenu = class NeDropdownMenu extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the text that will be read by the screen reader\n     */\n    this.ariaLabel = '';\n    /**\n     * Specifies the variant to be rendered (currently the options are 'elevated' or 'flat')\n     */\n    this.variant = 'elevated';\n    /**\n     * Specifies if the menu should be the pre-defined height.\n     */\n    this.fixedHeight = false;\n    this.showFooterActions = false;\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=${classMap({\n      'dropdown-menu': true,\n      elevated: this.variant === 'elevated',\n      flat: this.variant === 'flat'\n    })}\n      aria-label=${this.ariaLabel || nothing}\n    >\n      <div class=${classMap({\n      'fixed-height': this.fixedHeight === true\n    })}>\n        <slot></slot>\n      </div>\n      ${this.showFooterActions ? html`<div class=\"dropdown-menu-footer\">\n            <slot name=\"footer-items\"></slot>\n          </div>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeDropdownMenu.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  reflect: true\n})], NeDropdownMenu.prototype, \"variant\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownMenu.prototype, \"fixedHeight\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenu.prototype, \"showFooterActions\", void 0);\nNeDropdownMenu = __decorate([customElement('ne-dropdown-menu')], NeDropdownMenu);\n\nexport { NeDropdownMenu, dropdownMenuVariantsArray };\n//# sourceMappingURL=dropdown-menu.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { f as fire } from './events-1173f562.js';\nimport { trash } from './trash-56a13cc6.js';\nimport { file } from './file-4ab02705.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-file-picker-card-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-card-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-file-picker-card-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-file-picker-card-sizing-icon: var(--ne-ref-sizing-06, 1.5em);\n  --ne-file-picker-card-color-background: var(--ne-ref-color-white, #ffffff);\n  --ne-file-picker-card-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-file-picker-card-color-text-file-name: var(--ne-ref-color-grey-90, #161718);\n  --ne-file-picker-card-color-text-subtext: var(--ne-ref-color-grey-60, #575C61);\n  --ne-file-picker-card-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-file-picker-card-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-file-picker-card-font-size-file-name: var(--ne-ref-font-size-04, 0.875em);\n  --ne-file-picker-card-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-file-picker-card-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-file-picker-card-line-height: var(--ne-ref-line-height-condensed, 1.25em);\n}\n`;\n\nconst baseFileCard = css`\n  .file-card-area {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    border: var(--ne-file-picker-card-border-width) solid\n      var(--ne-file-picker-card-color-border);\n    border-radius: var(--ne-file-picker-card-border-radius);\n    padding: var(--ne-file-picker-card-padding-vertical)\n      var(--ne-file-picker-card-padding-horizontal);\n    background-color: var(--ne-file-picker-card-color-background);\n  }\n\n  .content {\n    align-self: stretch;\n    display: flex;\n    gap: var(--ne-file-picker-card-gap);\n    align-items: start;\n    justify-content: center;\n    font-family: var(--ne-file-picker-card-font-family);\n    font-size: var(--ne-file-picker-card-font-size-file-name);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  .text-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    line-height: var(--ne-file-picker-card-line-height);\n  }\n\n  .file-icon {\n    width: var(--ne-file-picker-card-sizing-icon);\n    height: var(--ne-file-picker-card-sizing-icon);\n    padding: 1px calc(var(--ne-file-picker-card-gap) / 2);\n  }\n\n  .delete-button {\n    display: flex;\n    height: fit-content;\n    width: fit-content;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    cursor: pointer;\n  }\n\n  .btn {\n    background-color: inherit;\n    border: none;\n    font-size: var(--ne-file-picker-card-sizing-icon);\n    cursor: inherit;\n  }\n\n  ne-icon {\n    display: inline-block;\n    color: var(--ne-file-picker-card-color-text-file-name);\n  }\n\n  .delete-icon {\n    cursor: pointer;\n    width: 12px;\n    height: 16px;\n  }\n\n  .sub-text {\n    display: inline-flex;\n    font-size: var(--ne-file-picker-card-font-size-subtext);\n    color: var(--ne-file-picker-card-color-text-subtext);\n    gap: calc(var(--ne-file-picker-card-gap) * 2);\n  }\n`;\nconst styles = [baseFileCard, commonStyles, tokens];\n\nconst defaultFileFormat = 'Document';\nconst formatSubtext = ' file';\nconst sizeFileFormats = ['B', 'KB', 'MB', 'GB', 'TB'];\nconst fileSizeIEC = filesize => {\n  const pow = filesize === 0 ? 0 : Math.floor(Math.log(filesize) / Math.log(1024));\n  return `${(filesize / 1024 ** pow).toFixed(2)} ${sizeFileFormats[pow]}`;\n};\n/**\n * @tag ne-file-card\n * @tagname ne-file-card\n *\n */\nlet NeFileCard = class NeFileCard extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.fileName = '';\n    this.fileSize = 0;\n    this.handleClick = e => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n      if (!this.onDelete) {\n        const uploadedFile = document.querySelector('ne-file-card');\n        uploadedFile?.style?.setProperty('display', 'none');\n      } else {\n        this.onDelete(e, this.id);\n      }\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  _handleClick(e) {\n    this.handleClick(e);\n  }\n  render() {\n    let fileFormat = `${this.fileName.slice(this.fileName.lastIndexOf('.') + 1, this.fileName.length)}`;\n    const fileName = fileFormat.length + formatSubtext.length > 10 ? this.fileName : this.fileName.split(`.${fileFormat}`)[0];\n    if (fileFormat.length + formatSubtext.length > 10) {\n      fileFormat = defaultFileFormat;\n    } else {\n      fileFormat = fileFormat.toUpperCase() + formatSubtext;\n    }\n    const fileSize = fileSizeIEC(this.fileSize);\n    return html` <div class=\"file-card-area\">\n      <div class=\"content\">\n        <div class=\"file-icon\">\n          ${renderIcon({\n      typeAsHtml: file\n    })}\n        </div>\n        <div class=\"text-content\">\n          <label class=\"file-card-label\">${fileName}</label>\n          <div class=\"sub-text\">\n            <label class=\"file-fileFormat\">${fileFormat}</label>\n            <label class=\"file-size\">${fileSize}</label>\n          </div>\n        </div>\n        <div class=\"delete-button\">\n          <button\n            class=\"btn\"\n            @click=${this._handleClick}\n            id=\"${this.id}-delete button\"\n            aria-label=\"delete button\"\n          >\n            ${renderIcon({\n      typeAsHtml: trash,\n      className: 'delete-icon'\n    })}\n          </button>\n        </div>\n      </div>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeFileCard.prototype, \"fileName\", void 0);\n__decorate([property({\n  type: Number,\n  reflect: true\n})], NeFileCard.prototype, \"fileSize\", void 0);\n__decorate([property()], NeFileCard.prototype, \"onDelete\", void 0);\nNeFileCard = __decorate([customElement('ne-file-card')], NeFileCard);\n\nexport { NeFileCard, fileSizeIEC };\n//# sourceMappingURL=file-card.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { f as fire } from './events-1173f562.js';\nimport { dropzone } from './dropzone-70166a79.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { NeButton } from './button.js';\nimport { NeFileCard } from './file-card.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-file-picker-sizing-icon: var(--ne-ref-sizing-08, 2em);\n  --ne-file-picker-sizing-height: var(--ne-ref-sizing-14, 6em);\n  --ne-file-picker-message-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-message-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-file-picker-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-file-picker-color-label: var(--ne-ref-color-grey-60, #575C61);\n  --ne-file-picker-color-border-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-file-picker-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-file-picker-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-file-picker-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-file-picker-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-file-picker-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-file-picker-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-file-picker-gap: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseFilePicker = css`\n  .drag-file-area {\n    position: relative;\n    box-sizing: border-box;\n    border: var(--ne-file-picker-border-width) dashed\n      var(--ne-file-picker-color-border-default);\n    overflow: hidden;\n    border-radius: var(--ne-file-picker-border-radius);\n    padding: calc(var(--ne-file-picker-padding) / 2);\n    min-height: 96px;\n  }\n\n  .drag-file-area.dragging-over-area {\n    background-color: var(--ne-file-picker-color-background-hover);\n    height: 96px;\n    display: grid;\n    padding: 0 calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .form-container {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    width: 100%;\n    height: 100%;\n  }\n\n  .file-picker-container {\n    align-self: stretch;\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .upload-files-container {\n    position: relative;\n    display: grid;\n    width: 100%;\n    flex-direction: column;\n    gap: var(--ne-file-picker-padding);\n  }\n\n  .file-picker-container .upload-files-container ne-file-card:last-child {\n    margin-bottom: var(--ne-file-picker-padding);\n  }\n\n  .file-picker-message {\n    width: fit-content;\n    height: fit-content;\n    padding: var(--ne-file-picker-message-padding);\n    display: inline-flex;\n    gap: var(--ne-file-picker-message-gap);\n    align-items: center;\n    justify-content: center;\n    font-family: var(--ne-file-picker-font-family);\n    font-size: var(--ne-file-picker-font-size);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  #default-file-input {\n    opacity: 0;\n    display: none;\n    position: absolute;\n    z-index: -1;\n    left: 0;\n    top: 0;\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n`;\nconst styles$1 = [baseFilePicker, commonStyles, tokens];\n\nconst baseFileDropzone = css`\n  .file-picker-container {\n    position: inherit;\n    align-self: stretch;\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .file-picker-message {\n    width: fit-content;\n    height: fit-content;\n    padding: var(--ne-file-picker-message-padding);\n    display: inline-flex;\n    gap: var(--ne-file-picker-message-gap);\n    align-items: center;\n    justify-content: center;\n    font-family: var(--ne-file-picker-font-family);\n    font-size: var(--ne-file-picker-font-size);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  #default-file-input {\n    opacity: 0;\n    position: absolute;\n    z-index: -1;\n    left: 0;\n    top: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .dropzone-icon-container {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: var(--ne-file-picker-sizing-icon);\n    height: var(--ne-file-picker-sizing-icon);\n  }\n\n  .dropzone-icon-container svg {\n    width: 100%;\n    height: var(--ne-file-picker-sizing-icon);\n  }\n`;\nconst styles = [baseFileDropzone, commonStyles, tokens];\n\n/**\n * @tag ne-file-dropzone\n * @tagname ne-file-dropzone\n *\n */\nlet NeFileDropzone = class NeFileDropzone extends LitElement {\n  static get styles() {\n    return styles;\n  }\n  static get properties() {\n    return {\n      singleFile: {\n        type: Boolean\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.singleFile = false;\n    this.singleFile = false;\n  }\n  render() {\n    const fileStr = this.singleFile ? 'file' : 'files';\n    return html` <div class=\"file-picker-container\">\n      <div class=\"file-picker-message\">\n        <div class=\"dropzone-icon-container dropzone-icon\">\n          ${renderIcon({\n      typeAsHtml: dropzone\n    })}\n        </div>\n        <label\n          draggable=\"true\"\n          id=\"${this.id}-dropzone-label\"\n          for=\"default-file-input\"\n          aria-label=\"Drag ${fileStr} here\"\n        >\n          Drag ${fileStr} here...\n        </label>\n        <slot>\n          <input\n            tabindex=\"-1\"\n            @input=\"${this.handleChange}\"\n            type=\"file\"\n            id=\"default-file-input\"\n            ?multiple=\"${!this.singleFile}\"\n          />\n        </slot>\n      </div>\n    </div>`;\n  }\n};\n__decorate([property()], NeFileDropzone.prototype, \"handleChange\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeFileDropzone.prototype, \"singleFile\", void 0);\nNeFileDropzone = __decorate([customElement('ne-file-dropzone')], NeFileDropzone);\n\n/**\n * @tag ne-file-picker\n * @tagname ne-file-picker\n *\n */\nlet NeFilePicker = class NeFilePicker extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-file-dropzone': NeFileDropzone,\n      'ne-button': NeButton,\n      'ne-file-card': NeFileCard\n    };\n  }\n  get filePickerCards() {\n    return this._filePickerCards;\n  }\n  set filePickerCards(value) {\n    const oldValue = this._filePickerCards;\n    this._filePickerCards = value;\n    this.requestUpdate('filePickerCards', oldValue);\n  }\n  get dragover() {\n    return this._dragover;\n  }\n  set dragover(value) {\n    const oldValue = this._dragover;\n    this._dragover = value;\n    this.requestUpdate('dragover', oldValue);\n  }\n  static get styles() {\n    return styles$1;\n  }\n  static get properties() {\n    return {\n      filePickerCards: {\n        type: Array\n      },\n      singleFile: {\n        type: Boolean\n      },\n      dragover: {\n        type: Boolean\n      },\n      accepts: {\n        type: String\n      }\n    };\n  }\n  constructor() {\n    super();\n    /**\n     * This attribute specifies whether or not the bound element is allow to upload multiple number of files. If set to true, it allow to upload only single file. By default, the attribute is true.\n     */\n    this.singleFile = false;\n    this._filePickerCards = [];\n    this._dragover = false;\n    this._inputRef = createRef();\n    this.preventDefaults = e => {\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true\n      });\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    this.handleClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n    this._handleChange = async e => {\n      const files = e?.target?.files;\n      await this.getFiles(files);\n    };\n    this.onDrop = async e => {\n      if (e) {\n        if (e.type === 'drop' && e.dataTransfer) {\n          const {\n            files\n          } = e.dataTransfer;\n          await this.getFiles(files);\n        }\n      }\n      fire(this, 'ne-drop', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: e.target.value,\n          data: e.target.files,\n          originalEvent: e\n        }\n      });\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      this.dragover = false;\n    };\n    this.onDragOver = () => {\n      this.dragover = true;\n    };\n    this.onDragOverEnd = () => {\n      this.dragover = false;\n    };\n    this.filePickerCards = [];\n    this.dragover = false;\n  }\n  connectedCallback() {\n    // eslint-disable-next-line wc/guard-super-call\n    super.connectedCallback();\n    ['dragover', 'dragleave', 'drop'].forEach(eventName => {\n      this.addEventListener(eventName, this.preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach(eventName => {\n      this.addEventListener(eventName, this.onDragOver, false);\n    });\n    ['dragleave', 'drop'].forEach(eventName => {\n      this.addEventListener(eventName, this.onDragOverEnd, false);\n    });\n    this.addEventListener('drop', this.onDrop, false);\n  }\n  disconnectedCallback() {\n    ['dragover', 'dragleave', 'drop'].forEach(eventName => {\n      this.removeEventListener(eventName, this.preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach(eventName => {\n      this.removeEventListener(eventName, this.onDragOver, false);\n    });\n    ['dragleave', 'drop'].forEach(eventName => {\n      this.removeEventListener(eventName, this.onDragOverEnd, false);\n    });\n    this.removeEventListener('drop', this.onDrop, false);\n    // eslint-disable-next-line wc/guard-super-call\n    super.disconnectedCallback();\n  }\n  _handleClick() {\n    const fileInput = this._inputRef.value;\n    fileInput?.click();\n    this.handleClick();\n  }\n  async getFiles(files) {\n    if (files) {\n      const fileCardsList = this.filePickerCards;\n      let idx = 0;\n      if (this.filePickerCards.length > 0) {\n        idx = this.filePickerCards.length;\n      }\n      let breakMe = false;\n      Array.from(files).forEach((value, index) => {\n        if (!breakMe) {\n          const file = value;\n          fileCardsList.push({\n            id: idx !== 0 ? String(index + idx) : String(index),\n            fileName: file.name,\n            fileSize: file.size\n          });\n          if (this.singleFile && files.length > 1) {\n            breakMe = true;\n          }\n        }\n      });\n      this.filePickerCards = fileCardsList;\n      if (this.onChange) {\n        this.onChange(files);\n      }\n    }\n    this.requestUpdate();\n  }\n  async onDelete(e, id, filePickerCards) {\n    fire(this, 'ne-click', {\n      composed: true,\n      bubbles: true\n    });\n    this.filePickerCards = filePickerCards.filter(item => item.id !== id);\n    if (this.onChange) {\n      this.onChange(this.filePickerCards);\n    }\n    this.requestUpdate();\n  }\n  renderForm(uploadFilesContainer) {\n    const fileStr = this.singleFile ? 'file' : 'files';\n    if (!this.dragover) {\n      return html` <form class=\"form-container\" enctype=\"multipart/form-data\">\n        <div class=\"file-picker-container\">\n          ${uploadFilesContainer}\n          <div class=\"file-picker-message\">\n            <input\n              ${ref(this._inputRef)}\n              @input=\"${this._handleChange}\"\n              type=\"file\"\n              ?multiple=\"${!this.singleFile}\"\n              tabindex=\"-1\"\n              id=\"default-file-input\"\n              name=\"select-file-input\"\n              accept=\"${this.accepts}\"\n            />\n            <label\n              draggable=\"true\"\n              id=\"Select ${fileStr}\"\n              for=\"${this.id}-button\"\n              aria-label=\"Drag ${fileStr} here\"\n            >\n              Drag ${fileStr} here or\n            </label>\n            <ne-button\n              id=\"${this.id}-button\"\n              variant=\"secondary\"\n              @click=${this._handleClick}\n              ne-aria-label=\"Select ${fileStr}\"\n              tabindex=\"0\"\n              >Select ${fileStr}\n            </ne-button>\n          </div>\n        </div>\n      </form>`;\n    }\n    return html` <div class=\"file-picker-container\">\n      <ne-file-dropzone\n        id=\"${this.id}-dropzone\"\n        ?singleFile=\"${this.singleFile}\"\n        .handleChange=\"${this._handleChange}\"\n      ></ne-file-dropzone>\n    </div>`;\n  }\n  render() {\n    const fileCards = [];\n    const uploadFilesContainer = [];\n    if (this.filePickerCards) {\n      for (const item of this.filePickerCards) {\n        fileCards.push(html` <ne-file-card\n          .id=${item.id}\n          .fileName=${item.fileName}\n          .fileSize=\"${ifDefined(item.fileSize)}\"\n          .onDelete=\"${(e, id) => this.onDelete(e, id, this.filePickerCards)}\"\n        ></ne-file-card>`);\n      }\n      if (fileCards) {\n        uploadFilesContainer.push(html` <div class=\"upload-files-container\">${fileCards}</div>`);\n      }\n    }\n    return this.singleFile && fileCards.length === 1 ? html`${uploadFilesContainer}` : html`\n          <div\n            class=${classMap({\n      'drag-file-area': true,\n      'dragging-over-area': this.dragover\n    })}\n          >\n            ${this.renderForm(uploadFilesContainer)}\n          </div>\n        `;\n  }\n};\n__decorate([property()], NeFilePicker.prototype, \"onChange\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeFilePicker.prototype, \"singleFile\", void 0);\n__decorate([property({\n  type: String\n})], NeFilePicker.prototype, \"accepts\", void 0);\n__decorate([property({\n  type: Array,\n  reflect: true\n})], NeFilePicker.prototype, \"filePickerCards\", null);\nNeFilePicker = __decorate([customElement('ne-file-picker')], NeFilePicker);\n\nexport { NeFilePicker as N, NeFileDropzone as a };\n//# sourceMappingURL=file-picker-d0e02807.js.map\n","import { nothing, html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { until } from 'lit/directives/until.js';\n\nconst iconLookup = {\n  _export: () => import('./_export-de25e895.js').then(x => x._export),\n  _import: () => import('./_import-8064398d.js').then(x => x._import),\n  add: () => import('./add-ecd09d1a.js').then(x => x.add),\n  archive: () => import('./archive-d2c5ad4f.js').then(x => x.archive),\n  arrowDown: () => import('./arrowDown-555a28e1.js').then(x => x.arrowDown),\n  arrowUp: () => import('./arrowUp-9b5629d6.js').then(x => x.arrowUp),\n  caretDown: () => import('./caretDown-7f7286c8.js').then(x => x.caretDown),\n  caretLeft: () => import('./caretLeft-308038e5.js').then(x => x.caretLeft),\n  caretRight: () => import('./caretRight-1410368f.js').then(x => x.caretRight),\n  caretUp: () => import('./caretUp-64d19119.js').then(x => x.caretUp),\n  check: () => import('./check-132c9894.js').then(x => x.check),\n  chevronDown: () => import('./chevronDown-eb47b21f.js').then(x => x.chevronDown),\n  chevronLeft: () => import('./chevronLeft-f0139883.js').then(x => x.chevronLeft),\n  chevronLightDown: () => import('./chevronLightDown-1dcd16ff.js').then(x => x.chevronLightDown),\n  chevronLightLeft: () => import('./chevronLightLeft-213c4c09.js').then(x => x.chevronLightLeft),\n  chevronLightRight: () => import('./chevronLightRight-589da5b7.js').then(x => x.chevronLightRight),\n  chevronLightUp: () => import('./chevronLightUp-ae84e278.js').then(x => x.chevronLightUp),\n  chevronRight: () => import('./chevronRight-bfcbcd0f.js').then(x => x.chevronRight),\n  chevronUp: () => import('./chevronUp-322a0eba.js').then(x => x.chevronUp),\n  closeDefault: () => import('./closeDefault-e6da3ad8.js').then(x => x.closeDefault),\n  dangerExclamation: () => import('./dangerExclamation-0305ece2.js').then(x => x.dangerExclamation),\n  dropzone: () => import('./dropzone-70166a79.js').then(x => x.dropzone),\n  feedback: () => import('./feedback-e8ecb764.js').then(x => x.feedback),\n  file: () => import('./file-4ab02705.js').then(x => x.file),\n  hide: () => import('./hide-d6fa62d1.js').then(x => x.hide),\n  info: () => import('./info-29eea0cd.js').then(x => x.info),\n  maximise: () => import('./maximise-5bf50b00.js').then(x => x.maximise),\n  meatballs: () => import('./meatballs-c388d76a.js').then(x => x.meatballs),\n  minus: () => import('./minus-018729c4.js').then(x => x.minus),\n  openInNewWindow: () => import('./openInNewWindow-e12de645.js').then(x => x.openInNewWindow),\n  process: () => import('./process-cef14086.js').then(x => x.process),\n  processModel: () => import('./processModel-21be796e.js').then(x => x.processModel),\n  publish: () => import('./publish-4da999be.js').then(x => x.publish),\n  refresh: () => import('./refresh-71d6cc8d.js').then(x => x.refresh),\n  save: () => import('./save-01c1b022.js').then(x => x.save),\n  schedule: () => import('./schedule-7eaebbfd.js').then(x => x.schedule),\n  search: () => import('./search-b1b062da.js').then(x => x.search),\n  show: () => import('./show-ceb3bba3.js').then(x => x.show),\n  success: () => import('./success-7fb9f336.js').then(x => x.success),\n  summary: () => import('./summary-da7addaa.js').then(x => x.summary),\n  tick: () => import('./tick-28cf727d.js').then(x => x.tick),\n  trash: () => import('./trash-56a13cc6.js').then(x => x.trash),\n  user: () => import('./user-6fce53af.js').then(x => x.user),\n  users: () => import('./users-99c1c348.js').then(x => x.users),\n  versionHistory: () => import('./versionHistory-baec5ad8.js').then(x => x.versionHistory),\n  warningExclamation: () => import('./warningExclamation-4a694e7e.js').then(x => x.warningExclamation)\n};\n\nconst placeHolderIcon = () => html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 16 16\"\n></svg>`;\n/**\n * The base function for rendering an icon, this can be use to aviod lazy loading of SVG resources\n * @returns The html element with the SVG icon rendered\n */\nconst renderIcon = ({\n  type,\n  typeAsHtml,\n  fixedSize,\n  className\n}) => {\n  if (!type && !typeAsHtml) {\n    return nothing;\n  }\n  if (type && !(type in iconLookup)) {\n    // eslint-disable-next-line no-console\n    console.warn('Icon not found', type);\n    return nothing;\n  }\n  const iconPromise = type ? iconLookup[type]() : Promise.resolve(typeAsHtml);\n  return html`\n    <div\n      aria-hidden=\"true\"\n      class=${className || 'ne-icon'}\n      style=${styleMap({\n    height: fixedSize,\n    width: fixedSize,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  })}\n    >\n      ${until(iconPromise, placeHolderIcon())}\n    </div>\n  `;\n};\n\nexport { renderIcon as r };\n//# sourceMappingURL=icon.base-7a919db2.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property, customElement } from 'lit/decorators.js';\nimport { t as tokens } from './label.tokens-3df70200.js';\n\nconst baseLabel = css`\n  * {\n    color: var(--ne-label-color-title);\n    font-family: var(--ne-label-font-family);\n    font-size: 1em;\n  }\n\n  .outer-label {\n    display: flex;\n    font-size: var(--ne-label-font-size);\n  }\n\n  .required-indicator {\n    margin-left: var(--ne-label-gap);\n    color: var(--ne-label-color-asterisk);\n  }\n`;\nconst styles = [baseLabel, commonStyles, tokens];\n\n/**\n * @tag ne-label\n * @tagname ne-label\n *\n */\nlet NeLabel = class NeLabel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.for = '';\n    this.required = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<label\n      class=\"outer-label\"\n      id=${ifDefined(this.id)}\n      for=${ifDefined(this.for)}\n    >\n      <slot></slot>\n      ${this.required ? html`<span class=\"required-indicator\">*</span>` : nothing}\n    </label> `;\n  }\n};\n__decorate([property({\n  attribute: 'for'\n})], NeLabel.prototype, \"for\", void 0);\n__decorate([property({\n  attribute: 'required',\n  type: Boolean,\n  reflect: true\n})], NeLabel.prototype, \"required\", void 0);\nNeLabel = __decorate([customElement('ne-label')], NeLabel);\n\nexport { NeLabel };\n//# sourceMappingURL=label.js.map\n"],"names":[],"sourceRoot":""}