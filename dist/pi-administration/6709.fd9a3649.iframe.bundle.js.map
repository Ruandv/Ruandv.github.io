{"version":3,"file":"6709.fd9a3649.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;;AAgCA;;AAEA;AACA;AACA;AACA;;AASA;AACA;;;;AAMA;;AAEA;;;AAMA;;;AChHA;AACA;;AAQA;;;;;AAEA;;;;;;;;;;;;;;;;ACnEA;;AAmBA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;AC1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AA+BA;AAKA;;AAEA;;;AAKA;;AAEA;AAEA;;;;;;;;;;;;;;;;ACnFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;;AAwCA;AACA;AACA;AAKA;;;AAIA;;AAOA;AACA;AAKA;;AAEA;;AAEA;AAIA;AACA;;;AAGA;;;;;AC9JA;;;;;;;;;;;;;;;;;;;;;;;;;;ACwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AA6JA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;;AAEA;;;AAIA;AACA;;AAEA;;;AAIA;;AAiBA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;;;;;;;AChUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmBA;;;AAQA;;;;;;;;;;;;;ACpBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAwBA;;;;;;AAOA;;;;;;;;;;;;;;;;ACzDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AAmDA;AACA;AAEA;AACA;;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;;;AAGA;;AAMA;AACA;;;;AAMA;;AAGA","sources":["webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/button.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.base-7a919db2.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/label.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-menu.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-menu-item.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/lookup-field.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/button-set.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/panel.js","webpack://@pi/administration/../../node_modules/@nintexglobal/earthling-components/dist/esm/switch.js"],"sourcesContent":["import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens } from './button.tokens-e79c8bbf.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst baseButton = css`\n  .btn {\n    font-family: var(--ne-button-font-family);\n    font-size: var(--ne-button-font-size);\n    padding: var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal) var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal);\n    gap: var(--ne-button-gap);\n    border-radius: var(--ne-button-border-radius);\n    outline: none;\n    display: grid;\n    grid-auto-flow: column;\n  }\n\n  .btn:focus {\n    outline: 4px solid var(--ne-button-color-border-focus);\n  }\n\n  .btn-primary {\n    border: 1px solid var(--ne-button-color-border-primary-default);\n    color: var(--ne-button-color-label-primary-default);\n    background-color: var(--ne-button-color-background-primary-default);\n  }\n\n  .btn-primary:hover {\n    background-color: var(--ne-button-color-background-primary-hover);\n  }\n\n  .btn-primary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-primary-disabled);\n    background-color: var(--ne-button-color-background-primary-disabled);\n  }\n\n  .btn-secondary {\n    border: 1px solid var(--ne-button-color-border-secondary-default);\n    color: var(--ne-button-color-label-secondary-default);\n    background-color: var(--ne-button-color-background-secondary-default);\n  }\n\n  .btn-secondary:hover {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-secondary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-secondary-disabled);\n    background-color: var(--ne-button-color-background-secondary-disabled);\n  }\n\n  .btn-secondary:focus {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-destructive {\n    border: 1px solid var(--ne-button-color-border-destructive-default);\n    color: var(--ne-button-color-label-destructive-default);\n    background-color: var(--ne-button-color-background-destructive-default);\n  }\n\n  .btn-destructive:hover {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-destructive:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-destructive-disabled);\n    background-color: var(--ne-button-color-background-destructive-disabled);\n  }\n\n  .btn-destructive:focus {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-text {\n    border: 0;\n    color: var(--ne-button-color-label-text-default);\n    background-color: transparent;\n  }\n\n  .btn-text:hover {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-text:disabled {\n    border: 0;\n    color: var(--ne-button-color-label-text-disabled);\n    background-color: var(--ne-button-color-background-text-disabled);\n  }\n\n  .btn-text:focus {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-inverse {\n    color: var(--ne-button-color-label-inverse-default);\n    background-color: transparent;\n    border: 1px solid var(--ne-button-color-border-inverse-default);\n  }\n\n  .btn-inverse:hover {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .btn-inverse:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-inverse-disabled);\n    background-color: var(--ne-button-color-background-inverse-disabled);\n  }\n\n  .btn-inverse:focus {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .icon-slot {\n    min-width: 18px;\n    max-width: 18px;\n  }\n`;\nconst styles = [tokens, baseButton, commonStyles];\n\nconst buttonVariantsArray = ['primary', 'secondary', 'destructive', 'text', 'inverse'];\n/**\n * @tag ne-button\n * @tagname ne-button\n *\n * @slot default This is where the contents of the button will be inserted\n *\n * @event ne-click Raised when the button is clicked.\n */\nlet NeButton = class NeButton extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies that a button should be disabled */\n    this.disabled = false;\n    /** Specifies the text that will be read by the screen reader */\n    this.ariaLabel = '';\n    this.variant = 'primary';\n    this.onClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`\n      <button\n        id=${this.id}\n        type=\"button\"\n        ?disabled=${this.disabled}\n        @click=\"${this.onClick}\"\n        aria-label=${this.ariaLabel || nothing}\n        class=${classMap({\n      btn: true,\n      'btn-primary': this.variant === 'primary',\n      'btn-secondary': this.variant === 'secondary',\n      'btn-destructive': this.variant === 'destructive',\n      'btn-text': this.variant === 'text',\n      'btn-inverse': this.variant === 'inverse'\n    })}\n      >\n        <span class=${this.leftIconType !== undefined ? 'icon-slot' : 'hidden'}>\n          <slot name=\"left\">${renderIcon({\n      type: this.leftIconType\n    })}</slot>\n        </span>\n        <slot></slot>\n        <span\n          class=${this.rightIconType !== undefined ? 'icon-slot' : 'hidden'}\n        >\n          <slot name=\"right\">${renderIcon({\n      type: this.rightIconType\n    })}</slot>\n        </span>\n      </button>\n    `;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeButton.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon',\n  reflect: true\n})], NeButton.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'right-icon',\n  reflect: true\n})], NeButton.prototype, \"rightIconType\", void 0);\n__decorate([property({\n  reflect: true\n})], NeButton.prototype, \"variant\", void 0);\nNeButton = __decorate([customElement('ne-button')], NeButton);\n\nexport { NeButton, buttonVariantsArray };\n//# sourceMappingURL=button.js.map\n","import { nothing, html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { until } from 'lit/directives/until.js';\n\nconst iconLookup = {\n  _export: () => import('./_export-de25e895.js').then(x => x._export),\n  _import: () => import('./_import-8064398d.js').then(x => x._import),\n  add: () => import('./add-ecd09d1a.js').then(x => x.add),\n  archive: () => import('./archive-d2c5ad4f.js').then(x => x.archive),\n  arrowDown: () => import('./arrowDown-555a28e1.js').then(x => x.arrowDown),\n  arrowUp: () => import('./arrowUp-9b5629d6.js').then(x => x.arrowUp),\n  caretDown: () => import('./caretDown-7f7286c8.js').then(x => x.caretDown),\n  caretLeft: () => import('./caretLeft-308038e5.js').then(x => x.caretLeft),\n  caretRight: () => import('./caretRight-1410368f.js').then(x => x.caretRight),\n  caretUp: () => import('./caretUp-64d19119.js').then(x => x.caretUp),\n  check: () => import('./check-132c9894.js').then(x => x.check),\n  chevronDown: () => import('./chevronDown-eb47b21f.js').then(x => x.chevronDown),\n  chevronLeft: () => import('./chevronLeft-f0139883.js').then(x => x.chevronLeft),\n  chevronLightDown: () => import('./chevronLightDown-1dcd16ff.js').then(x => x.chevronLightDown),\n  chevronLightLeft: () => import('./chevronLightLeft-213c4c09.js').then(x => x.chevronLightLeft),\n  chevronLightRight: () => import('./chevronLightRight-589da5b7.js').then(x => x.chevronLightRight),\n  chevronLightUp: () => import('./chevronLightUp-ae84e278.js').then(x => x.chevronLightUp),\n  chevronRight: () => import('./chevronRight-bfcbcd0f.js').then(x => x.chevronRight),\n  chevronUp: () => import('./chevronUp-322a0eba.js').then(x => x.chevronUp),\n  closeDefault: () => import('./closeDefault-e6da3ad8.js').then(x => x.closeDefault),\n  dangerExclamation: () => import('./dangerExclamation-0305ece2.js').then(x => x.dangerExclamation),\n  dropzone: () => import('./dropzone-70166a79.js').then(x => x.dropzone),\n  feedback: () => import('./feedback-e8ecb764.js').then(x => x.feedback),\n  file: () => import('./file-4ab02705.js').then(x => x.file),\n  hide: () => import('./hide-d6fa62d1.js').then(x => x.hide),\n  info: () => import('./info-29eea0cd.js').then(x => x.info),\n  maximise: () => import('./maximise-5bf50b00.js').then(x => x.maximise),\n  meatballs: () => import('./meatballs-c388d76a.js').then(x => x.meatballs),\n  minus: () => import('./minus-018729c4.js').then(x => x.minus),\n  openInNewWindow: () => import('./openInNewWindow-e12de645.js').then(x => x.openInNewWindow),\n  process: () => import('./process-cef14086.js').then(x => x.process),\n  processModel: () => import('./processModel-21be796e.js').then(x => x.processModel),\n  publish: () => import('./publish-4da999be.js').then(x => x.publish),\n  refresh: () => import('./refresh-71d6cc8d.js').then(x => x.refresh),\n  save: () => import('./save-01c1b022.js').then(x => x.save),\n  schedule: () => import('./schedule-7eaebbfd.js').then(x => x.schedule),\n  search: () => import('./search-b1b062da.js').then(x => x.search),\n  show: () => import('./show-ceb3bba3.js').then(x => x.show),\n  success: () => import('./success-7fb9f336.js').then(x => x.success),\n  summary: () => import('./summary-da7addaa.js').then(x => x.summary),\n  tick: () => import('./tick-28cf727d.js').then(x => x.tick),\n  trash: () => import('./trash-56a13cc6.js').then(x => x.trash),\n  user: () => import('./user-6fce53af.js').then(x => x.user),\n  users: () => import('./users-99c1c348.js').then(x => x.users),\n  versionHistory: () => import('./versionHistory-baec5ad8.js').then(x => x.versionHistory),\n  warningExclamation: () => import('./warningExclamation-4a694e7e.js').then(x => x.warningExclamation)\n};\n\nconst placeHolderIcon = () => html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 16 16\"\n></svg>`;\n/**\n * The base function for rendering an icon, this can be use to aviod lazy loading of SVG resources\n * @returns The html element with the SVG icon rendered\n */\nconst renderIcon = ({\n  type,\n  typeAsHtml,\n  fixedSize,\n  className\n}) => {\n  if (!type && !typeAsHtml) {\n    return nothing;\n  }\n  if (type && !(type in iconLookup)) {\n    // eslint-disable-next-line no-console\n    console.warn('Icon not found', type);\n    return nothing;\n  }\n  const iconPromise = type ? iconLookup[type]() : Promise.resolve(typeAsHtml);\n  return html`\n    <div\n      aria-hidden=\"true\"\n      class=${className || 'ne-icon'}\n      style=${styleMap({\n    height: fixedSize,\n    width: fixedSize,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  })}\n    >\n      ${until(iconPromise, placeHolderIcon())}\n    </div>\n  `;\n};\n\nexport { renderIcon as r };\n//# sourceMappingURL=icon.base-7a919db2.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property, customElement } from 'lit/decorators.js';\nimport { t as tokens } from './label.tokens-3df70200.js';\n\nconst baseLabel = css`\n  * {\n    color: var(--ne-label-color-title);\n    font-family: var(--ne-label-font-family);\n    font-size: 1em;\n  }\n\n  .outer-label {\n    display: flex;\n    font-size: var(--ne-label-font-size);\n  }\n\n  .required-indicator {\n    margin-left: var(--ne-label-gap);\n    color: var(--ne-label-color-asterisk);\n  }\n`;\nconst styles = [baseLabel, commonStyles, tokens];\n\n/**\n * @tag ne-label\n * @tagname ne-label\n *\n */\nlet NeLabel = class NeLabel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.for = '';\n    this.required = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<label\n      class=\"outer-label\"\n      id=${ifDefined(this.id)}\n      for=${ifDefined(this.for)}\n    >\n      <slot></slot>\n      ${this.required ? html`<span class=\"required-indicator\">*</span>` : nothing}\n    </label> `;\n  }\n};\n__decorate([property({\n  attribute: 'for'\n})], NeLabel.prototype, \"for\", void 0);\n__decorate([property({\n  attribute: 'required',\n  type: Boolean,\n  reflect: true\n})], NeLabel.prototype, \"required\", void 0);\nNeLabel = __decorate([customElement('ne-label')], NeLabel);\n\nexport { NeLabel };\n//# sourceMappingURL=label.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-menu-color-elevated-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-elevated-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-dropdown-menu-color-flat-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-flat-border: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-dropdown-menu-border-radius-elevated: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-border-radius-flat-top: var(--ne-ref-border-radius-none, 0);\n  --ne-dropdown-menu-border-radius-flat-bottom: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-padding-horizontal: var(--ne-ref-spacing-none, 0);\n  --ne-dropdown-menu-padding-vertical: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-dropdown-menu-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-dropdown-menu-shadow-elevated: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n}\n`;\n\nconst baseDropdownMenu = css`\n  .dropdown-menu {\n    margin: 0;\n    padding: var(--ne-dropdown-menu-padding-vertical)\n      var(--ne-dropdown-menu-padding-horizontal);\n    border-width: var(--ne-dropdown-menu-border-width);\n    border-style: solid;\n  }\n\n  .dropdown-menu.elevated {\n    border-color: var(--ne-dropdown-menu-color-elevated-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-elevated);\n    background-color: var(--ne-dropdown-menu-color-elevated-background);\n    box-shadow: 3px 3px 5px rgb(22 23 24 / 10%);\n  }\n\n  .dropdown-menu.flat {\n    border-color: var(--ne-dropdown-menu-color-flat-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-bottom)\n      var(--ne-dropdown-menu-border-radius-flat-bottom);\n    background-color: var(--ne-dropdown-menu-color-flat-background);\n  }\n\n  .dropdown-menu .fixed-height {\n    /* Shows 6 rows */\n    max-height: calc(10 * (1em * 1.2));\n    overflow-y: auto;\n  }\n\n  .dropdown-menu-footer {\n    padding: 0 14px;\n  }\n\n  .dropdown-menu ::slotted(li) {\n    display: block;\n  }\n`;\nconst styles = [tokens, baseDropdownMenu, commonStyles];\n\nconst dropdownMenuVariantsArray = ['elevated', 'flat'];\n/**\n * @description Control that renders a dropdown menu that can be used by and connected to other components (for example the toolbar button, the dropdown field).\n *\n * @slot default A list of elements to be displayed as items in the dropdown menu can be inserted here (it is suggested to use a list of 'ne-dropdown-menu-item' elements)\n */\nlet NeDropdownMenu = class NeDropdownMenu extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the text that will be read by the screen reader\n     */\n    this.ariaLabel = '';\n    /**\n     * Specifies the variant to be rendered (currently the options are 'elevated' or 'flat')\n     */\n    this.variant = 'elevated';\n    /**\n     * Specifies if the menu should be the pre-defined height.\n     */\n    this.fixedHeight = false;\n    this.showFooterActions = false;\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=${classMap({\n      'dropdown-menu': true,\n      elevated: this.variant === 'elevated',\n      flat: this.variant === 'flat'\n    })}\n      aria-label=${this.ariaLabel || nothing}\n    >\n      <div class=${classMap({\n      'fixed-height': this.fixedHeight === true\n    })}>\n        <slot></slot>\n      </div>\n      ${this.showFooterActions ? html`<div class=\"dropdown-menu-footer\">\n            <slot name=\"footer-items\"></slot>\n          </div>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeDropdownMenu.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  reflect: true\n})], NeDropdownMenu.prototype, \"variant\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownMenu.prototype, \"fixedHeight\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenu.prototype, \"showFooterActions\", void 0);\nNeDropdownMenu = __decorate([customElement('ne-dropdown-menu')], NeDropdownMenu);\n\nexport { NeDropdownMenu, dropdownMenuVariantsArray };\n//# sourceMappingURL=dropdown-menu.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { state, queryAssignedNodes, property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-menu-item-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-dropdown-menu-item-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-dropdown-menu-item-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-dropdown-menu-item-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-item-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-dropdown-menu-item-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-menu-item-color-text-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-dropdown-menu-item-color-subtext-default: var(--ne-ref-color-grey-60, #575C61);\n  --ne-dropdown-menu-item-color-subtext-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-dropdown-menu-item-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-dropdown-menu-item-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-dropdown-menu-item-font-size-option: var(--ne-ref-font-size-04, 0.875em);\n  --ne-dropdown-menu-item-border-width-focus: var(--ne-ref-border-width-large, 4px);\n}\n`;\n\nconst baseDropdownMenuItem = css`\n  .dropdown-menu-item {\n    position: relative;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-content: flex-start;\n    width: 100%;\n    box-sizing: border-box;\n    padding: calc(\n        var(--ne-dropdown-menu-item-padding-vertical) -\n          var(--ne-dropdown-menu-item-border-width-focus)\n      )\n      calc(\n        var(--ne-dropdown-menu-item-padding-horizontal) -\n          var(--ne-dropdown-menu-item-border-width-focus)\n      );\n    border: var(--ne-dropdown-menu-item-border-width-focus) solid\n      var(--ne-dropdown-menu-item-color-background-default);\n    outline: none;\n    background-color: var(--ne-dropdown-menu-item-color-background-default);\n    font-family: var(--ne-dropdown-menu-item-font-family);\n    font-size: var(--ne-dropdown-menu-item-font-size-option);\n    color: var(--ne-dropdown-menu-item-color-text-default);\n    text-align: left;\n    white-space: nowrap;\n  }\n\n  .multi-select {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto auto;\n  }\n\n  .multi-select .checkbox {\n    grid-area: 1 / 1 / 3 / 2; /* Span 2 rows starting from row 1 */\n  }\n\n  .multi-select .text-span {\n    grid-area: 1 / 2 / 2 / 3; /* Span 1 row starting from column 2 */\n  }\n\n  .multi-select .subtext-span {\n    grid-area: 2 / 2 / 3 / 3; /* Span 1 row starting from column 2 */\n  }\n\n  .dropdown-menu-item:hover {\n    border-color: var(--ne-dropdown-menu-item-color-background-hover);\n    background-color: var(--ne-dropdown-menu-item-color-background-hover);\n  }\n\n  .dropdown-menu-item:disabled {\n    color: var(--ne-dropdown-menu-item-color-text-disabled);\n  }\n\n  .dropdown-menu-item:focus,\n  .dropdown-menu-item:focus:hover {\n    border-color: var(--ne-dropdown-menu-item-color-border-focus);\n  }\n\n  .dropdown-menu-item .subtext-span {\n    font-size: var(--ne-dropdown-menu-item-font-size-subtext);\n    color: var(--ne-dropdown-menu-item-color-subtext-default);\n  }\n\n  .dropdown-menu-item:disabled .subtext-span {\n    color: var(--ne-dropdown-menu-item-color-subtext-disabled);\n  }\n`;\nconst styles = [tokens, baseDropdownMenuItem, commonStyles];\n\nlet NeDropdownMenuItem = class NeDropdownMenuItem extends LitElement {\n  constructor() {\n    super(...arguments);\n    this._hasSubTextSlot = false;\n    this.disabled = false;\n    this.ariaLabel = '';\n    this.text = '';\n    this.checked = false;\n    this.isMultiSelect = false;\n    this._onSlotChanged = () => {\n      if (this._subTextSlot && this._subTextSlot.length > 0) {\n        this._hasSubTextSlot = true;\n      } else {\n        this._hasSubTextSlot = false;\n      }\n    };\n    this._onClick = () => {\n      if (!this.disabled) {\n        fire(this, 'ne-click', {\n          composed: true,\n          bubbles: false\n        });\n      }\n    };\n    this._onKeyDown = evt => {\n      switch (evt.code) {\n        case 'Space':\n        case 'Enter':\n        case 'NumpadEnter':\n          this._onClick();\n          evt.preventDefault();\n          evt.stopPropagation();\n          break;\n      }\n    };\n    this.renderMultiSelect = () => html`<div\n    class=\"dropdown-menu-item\"\n    tabindex=\"0\"\n    ?disabled=${this.disabled}\n    @keydown=${this._onKeyDown}\n    @click=${e => {\n      e.stopPropagation();\n      e.preventDefault();\n      this._onClick();\n    }}\n    aria-label=${this.ariaLabel || nothing}\n  >\n    <slot name=\"multi-select\"></slot>\n  </div>`;\n    this.renderSingleSelect = () => {\n      let hasSubtextProp = false;\n      if (this.subText && this.subText.length > 0) {\n        hasSubtextProp = true;\n      }\n      return html`<button\n      class=\"dropdown-menu-item\"\n      ?disabled=${this.disabled}\n      @click=${e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this._onClick();\n      }}\n      aria-label=${this.ariaLabel || nothing}\n    >\n      <span class=\"text-span\"><slot>${this.text}</slot></span>\n      <span\n        class=${classMap({\n        'subtext-span': true,\n        hidden: !this._hasSubTextSlot && !hasSubtextProp\n      })}\n        ><slot name=\"sub-text\" @slotchange=${this._onSlotChanged}\n          >${this.subText}</slot\n        ></span\n      >\n    </button>`;\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`${this.isMultiSelect ? this.renderMultiSelect() : this.renderSingleSelect()}`;\n  }\n};\n__decorate([state()], NeDropdownMenuItem.prototype, \"_hasSubTextSlot\", void 0);\n__decorate([queryAssignedNodes({\n  slot: 'sub-text',\n  flatten: true\n})], NeDropdownMenuItem.prototype, \"_subTextSlot\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'text'\n})], NeDropdownMenuItem.prototype, \"text\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'sub-text',\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"subText\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenuItem.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenuItem.prototype, \"isMultiSelect\", void 0);\nNeDropdownMenuItem = __decorate([customElement('ne-dropdown-menu-item')], NeDropdownMenuItem);\n\nexport { NeDropdownMenuItem };\n//# sourceMappingURL=dropdown-menu-item.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst base = css`\n  :host {\n    display: grid;\n    color: inherit;\n  }\n`;\nconst styles = [commonStyles, base];\n\n/**\n * @tag ne-icon\n * @tagname ne-icon\n *\n * @description Control that renders an SVG icon, this will typically be used inside of other elements such as a toolbar button.\n *\n * @cssproperty {color} [color] Icon color inheted from the parent color\n */\nlet NeIcon = class NeIcon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.fixedSize = '';\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return renderIcon({\n      type: this.type,\n      fixedSize: this.fixedSize\n    });\n  }\n};\n__decorate([property({\n  attribute: 'type',\n  reflect: true\n})], NeIcon.prototype, \"type\", void 0);\n__decorate([property({\n  type: String\n})], NeIcon.prototype, \"fixedSize\", void 0);\nNeIcon = __decorate([customElement('ne-icon')], NeIcon);\n\nexport { NeIcon };\n//# sourceMappingURL=icon.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { when } from 'lit/directives/when.js';\nimport { f as fire } from './events-1173f562.js';\nimport { NeDropdownMenu } from './dropdown-menu.js';\nimport { NeDropdownMenuItem } from './dropdown-menu-item.js';\nimport { NeIcon } from './icon.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/**\n * Escapes regex control characters found in a string.\n * @param text - The text to escape for Regex\n * @returns The escaped text\n */\nconst escapeForRegExp = text => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-lookup-field-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-lookup-field-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-lookup-field-color-text-placeholder: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-lookup-field-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-lookup-field-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-lookup-field-color-icon: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-border-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-lookup-field-color-border-active: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-lookup-field-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-lookup-field-color-border-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-lookup-field-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-lookup-field-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-content-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-lookup-field-border-radius-active-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-lookup-field-border-radius-active-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-lookup-field-border-width-default: var(--ne-ref-border-width-small, 1px);\n  --ne-lookup-field-border-width-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-lookup-field-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-lookup-field-font-weight-highlight: var(--ne-ref-font-weight-bold, Bold);\n}\n`;\n\nconst base = css`\n  .container {\n    align-items: center;\n    position: relative;\n    padding: 0;\n    width: 100%;\n  }\n\n  .wrapper {\n    width: 100%;\n  }\n\n  input {\n    width: 100%;\n    padding: var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal)\n      var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal);\n    gap: var(--ne-lookup-field-content-gap);\n    border: var(--ne-lookup-field-border-width-default) solid\n      var(--ne-lookup-field-color-border-default);\n    border-radius: var(--ne-lookup-field-border-radius-default);\n    background-color: var(--ne-lookup-field-color-background-default);\n    box-sizing: border-box;\n    outline: none;\n    flex-grow: 1;\n    font-family: var(--ne-lookup-field-font-family);\n    font-size: var(--ne-lookup-field-font-size);\n    color: var(--ne-lookup-field-color-text-default);\n  }\n\n  input.has-icon {\n    padding-right: 2em;\n  }\n\n  .state-indicator.disabled {\n    background-color: var(--ne-lookup-field-color-background-disabled);\n  }\n\n  input:focus {\n    outline: var(--ne-lookup-field-border-width-focus) solid\n      var(--ne-lookup-field-color-border-focus);\n    border: 1px solid transparent;\n  }\n\n  input.active,\n  input.active:focus {\n    outline: none;\n    border: var(--ne-lookup-field-border-width-default) solid\n      var(--ne-lookup-field-color-border-active);\n    border-radius: var(--ne-lookup-field-border-radius-active-top)\n      var(--ne-lookup-field-border-radius-active-top)\n      var(--ne-lookup-field-border-radius-active-bottom)\n      var(--ne-lookup-field-border-radius-active-bottom);\n  }\n\n  input.disabled {\n    background-color: var(--ne-lookup-field-color-background-disabled);\n    border-color: var(--ne-lookup-field-color-border-disabled);\n    color: var(--ne-lookup-field-color-text-disabled);\n  }\n\n  .icon {\n    color: var(--ne-lookup-field-color-icon);\n    width: var(--ne-lookup-field-sizing-icon);\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    padding: var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal)\n      var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal);\n    cursor: unset;\n    flex-shrink: 0;\n  }\n\n  .emphasis {\n    font-weight: var(--ne-lookup-field-font-weight-highlight);\n  }\n\n  .empty-list,\n  .datalist,\n  .loading {\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n  }\n`;\nconst styles = [tokens, commonStyles, base];\n\nvar _class;\nvar NeLookupField_1;\nconst dropdownMenuVariantsArray = ['elevated', 'flat'];\n/**\n * @tag ne-lookup-field\n * @tagname ne-lookup-field\n *\n * @event ne-input Raised when the value of the internal input is changed\n * @event ne-change Raised when the value of the lookup field is changed to a valid value\n */\nlet NeLookupField = NeLookupField_1 = (_class = class NeLookupField extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-dropdown-menu-item': NeDropdownMenuItem,\n      'ne-dropdown-menu': NeDropdownMenu,\n      'ne-icon': NeIcon\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  /** Specifies the list of data linked to the lookup field */\n  set dataList(val) {\n    const oldDataList = this._dataList;\n    this._isLoading = false;\n    this._dataList = val;\n    if (this.externalListFilter) {\n      this._filteredList = val;\n    }\n    this.requestUpdate('dataList', oldDataList);\n  }\n  get dataList() {\n    return this._dataList;\n  }\n  constructor() {\n    super();\n    /** Specifies the value of the lookup field */\n    this.value = '';\n    /** Specifies the display value of the lookup field */\n    this.displayValue = '';\n    /** Specifies whether the lookup field should be disabled */\n    this.disabled = false;\n    /** Specifies whether the lookup field should be read only */\n    this.readonly = false;\n    /** Specifies whether the data list of the lookup field is filtered externally */\n    this.externalListFilter = false;\n    /** Specifies the aria-label for the lookup field */\n    this.ariaLabel = '';\n    /** Specifies the aria-labelledby for the lookup field */\n    this.ariaLabelledby = '';\n    /** Specifies the text to display in the list when no results match the search string entered */\n    this.noResultsText = 'No matches found';\n    /** Specifies the text to display in the list when the user has not typed a search string yet, and a list isnt populated */\n    this.typeToSearchText = 'Type to search';\n    /** Specifies the text to display in the list when the search to populate the list is still in progress */\n    this.searchLoadingText = 'Loading...';\n    this.dropdownVariant = 'flat';\n    this._expanded = false;\n    this._isLoading = false;\n    this._ignoreFocusOut = false;\n    this._dataList = [];\n    this._filteredList = [];\n    this._input = createRef();\n    this._searchValue = '';\n    this._previousValue = '';\n    this.updated = () => {\n      this._updateDisplayText();\n    };\n    this._updateDisplayText = () => {\n      if (this.value && this.value !== '') {\n        if (this.dataList && this.dataList.length > 0) {\n          this.displayValue = this.dataList.find(x => x.value === this.value)?.text;\n        }\n      } else {\n        this.displayValue = '';\n      }\n      if (this._input.value && this.displayValue) {\n        this._input.value.value = this.displayValue;\n      }\n    };\n    this._filterList = () => {\n      if (!this._searchValue) {\n        this._filteredList = [];\n        return;\n      }\n      const escapedSearchValue = escapeForRegExp(this._searchValue);\n      const matcher = new RegExp(escapedSearchValue, 'gi');\n      this._filteredList = this.dataList.filter(x => !!x.text.match(matcher));\n    };\n    this._onDocumentClick = () => {\n      if (!this._expanded) return;\n      this._expanded = false;\n      // When nothing has been selected from the list, show the last selected value again.\n      // Unless the input box value has been cleared, then clear the value.\n      if (this._input.value?.value && this._previousValue) {\n        this._input.value.value = this._previousValue;\n      } else {\n        fire(this, 'ne-change', {\n          composed: true,\n          bubbles: true,\n          detail: {\n            value: this.value\n          }\n        });\n      }\n    };\n    this._onDropDownMouseDown = () => {\n      this._ignoreFocusOut = true;\n    };\n    this._onMouseDown = evt => {\n      if (this.disabled || this.readonly) return;\n      // HTML data list element will expand the list when focusing with click, but not tab.\n      // It does not close when clicking again, only when clicking away or selecting.\n      this._expanded = true;\n      evt.stopPropagation();\n    };\n    this._onInput = evt => {\n      if (this.disabled || this.readonly) return;\n      this.value = '';\n      this._searchValue = this._input.value?.value;\n      this.displayValue = this._searchValue;\n      this._expanded = true;\n      this._isLoading = true;\n      if (!this.externalListFilter) {\n        this._filterList();\n      }\n      fire(this, 'ne-input', {\n        detail: {\n          data: evt.data,\n          value: this._input.value?.value\n        }\n      });\n    };\n    this._onFocusOut = () => {\n      if (!this._ignoreFocusOut) {\n        // do the same work that would be done if the user clicked out.\n        this._onDocumentClick();\n      }\n      this._ignoreFocusOut = false;\n    };\n    this._onListItemClicked = (evt, value) => {\n      this.value = value;\n      this._updateDisplayText();\n      this._searchValue = this.displayValue;\n      this._previousValue = this.displayValue;\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: this.value\n        }\n      });\n      this._expanded = false;\n    };\n    this._renderInput = () => html` <input\n    class=${classMap({\n      'has-icon': this.icon !== undefined,\n      active: this._expanded,\n      disabled: this.disabled\n    })}\n    type=\"text\"\n    ${ref(this._input)}\n    ?readonly=${this.readonly || this.disabled}\n    aria-label=${this.ariaLabel || nothing}\n    aria-labelledby=${this.ariaLabelledby || nothing}\n    placeholder=${ifDefined(this.placeholder)}\n    @keydown=${NeLookupField_1._onKeyDown}\n    @input=${this._onInput}\n    @mousedown=${this._onMouseDown}\n    @click=${NeLookupField_1._onClick}\n    @focusout=${this._onFocusOut}\n  />`;\n    this._renderListItems = () => html`<div class=\"datalist\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      ${this._filteredList.map(item => html`<ne-dropdown-menu-item\n          ne-aria-label=${ifDefined(item.ariaLabel)}\n          @ne-click=${evt => this._onListItemClicked(evt, item.value)}\n          @mousedown=${this._onDropDownMouseDown}\n          ><span>${this._renderWithHighlight(item.text)}</span>\n          <span slot=\"sub-text\">${item.subText}</span></ne-dropdown-menu-item\n        >`)}\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderEmptyList = () => html`<div class=\"empty-list\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      <ne-dropdown-menu-item disabled=\"\"\n        >${when(this._searchValue, () => this.noResultsText, () => this.typeToSearchText)}</ne-dropdown-menu-item\n      >\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderLoadingIndicator = () => html`<div class=\"loading\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      <ne-dropdown-menu-item disabled=\"\"\n        >${this.searchLoadingText}</ne-dropdown-menu-item\n      >\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderWithHighlight = text => {\n      if (!this._searchValue || !text) return text;\n      const escapedSearchValue = escapeForRegExp(this._searchValue);\n      const regex = new RegExp(escapedSearchValue, 'gi');\n      const matches = text.match(regex);\n      const splits = text.split(regex);\n      if (!matches || !splits) return text;\n      let displayElements = '';\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < splits.length - 1; i++) {\n        displayElements += `${splits[i]}<span class=\"emphasis\">${matches[i]}</span>`;\n      }\n      displayElements += `${splits[splits.length - 1]}`;\n      return html`${unsafeHTML(displayElements)}`;\n    };\n    this.render = () => html`<div class=\"container\">\n    <div class=\"state-indicator\">\n      ${this._renderInput()}\n      <div class=${this.icon !== undefined ? 'icon' : 'hidden'}>\n        <ne-icon .type=${this.icon}></ne-icon>\n      </div>\n    </div>\n    ${when(this._expanded && this._filteredList.length > 0, this._renderListItems)}\n    ${when(this._expanded && this._filteredList.length === 0 && !this._isLoading, this._renderEmptyList)}\n    ${when(this._expanded && this._filteredList.length === 0 && this._searchValue && this._isLoading, this._renderLoadingIndicator)}\n  </div>`;\n    document.addEventListener('click', this._onDocumentClick);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    document.removeEventListener('click', this._onDocumentClick);\n  }\n}, _class._onClick = evt => {\n  // We don't want the event to bubble to the document,\n  // as it will close the dropdown menu. The mouse down expands the menu.\n  evt.stopPropagation();\n}, _class._onKeyDown = evt => {\n  // This is necessay as the even bubbles out of the input box if we don't stop propagation\n  evt.stopPropagation();\n}, _class);\n__decorate([property({\n  type: String\n})], NeLookupField.prototype, \"placeholder\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'value'\n})], NeLookupField.prototype, \"value\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'display-value'\n})], NeLookupField.prototype, \"displayValue\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeLookupField.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeLookupField.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'external-list-filter',\n  reflect: true\n})], NeLookupField.prototype, \"externalListFilter\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-label',\n  reflect: true\n})], NeLookupField.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-labelledby',\n  reflect: true\n})], NeLookupField.prototype, \"ariaLabelledby\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'icon',\n  reflect: true\n})], NeLookupField.prototype, \"icon\", void 0);\n__decorate([property({\n  type: Array,\n  reflect: true\n})], NeLookupField.prototype, \"dataList\", null);\n__decorate([property({\n  type: String,\n  attribute: 'no-results-text',\n  reflect: true\n})], NeLookupField.prototype, \"noResultsText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'type-to-search-text',\n  reflect: true\n})], NeLookupField.prototype, \"typeToSearchText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'search-loading-text',\n  reflect: true\n})], NeLookupField.prototype, \"searchLoadingText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'dropdown-variant'\n})], NeLookupField.prototype, \"dropdownVariant\", void 0);\n__decorate([state()], NeLookupField.prototype, \"_expanded\", void 0);\nNeLookupField = NeLookupField_1 = __decorate([customElement('ne-lookup-field')], NeLookupField);\n\nexport { NeLookupField, dropdownMenuVariantsArray };\n//# sourceMappingURL=lookup-field.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-button-set-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-button-set-border-width: var(--ne-ref-border-width-small, 1px);\n}\n`;\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .ne-button-set {\n    display: flex;\n    flex-flow: row;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    padding-top: var(--ne-button-set-padding-vertical);\n    padding-bottom: var(--ne-button-set-padding-vertical);\n    gap: var(--ne-button-set-gap);\n    width: 100%;\n  }\n\n  .ne-button-set ::slotted(.right-start) {\n    margin-left: auto;\n  }\n\n  .divider-top {\n    border-top: solid;\n    border-top-width: var(--ne-button-set-border-width);\n    border-top-color: var(--ne-button-set-color-border);\n  }\n\n  .divider-bottom {\n    border-bottom: solid;\n    border-bottom-width: var(--ne-button-set-border-width);\n    border-bottom-color: var(--ne-button-set-color-border);\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-button-set\n * @tagname ne-button-set\n *\n * @slot default This is where the contents of the button set will be inserted\n */\nlet NeButtonSet = class NeButtonSet extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.showTopDivider = false;\n    this.showBottomDivider = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=\"${classMap({\n      'ne-button-set': true,\n      'divider-top': this.showTopDivider,\n      'divider-bottom': this.showBottomDivider\n    })}\"\n    >\n      <slot></slot>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-top'\n})], NeButtonSet.prototype, \"showTopDivider\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-bottom'\n})], NeButtonSet.prototype, \"showBottomDivider\", void 0);\nNeButtonSet = __decorate([customElement('ne-button-set')], NeButtonSet);\n\nexport { NeButtonSet };\n//# sourceMappingURL=button-set.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { NeButtonSet } from './button-set.js';\nimport 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-panel-header-font-family: var(--ne-ref-font-family-montserrat, Montserrat);\n  --ne-panel-header-font-weight: var(--ne-ref-font-weight-semi-bold, SemiBold);\n  --ne-panel-header-font-size: var(--ne-ref-font-size-08, 1.5em);\n  --ne-panel-header-title: var(--ne-ref-color-nintex-orange, #F56900);\n  --ne-panel-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-panel-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-panel-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-panel-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-panel-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-panel-gap-vertical: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseFilePanel = css`\n  .panel-container {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    border-radius: var(--ne-panel-border-radius);\n    border: var(--ne-panel-border-width) solid var(--ne-panel-color-border);\n    padding: 0 var(--ne-panel-padding-horizontal)\n      var(--ne-panel-padding-vertical) var(--ne-panel-padding-horizontal);\n    margin: 0;\n    background-color: var(--ne-panel-color-background);\n  }\n\n  .panel-header {\n    border-bottom: 1px solid var(--ne-panel-color-border);\n  }\n\n  .header-label {\n    font-family: var(--ne-panel-header-font-family);\n    font-weight: var(--ne-panel-header-font-weight);\n    font-size: var(--ne-panel-header-font-size);\n    color: var(--ne-panel-header-title);\n  }\n\n  .panel-content {\n    font-size: var(--ne-panel-font-size);\n    font-family: var(--ne-panel-font-family);\n    padding: var(--ne-panel-padding-vertical) var(--ne-panel-padding-horizontal);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\nconst styles = [baseFilePanel, commonStyles, tokens];\n\n/**\n * @tag ne-panel\n * @tagname ne-panel\n *\n */\nlet NePanel = class NePanel extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.heading = '';\n  }\n  static get scopedElements() {\n    return {\n      'ne-button-set': NeButtonSet\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html` <div class=\"panel-container\">\n      <span class=\"panel-header\">\n        <ne-button-set>\n          <label class=\"header-label\">${this.heading}</label>\n        </ne-button-set>\n      </span>\n      <p class=\"panel-content\">\n        <slot></slot>\n      </p>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String\n})], NePanel.prototype, \"heading\", void 0);\nNePanel = __decorate([customElement('ne-panel')], NePanel);\n\nexport { NePanel };\n//# sourceMappingURL=panel.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens$1 } from './label.tokens-3df70200.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-switch-border-radius: var(--ne-ref-border-radius-xl, 0.75em);\n  --ne-switch-color-background-on: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-switch-color-background-off: var(--ne-ref-color-grey-60, #575C61);\n  --ne-switch-color-background-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-switch-color-handle: var(--ne-ref-color-white, #ffffff);\n  --ne-switch-color-icon: var(--ne-ref-color-white, #ffffff);\n  --ne-switch-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-switch-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-switch-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-switch-sizing-track-height: var(--ne-ref-sizing-06, 1.5em);\n  --ne-switch-sizing-track-width: var(--ne-ref-sizing-11, 3em);\n  --ne-switch-sizing-handle: var(--ne-ref-sizing-05, 1.25em);\n  --ne-switch-border-width-focus: var(--ne-ref-border-width-large, 4px);\n}\n`;\n\nconst baseToggleButton = css`\n  .container {\n    display: flex;\n    align-items: center;\n  }\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: var(--ne-switch-sizing-track-width);\n    height: var(--ne-switch-sizing-track-height);\n  }\n\n  .switch:focus-within {\n    outline: var(--ne-switch-border-width-focus) solid\n      var(--ne-switch-color-border-focus);\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  .slider {\n    display: flex;\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--ne-switch-color-background-off);\n    transition: 0.4s;\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px var(--ne-switch-color-background-on);\n  }\n\n  input:checked + .slider {\n    background-color: var(--ne-switch-color-background-on);\n  }\n\n  .slider::before {\n    position: absolute;\n    content: '';\n    height: var(--ne-switch-sizing-handle);\n    width: var(--ne-switch-sizing-handle);\n    left: 2px;\n    bottom: 2px;\n    background-color: var(--ne-switch-color-handle);\n    transition: 0.4s;\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  .slider.checked::before {\n    left: 0;\n  }\n\n  input:checked + .slider::before {\n    transform: translateX(26px);\n  }\n\n  .slider.disabled {\n    background-color: var(--ne-switch-color-background-disabled);\n  }\n\n  input:checked + .slider.disabled {\n    background-color: var(--ne-switch-color-background-disabled);\n  }\n\n  .icon {\n    color: var(--ne-switch-color-icon);\n    align-self: center;\n    width: var(--ne-switch-sizing-icon);\n    margin: var(--ne-switch-gap);\n  }\n\n  .state-label {\n    font-family: var(--ne-label-font-family);\n    color: var(--ne-label-color-title);\n    font-size: var(--ne-label-font-size);\n    margin-left: var(--ne-label-gap);\n  }\n\n  .state-label.left {\n    padding-inline-end: var(--ne-switch-gap);\n  }\n\n  .state-label.right {\n    padding-inline-start: var(--ne-switch-gap);\n  }\n`;\nconst styles = [tokens, tokens$1, commonStyles, baseToggleButton];\n\n/**\n * @tag ne-switch\n * @tagname ne-switch\n *\n * @event ne-change Raised when the switch is toggled.\n */\nlet NeSwitch = class NeSwitch extends LitElement {\n  constructor() {\n    super(...arguments);\n    // Ref\n    this._checkboxNode = createRef();\n    // Properties\n    /** Sets the toggle status of the switch to either on or off. False by default. */\n    this.checked = false;\n    /** Specifies that the toggle switch should be disabled. False by default. */\n    this.disabled = false;\n    /** Sets the position of the label to either be on the left or right side of the toggle switch. False by default. */\n    this.invertStateLabelPlacement = false;\n    /** Show/Hide the \"On/Off\" label next to the switch. True by default. */\n    this.stateLabelVisible = true;\n    // Events\n    this._onChange = () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const {\n        checked\n      } = this._checkboxNode.value;\n      this.checked = checked;\n      if (!this.disabled) {\n        fire(this, 'ne-change', {\n          detail: {\n            checked,\n            description: this._statusLabelDescription()\n          }\n        });\n      }\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  _statusLabelDescription() {\n    if (this.checked) {\n      return 'On';\n    }\n    return 'Off';\n  }\n  render() {\n    const leftLabel = this.stateLabelVisible && this.invertStateLabelPlacement ? html`<div class=\"state-label left\">\n            ${this._statusLabelDescription()}\n          </div>` : null;\n    const rightLabel = this.stateLabelVisible && !this.invertStateLabelPlacement ? html`<div class=\"state-label right\">\n            ${this._statusLabelDescription()}\n          </div>` : null;\n    return html`\n      <div class=\"container\">\n        ${leftLabel}\n        <label class=\"switch\">\n          <input\n            id=\"checkbox\"\n            type=\"checkbox\"\n            aria-label=${this._statusLabelDescription()}\n            ${ref(this._checkboxNode)}\n            .checked=${this.checked}\n            ?disabled=${this.disabled}\n            @change=${this._onChange}\n          />\n          <span\n            class=${classMap({\n      slider: true,\n      disabled: this.disabled,\n      checked: this.checked\n    })}\n          >\n            <div class=${this.checked ? 'icon' : 'hidden'}>\n              ${renderIcon({\n      type: 'check'\n    })}\n            </div>\n          </span>\n        </label>\n        ${rightLabel}\n      </div>\n    `;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"invertStateLabelPlacement\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"stateLabelVisible\", void 0);\nNeSwitch = __decorate([customElement('ne-switch')], NeSwitch);\n\nexport { NeSwitch };\n//# sourceMappingURL=switch.js.map\n"],"names":[],"sourceRoot":""}