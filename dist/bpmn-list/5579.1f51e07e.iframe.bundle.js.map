{"version":3,"file":"5579.1f51e07e.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA+EA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AC9LA;AAKA;;AAEA;;AAQA;;AAEA;;AAQA;;;AAIA;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;;;;;;;;;;;;;;;;AC/IA;;;;;AAAA;;AAgBA;;;;;;;;;;;;;;;;AC6FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA4DA;;AAMA;;AAEA;;;AAGA;;;;AAIA;AAKA;;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AA2CA;;;;;AASA;AACA;AACA;AACA;AACA;;;AAGA;;;AAKA;AACA;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA;;;AA+BA;;;;AAIA;;;AAGA;;;;;;;AAOA;AACA;;;;AAKA;AAyCA;;;;AAOA;AACA;AACA;;;;;;;;AAQA;;;;;;AAUA;;;;;;;;;;;;;;ACpPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AA+BA;AAKA;;AAEA;;;AAKA;;AAEA;AAEA;;;;;;;;;;;;;;;;ACnFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;;;AAwCA;AACA;AACA;AAKA;;;AAIA;;AAOA;AACA;AAKA;;AAEA;;AAEA;AAIA;AACA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACvIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AAsCA;;AAEA;AACA;;AAMA;;;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;;AAsJA;AAQA;AACA;AACA;;AAEA;AACA;AAGA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;AAKA;AACA;AAGA;;AAMA;;AAGA;;;AAmCA;AACA;;AAEA;AAGA;;AAEA;;;;AAMA;AAGA;AACA;AACA;AACA;;;;AAMA;AACA;AACA;AAGA;AACA;;;;;;AAOA;AAGA;;;;;AAOA;AAGA;;;;;;AASA;;AAEA;AACA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;AClYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAkDA;;;AAKA;;AAEA;AACA;;;;;;AAMA;AACA;;;AAGA;;;;AAQA;;;;;;;;;;;;;;;;;;;ACtEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;;AA4BA;;;;AAMA;;AAEA;;AAEA;;;;;AAKA;;;AAGA;;;;AAKA;;AAiOA;AACA;AACA;;AAtCA;;AAEA;;;AAGA;AACA;;AAEA;;;;AAIA;;;;AAIA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;;;AAaA;AAOA;AACA;AACA;AACA;AAGA;;AAMA;;AAKA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5ZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAIA;AACA;;AAKA;AACA;;AAIA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;AAMA;;AAEA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjRA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AA6JA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;;AAEA;;;AAIA;AACA;;AAEA;;;AAIA;;AAiBA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;;;;;;;;;;;;;ACzTA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAwBA;;;;;;AAOA;;;;;;;;;;;;;ACxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA4BA;;;;;AAKA;;;;;;AAMA;;;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;;AAGA;;;;AAqDA;;;;;;;;;;;;;;;;;AAAA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;AC/PA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AA2BA;AACA;;AAKA;;AAEA;;AAIA;;;;AAIA;;AAMA;;AAGA;;;;;;;;;;;;;;AAiDA;;AAQA;;;;AAKA;;;;;;;;;;;;;;;;AC9MA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AAmDA;AACA;AAEA;AACA;;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;;;AAGA;;AAMA;AACA;;;;AAMA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;ACxDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAoGA;AAKA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;;;;;;ACzUA;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAeA;;;;;;;;;;;;AChBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;;AAiDA;AAIA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AACA;AAKA;AACA;AACA;;;;AAIA;;;;AAIA;;;AAIA;;;;;;;;;;;;;;;;;;ACpKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;;AAwDA;AACA;AACA;AACA;;;AAGA;;AAOA;;AAGA;;;;;;;;;;;;;;;;;;AC9FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;;;AA8BA;;AAEA;AAIA;;;AAGA;;AAIA;;;;;;AAMA;;;;AAQA;;;;;;;;;;;;;;;AChGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAsDA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAGA;;;;;;;;;;;;;;;;;;;;ACWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA6EA;AAEA;AAeA;AAEA;AArFA;AA6FA;AAGA;AACA;AAEA;AAGA;;AAEA;;AAGA;AAGA;AACA;AACA;AACA;AACA;AAIA;AA0CA;AAEA;;AA0BA;AACA;;AAIA;AACA;AAuCA;AAHA;AAWA;AAKA;AAGA;AAaA;;AAwEA;;AAEA;;AAEA;;AAKA;;AAIA;;AAEA;;AAEA;;AAEA;;AAKA;;AAKA;;;AAkDA;;;AAGA;;;AAIA;;;;;;;;;;;;;;;ACpjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAmBA;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsDA;;AAgCA;;AAEA;AACA;AACA;AACA;;AASA;AACA;;;;AAMA;;AAEA;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AAgCA;;AAEA;AACA;AACA;AACA;;AAMA;AAIA;;;ACpEA;AACA;;AAQA;;;;;AAEA;;;;;AC7EA;;;;;;;;;;;;;;;;ACUA;;AAmBA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;AAkDA;;;AAOA;AACA;;;AAGA;AACA;;;;;AAKA;AACA;;;;;;;AAOA;;;;AAKA;;;;AC7JA;;;;;;;;;;;;;AAcA;;;;;;AA2BA;;;;;;;;;;;;;;;;;AC3BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AAgDA;;;AAUA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;AAEA;;AAEA;;;AAIA;AAIA;AAHA;;ACpTA;AACA;AACA;;AAGA","sources":["webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/badge-af11fb26.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/validation.tokens-db86eca9.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/accordion.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/banner.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/checkbox.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/config-panel-87664186.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-menu.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-menu-item.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/pill.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/dropdown-field.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/file-card.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/file-picker-d0e02807.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/input.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/lookup-field.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/panel.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/progress-bar.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/radio-button-group-5a3106d2.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/stepper-c928b0de.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/switch.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/textarea.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/toast-notification-0dde6fff.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/toolbar.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/toolbar-button.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/tooltip.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/index.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components-alpha/dist/esm/link-ac065d28.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components-alpha/dist/esm/data-table.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/button-set.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/button.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon-button.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.base-7a919db2.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/icon.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/label.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/modal.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/overlay.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/spinner-aa6c59c9.js","webpack://@pi/bpmn-list/../../node_modules/@nintexglobal/earthling-components/dist/esm/status-overlay.js"],"sourcesContent":["import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, nothing, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\n\nconst BadgeVariants = {\n  default: 'default',\n  active: 'active',\n  success: 'success',\n  error: 'error',\n  info: 'info',\n  warning: 'warning'\n};\nconst BadgeContainers = {\n  filled: 'filled',\n  outline: 'outline'\n};\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-badge-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-badge-sizing-height: var(--ne-ref-sizing-06, 1.5em);\n  --ne-badge-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-badge-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-badge-color-border-filled-default: var(--ne-ref-color-grey-05, #EFF0F0);\n  --ne-badge-color-border-filled-active: var(--ne-ref-color-violet-20, #D9C1F1);\n  --ne-badge-color-border-filled-success: var(--ne-ref-color-green-50, #008738);\n  --ne-badge-color-border-filled-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-badge-color-border-filled-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-badge-color-border-filled-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-badge-color-border-outline-default: var(--ne-ref-color-grey-20, #C4C7CA);\n  --ne-badge-color-border-outline-active: var(--ne-ref-color-violet-60, #7F30CF);\n  --ne-badge-color-border-outline-success: var(--ne-ref-color-green-50, #008738);\n  --ne-badge-color-border-outline-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-badge-color-border-outline-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-badge-color-border-outline-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-badge-color-background-filled-default: var(--ne-ref-color-grey-05, #EFF0F0);\n  --ne-badge-color-background-filled-active: var(--ne-ref-color-violet-20, #D9C1F1);\n  --ne-badge-color-background-filled-success: var(--ne-ref-color-green-50, #008738);\n  --ne-badge-color-background-filled-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-badge-color-background-filled-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-badge-color-background-filled-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-badge-color-label-filled-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-badge-color-label-filled-active: var(--ne-ref-color-grey-90, #161718);\n  --ne-badge-color-label-filled-success: var(--ne-ref-color-white, #ffffff);\n  --ne-badge-color-label-filled-error: var(--ne-ref-color-white, #ffffff);\n  --ne-badge-color-label-filled-info: var(--ne-ref-color-white, #ffffff);\n  --ne-badge-color-label-filled-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-badge-color-label-outline-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-badge-color-label-outline-active: var(--ne-ref-color-violet-60, #7F30CF);\n  --ne-badge-color-label-outline-success: var(--ne-ref-color-green-50, #008738);\n  --ne-badge-color-label-outline-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-badge-color-label-outline-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-badge-color-label-outline-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-badge-border-radius: var(--ne-ref-border-radius-xl, 0.75em);\n  --ne-badge-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-badge-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-badge-font-size: var(--ne-ref-font-size-04, 0.875em);\n}\n`;\n\nconst baseBadge = css`\n  .badge {\n    height: var(--ne-badge-sizing-height);\n    padding-right: var(--ne-badge-padding-horizontal);\n    padding-left: var(--ne-badge-padding-horizontal);\n    gap: var(--ne-badge-gap);\n    border-radius: var(--ne-badge-border-radius);\n    border-width: var(--ne-badge-border-width);\n    font-family: var(--ne-badge-font-family);\n    font-size: var(--ne-badge-font-size);\n    border-style: solid;\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .badge-left-icon {\n    width: var(--ne-badge-sizing-icon);\n  }\n\n  .badge-filled-default {\n    color: var(--ne-badge-color-label-filled-default);\n    background-color: var(--ne-badge-color-background-filled-default);\n    border-color: var(--ne-badge-color-border-filled-default);\n  }\n\n  .badge-outline-default {\n    color: var(--ne-badge-color-label-outline-default);\n    background-color: var(--ne-badge-color-background-outline-default);\n    border-color: var(--ne-badge-color-border-outline-default);\n  }\n\n  .badge-filled-active {\n    color: var(--ne-badge-color-label-filled-active);\n    background-color: var(--ne-badge-color-background-filled-active);\n    border-color: var(--ne-badge-color-border-filled-active);\n  }\n\n  .badge-outline-active {\n    color: var(--ne-badge-color-label-outline-active);\n    background-color: var(--ne-badge-color-background-outline-active);\n    border-color: var(--ne-badge-color-border-outline-active);\n  }\n\n  .badge-filled-success {\n    color: var(--ne-badge-color-label-filled-success);\n    background-color: var(--ne-badge-color-background-filled-success);\n    border-color: var(--ne-badge-color-border-filled-success);\n  }\n\n  .badge-outline-success {\n    color: var(--ne-badge-color-label-outline-success);\n    background-color: var(--ne-badge-color-background-outline-success);\n    border-color: var(--ne-badge-color-border-outline-success);\n  }\n\n  .badge-filled-error {\n    color: var(--ne-badge-color-label-filled-error);\n    background-color: var(--ne-badge-color-background-filled-error);\n    border-color: var(--ne-badge-color-border-filled-error);\n  }\n\n  .badge-outline-error {\n    color: var(--ne-badge-color-label-outline-error);\n    background-color: var(--ne-badge-color-background-outline-error);\n    border-color: var(--ne-badge-color-border-outline-error);\n  }\n\n  .badge-filled-info {\n    color: var(--ne-badge-color-label-filled-info);\n    background-color: var(--ne-badge-color-background-filled-info);\n    border-color: var(--ne-badge-color-border-filled-info);\n  }\n\n  .badge-outline-info {\n    color: var(--ne-badge-color-label-outline-info);\n    background-color: var(--ne-badge-color-background-outline-info);\n    border-color: var(--ne-badge-color-border-outline-info);\n  }\n\n  .badge-filled-warning {\n    color: var(--ne-badge-color-label-filled-warning);\n    background-color: var(--ne-badge-color-background-filled-warning);\n    border-color: var(--ne-badge-color-border-filled-warning);\n  }\n\n  .badge-outline-warning {\n    color: var(--ne-badge-color-label-outline-warning);\n    background-color: var(--ne-badge-color-background-outline-warning);\n    border-color: var(--ne-badge-color-border-outline-warning);\n  }\n`;\nconst styles = [baseBadge, commonStyles, tokens];\n\n/**\n * @tag ne-badge\n * @tagname ne-badge\n *\n * @description Control that renders a badge with a label and an optional left SVG icon.\n *\n */\nlet NeBadge = class NeBadge extends LitElement {\n  constructor() {\n    super(...arguments);\n    /** Specifies the text that will displayed on the badge */\n    this.label = '';\n    /** Specifies whether or not to show left icon inside the badge */\n    this.showLeftIcon = false;\n    /** Specifies the variant of the badge to display */\n    this.variant = BadgeVariants.default;\n    /** Specifies the container of the badge to display */\n    this.container = BadgeContainers.filled;\n  }\n  static get styles() {\n    return styles;\n  }\n  _getBadgeClasses() {\n    const isFilled = this.container === BadgeContainers.filled;\n    const isOutline = this.container === BadgeContainers.outline;\n    const isDefault = this.variant === BadgeVariants.default;\n    const isActive = this.variant === BadgeVariants.active;\n    const isSuccess = this.variant === BadgeVariants.success;\n    const isError = this.variant === BadgeVariants.error;\n    const isInfo = this.variant === BadgeVariants.info;\n    const isWarning = this.variant === BadgeVariants.warning;\n    return {\n      badge: true,\n      'badge-filled-default': isFilled && isDefault,\n      'badge-outline-default': isOutline && isDefault,\n      'badge-filled-active': isFilled && isActive,\n      'badge-outline-active': isOutline && isActive,\n      'badge-filled-success': isFilled && isSuccess,\n      'badge-outline-success': isOutline && isSuccess,\n      'badge-filled-error': isFilled && isError,\n      'badge-outline-error': isOutline && isError,\n      'badge-filled-info': isFilled && isInfo,\n      'badge-outline-info': isOutline && isInfo,\n      'badge-filled-warning': isFilled && isWarning,\n      'badge-outline-warning': isOutline && isWarning\n    };\n  }\n  _getBadgeIconType() {\n    switch (this.variant) {\n      case BadgeVariants.active:\n        return Icons.success;\n      case BadgeVariants.success:\n        return Icons.success;\n      case BadgeVariants.error:\n        return Icons.dangerExclamation;\n      case BadgeVariants.info:\n        return Icons.info;\n      case BadgeVariants.warning:\n        return Icons.warningExclamation;\n      case BadgeVariants.default:\n      default:\n        return Icons.user;\n    }\n  }\n  _renderBadgeLeftIcon() {\n    if (!this.showLeftIcon) {\n      return nothing;\n    }\n    const iconType = this.leftIconOverride || this._getBadgeIconType();\n    return renderIcon({\n      type: iconType\n    });\n  }\n  render() {\n    const classes = this._getBadgeClasses();\n    return html`\n      <div\n        id=${this.id}\n        role=\"alert\"\n        aria-label=${this.label || nothing}\n        class=${classMap(classes)}\n      >\n        <span class=${this.showLeftIcon ? 'badge-left-icon' : 'hidden'}>\n          ${this._renderBadgeLeftIcon()}\n        </span>\n        ${this.label}\n      </div>\n    `;\n  }\n};\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeBadge.prototype, \"label\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeBadge.prototype, \"showLeftIcon\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeBadge.prototype, \"leftIconOverride\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeBadge.prototype, \"variant\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeBadge.prototype, \"container\", void 0);\nNeBadge = __decorate([customElement('ne-badge')], NeBadge);\n\nexport { BadgeVariants as B, NeBadge as N, BadgeContainers as a };\n//# sourceMappingURL=badge-af11fb26.js.map\n","import { _ as __decorate } from './base.styles-11d39181.js';\nimport { LitElement, html, css } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { property } from 'lit/decorators.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\n\n/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nvar ValidationType;\n(function (ValidationType) {\n  ValidationType[\"default\"] = \"default\";\n  ValidationType[\"none\"] = \"none\";\n  ValidationType[\"warning\"] = \"warning\";\n  ValidationType[\"error\"] = \"error\";\n})(ValidationType || (ValidationType = {}));\n\nclass ValidationBaseComponent extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /**\n     * A short description why the validation failed\n     */\n    this.validationMessage = '';\n    /**\n     * Specifies the type of state the validation is in. This can be one of the following : \"default\", \"none\", \"warning\", \"error\"\n     */\n    this.validationState = ValidationType.default;\n  }\n  get isInvalid() {\n    switch (this.validationState) {\n      case ValidationType.error:\n      case ValidationType.warning:\n        return true;\n      default:\n        return false;\n    }\n  }\n  renderWithValidation(componentContent) {\n    let iconType;\n    switch (this.validationState) {\n      case ValidationType.error:\n        iconType = Icons.dangerExclamation;\n        break;\n      case ValidationType.warning:\n        iconType = Icons.warningExclamation;\n        break;\n      default:\n        iconType = undefined;\n        break;\n    }\n    let icon = '';\n    if (this.validationState !== ValidationType.default) {\n      icon = html`<div class=\"validation-icon\">\n        ${renderIcon({\n        type: iconType\n      })}\n      </div>`;\n    }\n    return html`\n      <div\n        class=${classMap({\n      'validation-wrapper': true,\n      none: this.validationState === ValidationType.none,\n      default: this.validationState === ValidationType.default || !this.validationState,\n      error: this.validationState === ValidationType.error,\n      warning: this.validationState === ValidationType.warning\n    })}\n      >\n        ${componentContent}\n        <div\n          class=${classMap({\n      'message-container': true,\n      none: this.validationState === ValidationType.none,\n      default: this.validationState === ValidationType.default || !this.validationState,\n      error: this.validationState === ValidationType.error,\n      warning: this.validationState === ValidationType.warning\n    })}\n        >\n          ${icon} <label>${this.isInvalid ? this.validationMessage : ''}</label>\n        </div>\n      </div>\n    `;\n  }\n}\n__decorate([property({\n  reflect: true,\n  attribute: 'validation-message'\n})], ValidationBaseComponent.prototype, \"validationMessage\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'validation-state'\n})], ValidationBaseComponent.prototype, \"validationState\", void 0);\n\nconst validationLayoutStyles = css`\n  .validation-wrapper {\n    width: 100%;\n    height: 100%;\n  }\n\n  .message-container {\n    display: grid;\n    grid-template-columns: var(--ne-icon-size-default) auto;\n    grid-template-rows: auto;\n    justify-items: flex-start;\n    align-items: center;\n  }\n\n  .validation-icon {\n    min-width: var(--ne-icon-size-default);\n    padding-top: var(--ne-help-message-padding-vertical);\n    height: 100%;\n  }\n`;\nconst validationStyles = css`\n  .message-container {\n    width: 100%;\n    font-size: var(--ne-help-message-font-size);\n    font-family: var(--ne-help-message-font-family);\n    box-sizing: border-box;\n    border-radius: var(--ne-help-message-border-radius-top)\n      var(--ne-help-message-border-radius-top)\n      var(--ne-help-message-border-radius-bottom)\n      var(--ne-help-message-border-radius-bottom);\n    gap: var(--ne-help-message-gap);\n    padding: var(--ne-help-message-padding-vertical)\n      var(--ne-help-message-padding-horizontal);\n  }\n\n  .message-container.default,\n  .message-container.none {\n    display: none;\n  }\n\n  .message-container.warning {\n    color: var(--ne-help-message-color-label-warning);\n    background-color: var(--ne-help-message-color-background-warning);\n    gap: var(--ne-help-message-padding-horizontal);\n    grid-column: 1 / span 1;\n    grid-row: 1 / span 1;\n  }\n\n  .message-container.error {\n    gap: var(--ne-help-message-padding-horizontal);\n    color: var(--ne-help-message-color-label-error);\n    background-color: var(--ne-help-message-color-background-error);\n    grid-column: 1 / span 1;\n    grid-row: 1 / span 1;\n  }\n`;\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-help-message-color-background-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-help-message-color-background-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-help-message-color-label-error: var(--ne-ref-color-white, #ffffff);\n  --ne-help-message-color-label-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-help-message-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-help-message-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-help-message-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-help-message-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-help-message-border-radius-top: var(--ne-ref-border-radius-none, 0);\n  --ne-help-message-border-radius-bottom: var(--ne-ref-border-radius-medium, .25em);\n  --ne-help-message-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-help-message-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-help-message-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-help-message-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-help-message-sizing-icon: var(--ne-ref-sizing-04, 1em);\n}\n`;\n\nexport { ValidationBaseComponent as V, validationStyles as a, ValidationType as b, tokens as t, validationLayoutStyles as v };\n//# sourceMappingURL=validation.tokens-db86eca9.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nconst baseAccordion = css`\n  .accordion-container {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst styles = [baseAccordion, commonStyles];\n\n/**\n * @tag ne-accordion\n * @tagname ne-accordion\n *\n * @slot default This is where the contents of the accordion will be inserted\n */\nlet NeAccordion = class NeAccordion extends LitElement {\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div class=\"accordion-container\">\n      <slot></slot>\n    </div>`;\n  }\n};\nNeAccordion = __decorate([customElement('ne-accordion')], NeAccordion);\n\nexport { NeAccordion };\n//# sourceMappingURL=accordion.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NeIcon } from './icon.js';\nimport { f as fire } from './events-1173f562.js';\nimport { A as AlertType } from './alertType-bddadb4d.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-banner-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-banner-color-background-success: var(--ne-ref-color-green-50, #008738);\n  --ne-banner-color-background-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-banner-color-background-danger: var(--ne-ref-color-red-50, #E60000);\n  --ne-banner-color-background-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-banner-color-label-default: var(--ne-ref-color-white, #ffffff);\n  --ne-banner-color-label-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-banner-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-banner-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-banner-shadow: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n  --ne-banner-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-banner-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-banner-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n}\n`;\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .banner {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: top;\n    align-content: center;\n    padding: var(--ne-banner-padding-horizontal) var(--ne-banner-padding-vertical);\n    box-sizing: border-box;\n    box-shadow: var(--ne-banner-shadow)\n    border: none;\n    border-radius: var(--ne-banner-border-radius-default);\n    align-items: flex-start\n  }\n\n  .info {\n    background-color: var(--ne-banner-color-background-info);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .success {\n    background-color: var(--ne-banner-color-background-success);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .danger {\n    background-color: var(--ne-banner-color-background-danger);\n    color: var(--ne-banner-color-label-default);\n  }\n\n  .warning {\n    background-color: var(--ne-banner-color-background-warning);\n    color: var(--ne-banner-color-label-warning);\n  }\n\n  .content {\n    flex-grow: 1;\n    word-wrap: break-word;\n    font-family: var(--ne-banner-font-family);\n    font-size: var(--ne-banner-font-size);\n  }\n\n  .banner.closable .content {\n    padding-right: 0;\n  }\n\n  .icon {\n    flex-shrink: 0;\n    display: grid;\n    box-sizing: border-box;\n    background-color: transparent;\n    padding-top: var(--ne-ref-spacing-xxx-small);\n\n  }\n\n  .type-icon {\n    min-width: var(--ne-banner-sizing-icon);\n    height: var(--ne-banner-sizing-icon);\n    margin: 0 var(--ne-banner-gap);\n  }\n\n  .close-button {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: none;\n    border-radius: var(--ne-button-border-radius);\n    min-width: var(--ne-banner-sizing-icon);\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n  \n  .close-button * {\n    cursor: pointer;\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-banner\n * @tagname ne-banner\n *\n * @description Control to render a banner at the top of the screen by content supplied to an unnamed slot.\n *\n * @slot default The slot can be any string or HTML Element with child elements that makes out the content of the banner\n *\n * @event ne-close Raised when the internal built in close button is clicked\n */\nlet NeBanner = class NeBanner extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the variant type of the banner. Currently \"info\", \"success\" and \"danger\" is supported\n     */\n    this.variantType = AlertType.info;\n    /**\n     * Specifies whether the banner should have a built in close button or not.\n     */\n    this.closable = false;\n    // Events\n    this._onClose = () => {\n      fire(this, 'ne-close', {});\n    };\n    // Functions\n    this.getTypeIcon = () => {\n      let iconType;\n      // eslint-disable-next-line default-case\n      switch (this.variantType) {\n        case AlertType.info:\n          iconType = Icons.info;\n          break;\n        case AlertType.success:\n          iconType = Icons.success;\n          break;\n        case AlertType.danger:\n          iconType = Icons.dangerExclamation;\n          break;\n        case AlertType.warning:\n          iconType = Icons.warningExclamation;\n          break;\n      }\n      return html`<ne-icon type=${iconType}></ne-icon>`;\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon\n    };\n  }\n  render() {\n    return html`<div\n      role=\"alert\"\n      class=\"${classMap({\n      banner: true,\n      [this.variantType]: true,\n      closable: this.closable\n    })}\"\n    >\n      <span class=\"icon type-icon\">${this.getTypeIcon()}</span>\n      <div class=\"content\"><slot></slot></div>\n      ${this.closable ? html`<button\n            id=\"close-button\"\n            class=\"close-button\"\n            @click=\"${this._onClose}\"\n            aria-label=\"close\"\n          >\n            <span\n              class=\"${classMap({\n      icon: true,\n      'type-icon': true,\n      [this.variantType]: true\n    })}\"\n              ><ne-icon type=${Icons.closeDefault}></ne-icon\n            ></span>\n          </button>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  attribute: 'type',\n  reflect: true\n})], NeBanner.prototype, \"variantType\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeBanner.prototype, \"closable\", void 0);\nNeBanner = __decorate([customElement('ne-banner')], NeBanner);\n\nexport { NeBanner };\n//# sourceMappingURL=banner.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { check } from './check-132c9894.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-checkbox-sizing-rectangle: var(--ne-ref-sizing-04, 1em);\n  --ne-checkbox-sizing-tick: var(--ne-ref-sizing-04, 1em);\n  --ne-checkbox-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-checkbox-padding-subtext: var(--ne-ref-spacing-x-large, 2em);\n  --ne-checkbox-color-background-selected-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-checkbox-color-background-selected-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-checkbox-color-background-selected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-checkbox-color-background-selected-focus: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-checkbox-color-background-unselected-default: var(--ne-ref-color-white, #ffffff);\n  --ne-checkbox-color-background-unselected-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-checkbox-color-background-unselected-hover: var(--ne-ref-color-white, #ffffff);\n  --ne-checkbox-color-background-unselected-focus: var(--ne-ref-color-white, #ffffff);\n  --ne-checkbox-color-tick: var(--ne-ref-color-white, #ffffff);\n  --ne-checkbox-color-border-selected-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-checkbox-color-border-selected-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-checkbox-color-border-selected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-checkbox-color-border-selected-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-checkbox-color-border-unselected-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-checkbox-color-border-unselected-disabled: var(--ne-ref-color-grey40, #898F94);\n  --ne-checkbox-color-border-unselected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-checkbox-color-border-unselected-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-checkbox-color-text-enabled-option: var(--ne-ref-color-grey-90, #161718);\n  --ne-checkbox-color-text-enabled-subtext: var(--ne-ref-color-grey-60, #575C61);\n  --ne-checkbox-color-text-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-checkbox-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-checkbox-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-checkbox-font-size-option: var(--ne-ref-font-size-04, 0.875em);\n  --ne-checkbox-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-checkbox-border-radius: var(--ne-ref-border-radius-small, 0.125em);\n  --ne-checkbox-focus: var(--ne-ref-border-width-large, 4px);\n}\n`;\n\nconst baseCheckbox = css`\n  * {\n    font-family: var(--ne-checkbox-font-family);\n  }\n\n  .checkbox-container {\n    display: flex;\n    cursor: pointer;\n  }\n\n  .checkbox-input {\n    position: absolute;\n    z-index: 9999;\n    opacity: 0;\n    cursor: pointer;\n  }\n\n  .checkbox-control {\n    background-color: var(--ne-checkbox-color-background-unselected-default);\n    border: var(--ne-checkbox-border-width) solid\n      var(--ne-checkbox-color-border-unselected-default);\n    position: relative;\n    width: var(--ne-checkbox-sizing-rectangle);\n    min-width: var(--ne-checkbox-sizing-rectangle);\n    height: var(--ne-checkbox-sizing-rectangle);\n    border-radius: var(--ne-checkbox-border-radius);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--ne-checkbox-color-tick);\n  }\n\n  .checkbox-control svg {\n    width: var(--ne-checkbox-sizing-tick);\n  }\n\n  .checkbox-text-container {\n    display: flex;\n    flex-direction: column;\n    margin-inline-start: var(--ne-checkbox-gap);\n  }\n\n  .checkbox-text {\n    font-size: var(--ne-checkbox-font-size-option);\n  }\n\n  .checkbox-subtext {\n    font-size: var(--ne-checkbox-font-size-subtext);\n    color: var(--ne-checkbox-color-text-enabled-subtext);\n  }\n\n  /* Checked */\n  .checkbox-container.checkbox-container-checked .checkbox-control {\n    border-color: var(--ne-checkbox-color-border-selected-default);\n    background-color: var(--ne-checkbox-color-background-selected-default);\n    margin-bottom: var(--ne-checkbox-focus);\n  }\n\n  .checkbox-container.checkbox-container-disabled .checkbox-control {\n    border-color: var(--ne-checkbox-color-border-unselected-disabled);\n    background-color: var(--ne-checkbox-color-background-unselected-disabled);\n    cursor: not-allowed;\n  }\n\n  /* Focused - not checked */\n  .checkbox-container:not(\n      .checkbox-container-checked,\n      .checkbox-container-disabled\n    )\n    .checkbox-input:focus\n    ~ .checkbox-control {\n    outline: solid var(--ne-checkbox-focus)\n      var(--ne-checkbox-color-border-unselected-focus);\n  }\n\n  /* Focused - checked */\n  .checkbox-container.checkbox-container-checked:not(\n      .checkbox-container-disabled\n    )\n    .checkbox-input:focus\n    ~ .checkbox-control {\n    outline: solid var(--ne-checkbox-focus)\n      var(--ne-checkbox-color-border-selected-focus);\n    background-color: var(--ne-checkbox-color-background-selected-focus);\n  }\n\n  /* Disabled */\n  .checkbox-container.checkbox-container-disabled {\n    cursor: not-allowed;\n  }\n\n  .checkbox-container.checkbox-container-disabled .checkbox-text {\n    color: var(--ne-checkbox-color-text-disabled);\n  }\n\n  .checkbox-container.checkbox-container-disabled .checkbox-subtext {\n    color: var(--ne-checkbox-color-text-disabled);\n  }\n\n  .checkbox-container.checkbox-container-disabled .checkbox-input {\n    cursor: not-allowed;\n  }\n\n  /* Hovered - not checked */\n  .checkbox-container:not(.checkbox-container-checked).checkbox-container:not(\n      .checkbox-container-disabled\n    )\n    .checkbox-input:hover\n    ~ .checkbox-control {\n    border-color: var(--ne-checkbox-color-border-unselected-hover);\n    background-color: var(--ne-checkbox-color-background-unselected-hover);\n  }\n\n  /* Hovered - checked */\n  .checkbox-container.checkbox-container-checked.checkbox-container:not(\n      .checkbox-container-disabled\n    )\n    .checkbox-input:hover\n    ~ .checkbox-control {\n    border-color: var(--ne-checkbox-color-border-selected-hover);\n    background-color: var(--ne-checkbox-color-background-selected-hover);\n  }\n`;\nconst styles = [baseCheckbox, commonStyles, tokens];\n\n/**\n * @tag ne-checkbox\n * @tagname ne-checkbox\n *\n * @description Control that renders a checkbox that can be used in forms, or independently.\n *\n * @event ne-click Raised when the checkbox is clicked\n */\nlet NeCheckbox = class NeCheckbox extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the display label is bound to this option\n     */\n    this.text = '';\n    /**\n     * Specifies the additional description of the checkbox is bound to this option. Not required.\n     */\n    this.subText = '';\n    /**\n     * Specifies whether or not the bound element is checked. False by default.\n     */\n    this.checked = false;\n    /**\n     * Specifies that an input should be disabled. False by default.\n     */\n    this.disabled = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  onClick() {\n    fire(this, 'ne-click', {\n      composed: true,\n      bubbles: true\n    });\n    this.checked = !this.checked;\n  }\n  render() {\n    return html`\n      <label\n        class=${classMap({\n      'checkbox-container': true,\n      'checkbox-container-checked': this.checked,\n      'checkbox-container-disabled': this.disabled\n    })}\n      >\n        <input\n          class=\"checkbox-input\"\n          type=\"checkbox\"\n          tabindex=${this.tabIndex.toString()}\n          .disabled=${this.disabled}\n          .checked=${this.checked}\n          aria-checked=${this.checked ? 'true' : 'false'}\n          @click=\"${this.onClick}\"\n        />\n        <span class=\"checkbox-control\">\n          ${this.checked ? renderIcon({\n      typeAsHtml: check\n    }) : nothing}\n        </span>\n        <div class=\"checkbox-text-container\">\n          <span class=\"checkbox-text\">${this.text}</span>\n          ${this.subText ? html`<span class=\"checkbox-subtext\">${this.subText}</span>` : nothing}\n        </div>\n      </label>\n    `;\n  }\n};\n__decorate([property({\n  type: String\n})], NeCheckbox.prototype, \"text\", void 0);\n__decorate([property({\n  type: String\n})], NeCheckbox.prototype, \"subText\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeCheckbox.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeCheckbox.prototype, \"disabled\", void 0);\nNeCheckbox = __decorate([customElement('ne-checkbox')], NeCheckbox);\n\nexport { NeCheckbox };\n//# sourceMappingURL=checkbox.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { property, customElement, state } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NeIcon } from './icon.js';\nimport { NeIconButton } from './icon-button.js';\nimport { NeButtonSet } from './button-set.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-config-panel-sizing-header-icon-bg: var(--ne-ref-sizing-11, 3em);\n  --ne-config-panel-sizing-header-icon: var(--ne-ref-sizing-08, 2em);\n  --ne-config-panel-sizing-header-bar-width: var(--ne-ref-sizing-01, 0.25em);\n  --ne-config-panel-sizing-width-small: var(--ne-ref-sizing-17, 24em);\n  --ne-config-panel-sizing-width-large: var(--ne-ref-sizing-20, 48em);\n  --ne-config-panel-color-background: var(--ne-ref-color-white, #ffffff);\n  --ne-config-panel-color-header-bar: var(--ne-ref-color-nintex-orange, #F56900);\n  --ne-config-panel-color-header-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-config-panel-color-header-title: var(--ne-ref-color-grey-90, #161718);\n  --ne-config-panel-color-header-subtitle: var(--ne-ref-color-grey-60, #575C61);\n  --ne-config-panel-color-header-icon: var(--ne-ref-color-white, #ffffff);\n  --ne-config-panel-color-header-icon-bg: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-config-panel-shadow: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n  --ne-config-panel-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-config-panel-header-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-config-panel-header-padding-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-config-panel-header-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-config-panel-button-set-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-config-panel-border-width-header: var(--ne-ref-border-width-small, 1px);\n  --ne-config-panel-font-family-header-title: var(--ne-ref-font-family-montserrat, Montserrat);\n  --ne-config-panel-font-family-header-subtitle: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-config-panel-font-size-header-title: var(--ne-ref-font-size-06, 1.125em);\n  --ne-config-panel-font-size-header-subtitle: var(--ne-ref-font-size-04, 0.875em);\n  --ne-config-panel-font-weight-header-title: var(--ne-ref-font-weight-regular, Regular);\n  --ne-config-panel-font-weight-header-subtitle: var(--ne-ref-font-weight-regular, Regular);\n  --ne-config-panel-line-height-header-title: var(--ne-ref-line-height-08, 1.5em);\n  --ne-config-panel-line-height-header-subtitle: var(--ne-ref-line-height-08, 1.5em);\n  --ne-config-panel-border-radius-header-icon-bg: var(--ne-ref-border-radius-medium, .25em);\n}\n`;\n\nconst base$1 = css`\n  :host {\n    width: 100%;\n    height: 100%;\n  }\n\n  .ne-config-panel {\n    position: relative;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-content: center;\n    height: 100%;\n    box-shadow: var(--ne-config-panel-shadow);\n    background: var(--ne-config-panel-color-background);\n  }\n\n  .small {\n    width: var(--ne-config-panel-sizing-width-small);\n  }\n\n  .large {\n    width: var(--ne-config-panel-sizing-width-large);\n  }\n\n  .content {\n    height: 100%;\n    padding: var(--ne-config-panel-padding);\n  }\n\n  .footer {\n    padding-left: var(--ne-config-panel-button-set-padding-horizontal);\n    padding-right: var(--ne-config-panel-button-set-padding-horizontal);\n  }\n\n  .hide {\n    display: none;\n  }\n`;\nconst styles$1 = [base$1, commonStyles, tokens];\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .ne-config-panel-header {\n    padding-right: var(--ne-config-panel-header-padding-horizontal);\n    padding-left: var(--ne-config-panel-header-padding-horizontal);\n    border-left: var(--ne-config-panel-sizing-header-bar-width) solid\n      var(--ne-config-panel-color-header-bar);\n    border-bottom: var(--ne-config-panel-border-width-header) solid\n      var(--ne-config-panel-color-header-border);\n  }\n\n  .header-content {\n    display: flex;\n    flex-flow: row nowrap;\n    padding-top: var(--ne-config-panel-header-padding-vertical);\n    padding-bottom: var(--ne-config-panel-header-padding-vertical);\n    gap: var(--ne-config-panel-header-padding-gap);\n  }\n\n  .header-icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: var(--ne-config-panel-sizing-header-icon-bg);\n    height: var(--ne-config-panel-sizing-header-icon-bg);\n    background: var(--ne-config-panel-color-header-icon-bg);\n    border-radius: var(--ne-config-panel-border-radius-header-icon-bg);\n  }\n\n  .icon {\n    color: var(--ne-config-panel-color-header-icon);\n    width: var(--ne-config-panel-sizing-header-icon);\n    height: var(--ne-config-panel-sizing-header-icon);\n  }\n\n  .header-text {\n    display: flex;\n    flex-flow: column;\n    word-wrap: break-word;\n    flex: 1;\n  }\n\n  .title-label {\n    color: var(--ne-config-panel-color-header-title);\n    font-family: var(--ne-config-panel-font-family-header-title);\n    font-size: var(--ne-config-panel-font-size-header-title);\n    font-weight: var(--ne-config-panel-font-weight-header-title);\n    line-height: var(--ne-config-panel-line-height-header-title);\n  }\n\n  .subtitle-label {\n    color: var(--ne-config-panel-color-header-subtitle);\n    font-family: var(--ne-config-panel-font-family-header-subtitle);\n    font-size: var(--ne-config-panel-font-size-header-subtitle);\n    font-weight: var(--ne-config-panel-font-weight-header-subtitle);\n    line-height: var(--ne-config-panel-line-height-header-subtitle);\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-config-panel-header\n * @tagname ne-config-panel-header\n *\n */\nlet NeConfigPanelHeader = class NeConfigPanelHeader extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.titleText = '';\n    this.subtitleText = '';\n    // Events\n    this._onClose = () => {\n      fire(this, 'ne-close', {});\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon,\n      'ne-icon-button': NeIconButton\n    };\n  }\n  render() {\n    return html`<div class=\"ne-config-panel-header\">\n      <div id=\"header-content\" class=\"header-content\">\n        <div id=\"header-icon\" class=\"header-icon\">\n          <ne-icon id=\"icon\" class=\"icon\" type=\"${this.icon}\"></ne-icon>\n        </div>\n        <div id=\"header-text\" class=\"header-text\">\n          <label id=\"title-label\" class=\"title-label\">\n            ${this.titleText}\n          </label>\n          <label id=\"subtitle-label\" class=\"subtitle-label\">\n            ${this.subtitleText}\n          </label>\n        </div>\n        <ne-icon-button\n          id=\"close-button\"\n          class=\"close-button\"\n          variant=\"dark\"\n          icon=${Icons.closeDefault}\n          @click=${this._onClose}\n          ne-aria-label=\"close-button\"\n        ></ne-icon-button>\n      </div>\n    </div> `;\n  }\n};\n__decorate([property({\n  reflect: true,\n  attribute: 'icon'\n})], NeConfigPanelHeader.prototype, \"icon\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'title-text'\n})], NeConfigPanelHeader.prototype, \"titleText\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'subtitle-text'\n})], NeConfigPanelHeader.prototype, \"subtitleText\", void 0);\nNeConfigPanelHeader = __decorate([customElement('ne-config-panel-header')], NeConfigPanelHeader);\n\nconst PanelSize = {\n  small: 'small',\n  large: 'large'\n};\nlet NeConfigPanel = class NeConfigPanel extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    // Properties\n    this.size = PanelSize.small;\n    this.titleText = '';\n    this.subtitleText = '';\n    this._hideFooter = false;\n  }\n  // Styles\n  static get styles() {\n    return styles$1;\n  }\n  static get scopedElements() {\n    return {\n      'ne-config-panel-header': NeConfigPanelHeader,\n      'ne-button-set': NeButtonSet\n    };\n  }\n  render() {\n    return html`<div\n      class=\"${classMap({\n      'ne-config-panel': true,\n      [this.size]: true\n    })}\"\n    >\n      <div id=\"header\" class=\"header\">\n        <ne-config-panel-header\n          .icon=${this.icon}\n          .titleText=${this.titleText}\n          .subtitleText=${this.subtitleText}\n        >\n        </ne-config-panel-header>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n      <div\n        class=\"${classMap({\n      footer: true,\n      hide: this._hideFooter\n    })}\"\n      >\n        <ne-button-set class=\"button-set\" show-divider-top=\"true\">\n          <slot name=\"footer\"></slot>\n        </ne-button-set>\n      </div>\n    </div>`;\n  }\n  firstUpdated() {\n    // Check if Footer Slot has node(s) assigned. Nodes can only be detected after first render. If not detected, hide footer\n    const slot = this?.shadowRoot?.querySelector('slot[name=footer]');\n    this._hideFooter = slot?.assignedNodes().length === 0;\n  }\n};\n__decorate([property({\n  attribute: 'panel-size',\n  reflect: true\n})], NeConfigPanel.prototype, \"size\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'icon'\n})], NeConfigPanel.prototype, \"icon\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'title-text'\n})], NeConfigPanel.prototype, \"titleText\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'subtitle-text'\n})], NeConfigPanel.prototype, \"subtitleText\", void 0);\n__decorate([state()], NeConfigPanel.prototype, \"_hideFooter\", void 0);\nNeConfigPanel = __decorate([customElement('ne-config-panel')], NeConfigPanel);\n\nexport { NeConfigPanel as N, PanelSize as P, NeConfigPanelHeader as a };\n//# sourceMappingURL=config-panel-87664186.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-menu-color-elevated-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-elevated-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-dropdown-menu-color-flat-background: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-color-flat-border: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-dropdown-menu-border-radius-elevated: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-border-radius-flat-top: var(--ne-ref-border-radius-none, 0);\n  --ne-dropdown-menu-border-radius-flat-bottom: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-menu-padding-horizontal: var(--ne-ref-spacing-none, 0);\n  --ne-dropdown-menu-padding-vertical: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-dropdown-menu-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-dropdown-menu-shadow-elevated: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n}\n`;\n\nconst baseDropdownMenu = css`\n  .dropdown-menu {\n    margin: 0;\n    padding: var(--ne-dropdown-menu-padding-vertical)\n      var(--ne-dropdown-menu-padding-horizontal);\n    border-width: var(--ne-dropdown-menu-border-width);\n    border-style: solid;\n  }\n\n  .dropdown-menu.elevated {\n    border-color: var(--ne-dropdown-menu-color-elevated-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-elevated);\n    background-color: var(--ne-dropdown-menu-color-elevated-background);\n    box-shadow: 3px 3px 5px rgb(22 23 24 / 10%);\n  }\n\n  .dropdown-menu.flat {\n    border-color: var(--ne-dropdown-menu-color-flat-border);\n    border-radius: var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-top)\n      var(--ne-dropdown-menu-border-radius-flat-bottom)\n      var(--ne-dropdown-menu-border-radius-flat-bottom);\n    background-color: var(--ne-dropdown-menu-color-flat-background);\n  }\n\n  .dropdown-menu .fixed-height {\n    /* Shows 6 rows */\n    max-height: calc(10 * (1em * 1.2));\n    overflow-y: auto;\n  }\n\n  .dropdown-menu-footer {\n    padding: 0 14px;\n  }\n\n  .dropdown-menu ::slotted(li) {\n    display: block;\n  }\n`;\nconst styles = [tokens, baseDropdownMenu, commonStyles];\n\nconst dropdownMenuVariantsArray = ['elevated', 'flat'];\n/**\n * @description Control that renders a dropdown menu that can be used by and connected to other components (for example the toolbar button, the dropdown field).\n *\n * @slot default A list of elements to be displayed as items in the dropdown menu can be inserted here (it is suggested to use a list of 'ne-dropdown-menu-item' elements)\n */\nlet NeDropdownMenu = class NeDropdownMenu extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the text that will be read by the screen reader\n     */\n    this.ariaLabel = '';\n    /**\n     * Specifies the variant to be rendered (currently the options are 'elevated' or 'flat')\n     */\n    this.variant = 'elevated';\n    /**\n     * Specifies if the menu should be the pre-defined height.\n     */\n    this.fixedHeight = false;\n    this.showFooterActions = false;\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=${classMap({\n      'dropdown-menu': true,\n      elevated: this.variant === 'elevated',\n      flat: this.variant === 'flat'\n    })}\n      aria-label=${this.ariaLabel || nothing}\n    >\n      <div class=${classMap({\n      'fixed-height': this.fixedHeight === true\n    })}>\n        <slot></slot>\n      </div>\n      ${this.showFooterActions ? html`<div class=\"dropdown-menu-footer\">\n            <slot name=\"footer-items\"></slot>\n          </div>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeDropdownMenu.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  reflect: true\n})], NeDropdownMenu.prototype, \"variant\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownMenu.prototype, \"fixedHeight\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenu.prototype, \"showFooterActions\", void 0);\nNeDropdownMenu = __decorate([customElement('ne-dropdown-menu')], NeDropdownMenu);\n\nexport { NeDropdownMenu, dropdownMenuVariantsArray };\n//# sourceMappingURL=dropdown-menu.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { state, queryAssignedNodes, property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-menu-item-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-dropdown-menu-item-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-dropdown-menu-item-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-dropdown-menu-item-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-menu-item-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-dropdown-menu-item-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-menu-item-color-text-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-dropdown-menu-item-color-subtext-default: var(--ne-ref-color-grey-60, #575C61);\n  --ne-dropdown-menu-item-color-subtext-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-dropdown-menu-item-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-dropdown-menu-item-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-dropdown-menu-item-font-size-option: var(--ne-ref-font-size-04, 0.875em);\n  --ne-dropdown-menu-item-border-width-focus: var(--ne-ref-border-width-large, 4px);\n}\n`;\n\nconst baseDropdownMenuItem = css`\n  .dropdown-menu-item {\n    position: relative;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-content: flex-start;\n    width: 100%;\n    box-sizing: border-box;\n    padding: calc(\n        var(--ne-dropdown-menu-item-padding-vertical) -\n          var(--ne-dropdown-menu-item-border-width-focus)\n      )\n      calc(\n        var(--ne-dropdown-menu-item-padding-horizontal) -\n          var(--ne-dropdown-menu-item-border-width-focus)\n      );\n    border: var(--ne-dropdown-menu-item-border-width-focus) solid\n      var(--ne-dropdown-menu-item-color-background-default);\n    outline: none;\n    background-color: var(--ne-dropdown-menu-item-color-background-default);\n    font-family: var(--ne-dropdown-menu-item-font-family);\n    font-size: var(--ne-dropdown-menu-item-font-size-option);\n    color: var(--ne-dropdown-menu-item-color-text-default);\n    text-align: left;\n    white-space: nowrap;\n  }\n\n  .multi-select {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-rows: auto auto;\n  }\n\n  .multi-select .checkbox {\n    grid-area: 1 / 1 / 3 / 2; /* Span 2 rows starting from row 1 */\n  }\n\n  .multi-select .text-span {\n    grid-area: 1 / 2 / 2 / 3; /* Span 1 row starting from column 2 */\n  }\n\n  .multi-select .subtext-span {\n    grid-area: 2 / 2 / 3 / 3; /* Span 1 row starting from column 2 */\n  }\n\n  .dropdown-menu-item:hover {\n    border-color: var(--ne-dropdown-menu-item-color-background-hover);\n    background-color: var(--ne-dropdown-menu-item-color-background-hover);\n  }\n\n  .dropdown-menu-item:disabled {\n    color: var(--ne-dropdown-menu-item-color-text-disabled);\n  }\n\n  .dropdown-menu-item:focus,\n  .dropdown-menu-item:focus:hover {\n    border-color: var(--ne-dropdown-menu-item-color-border-focus);\n  }\n\n  .dropdown-menu-item .subtext-span {\n    font-size: var(--ne-dropdown-menu-item-font-size-subtext);\n    color: var(--ne-dropdown-menu-item-color-subtext-default);\n  }\n\n  .dropdown-menu-item:disabled .subtext-span {\n    color: var(--ne-dropdown-menu-item-color-subtext-disabled);\n  }\n`;\nconst styles = [tokens, baseDropdownMenuItem, commonStyles];\n\nlet NeDropdownMenuItem = class NeDropdownMenuItem extends LitElement {\n  constructor() {\n    super(...arguments);\n    this._hasSubTextSlot = false;\n    this.disabled = false;\n    this.ariaLabel = '';\n    this.text = '';\n    this.checked = false;\n    this.isMultiSelect = false;\n    this._onSlotChanged = () => {\n      if (this._subTextSlot && this._subTextSlot.length > 0) {\n        this._hasSubTextSlot = true;\n      } else {\n        this._hasSubTextSlot = false;\n      }\n    };\n    this._onClick = () => {\n      if (!this.disabled) {\n        fire(this, 'ne-click', {\n          composed: true,\n          bubbles: false\n        });\n      }\n    };\n    this._onKeyDown = evt => {\n      switch (evt.code) {\n        case 'Space':\n        case 'Enter':\n        case 'NumpadEnter':\n          this._onClick();\n          evt.preventDefault();\n          evt.stopPropagation();\n          break;\n      }\n    };\n    this.renderMultiSelect = () => html`<div\n    class=\"dropdown-menu-item\"\n    tabindex=\"0\"\n    ?disabled=${this.disabled}\n    @keydown=${this._onKeyDown}\n    @click=${e => {\n      e.stopPropagation();\n      e.preventDefault();\n      this._onClick();\n    }}\n    aria-label=${this.ariaLabel || nothing}\n  >\n    <slot name=\"multi-select\"></slot>\n  </div>`;\n    this.renderSingleSelect = () => {\n      let hasSubtextProp = false;\n      if (this.subText && this.subText.length > 0) {\n        hasSubtextProp = true;\n      }\n      return html`<button\n      class=\"dropdown-menu-item\"\n      ?disabled=${this.disabled}\n      @click=${e => {\n        e.stopPropagation();\n        e.preventDefault();\n        this._onClick();\n      }}\n      aria-label=${this.ariaLabel || nothing}\n    >\n      <span class=\"text-span\"><slot>${this.text}</slot></span>\n      <span\n        class=${classMap({\n        'subtext-span': true,\n        hidden: !this._hasSubTextSlot && !hasSubtextProp\n      })}\n        ><slot name=\"sub-text\" @slotchange=${this._onSlotChanged}\n          >${this.subText}</slot\n        ></span\n      >\n    </button>`;\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`${this.isMultiSelect ? this.renderMultiSelect() : this.renderSingleSelect()}`;\n  }\n};\n__decorate([state()], NeDropdownMenuItem.prototype, \"_hasSubTextSlot\", void 0);\n__decorate([queryAssignedNodes({\n  slot: 'sub-text',\n  flatten: true\n})], NeDropdownMenuItem.prototype, \"_subTextSlot\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'text'\n})], NeDropdownMenuItem.prototype, \"text\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'sub-text',\n  reflect: true\n})], NeDropdownMenuItem.prototype, \"subText\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenuItem.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownMenuItem.prototype, \"isMultiSelect\", void 0);\nNeDropdownMenuItem = __decorate([customElement('ne-dropdown-menu-item')], NeDropdownMenuItem);\n\nexport { NeDropdownMenuItem };\n//# sourceMappingURL=dropdown-menu-item.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { NeIconButton } from './icon-button.js';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { f as fire } from './events-1173f562.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\nimport './button.tokens-e79c8bbf.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-pill-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-pill-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-pill-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-pill-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-pill-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-pill-color-border-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-pill-color-border-default: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-pill-color-border-hover: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-pill-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-pill-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-pill-sizing-height: var(--ne-ref-sizing-06, 1.5em);\n  --ne-pill-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-pill-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-pill-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-pill-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-pill-line-height: var(--ne-ref-line-height-condensed, 1.25em);\n  --ne-pill-font-weight: var(--ne-ref-font-weight-regular, Regular);\n}\n`;\n\nconst basePill = css`\n  :host {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    align-content: flex-start;\n  }\n\n  .pill {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    gap: var(--ne-pill-padding-horizontal);\n    min-height: var(--ne-pill-sizing-height);\n    max-width: 100%;\n    padding: 0 var(--ne-pill-padding-horizontal) 0\n      var(--ne-pill-padding-horizontal);\n    border: var(--ne-pill-border-width) solid\n      var(--ne-pill-color-border-default);\n    border-radius: var(--ne-pill-border-radius);\n    box-sizing: content-box;\n    background-color: var(--ne-pill-color-background-default);\n  }\n\n  .pill .text {\n    overflow: hidden;\n    overflow-wrap: break-word;\n    font-family: var(--ne-pill-font-family);\n    font-size: var(--ne-pill-font-size);\n    font-weight: var(--ne-pill-font-weight);\n    line-height: var(--ne-pill-line-height);\n    color: var(--ne-pill-color-text-default);\n  }\n\n  .pill.closable {\n    padding-right: 0;\n  }\n\n  .pill.disabled,\n  .pill.closable.disabled {\n    padding-right: var(--ne-pill-padding-horizontal);\n    border-color: var(--ne-pill-color-border-disabled);\n    background-color: var(--ne-pill-color-background-disabled);\n    cursor: default;\n  }\n`;\nconst styles = [tokens, commonStyles, basePill];\n\n/**\n * @tag ne-pill\n * @tagname ne-pill\n *\n * @description Control that renders a pill containing text and an optional close button.\n *\n * @slot default This is where the text of the pill will be inserted.\n *\n * @event ne-close Raised when the internal close button is clicked.\n */\nlet NePill = class NePill extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies that the pill is closable */\n    this.closable = false;\n    /** Specifies that the pill should be disabled */\n    this.disabled = false;\n    /** Specifies the text that will be read by the screen reader */\n    this.ariaLabel = '';\n    this._onClose = () => {\n      fire(this, 'ne-close', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon-button': NeIconButton\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      id=${this.id}\n      role=\"group\"\n      aria-label=${this.ariaLabel || nothing}\n      class=${classMap({\n      pill: true,\n      disabled: this.disabled,\n      closable: this.closable\n    })}\n    >\n      <span class=\"text\"><slot></slot></span>${this.closable && !this.disabled ? html`<ne-icon-button\n            .variant=\"dark\"\n            .ariaLabel=\"close-button\"\n            ne-aria-label=${this.ariaLabel}\n            .iconType=${Icons.closeDefault}\n            @ne-click=\"${this._onClose}\"\n          ></ne-icon-button>` : ''}\n    </div>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NePill.prototype, \"closable\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NePill.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NePill.prototype, \"ariaLabel\", void 0);\nNePill = __decorate([customElement('ne-pill')], NePill);\n\nexport { NePill };\n//# sourceMappingURL=pill.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, html, nothing } from 'lit';\nimport { state, property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { when } from 'lit/directives/when.js';\nimport { f as fire } from './events-1173f562.js';\nimport { NeDropdownMenu } from './dropdown-menu.js';\nimport { NeDropdownMenuItem } from './dropdown-menu-item.js';\nimport { t as tokens$1, v as validationLayoutStyles, a as validationStyles, V as ValidationBaseComponent, b as ValidationType } from './validation.tokens-db86eca9.js';\nimport { t as tokens$2 } from './icon.tokens-e4affc49.js';\nimport { NeIcon } from './icon.js';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NePill } from './pill.js';\nimport '@open-wc/scoped-elements';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\nimport './icon-button.js';\nimport './button.tokens-e79c8bbf.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-dropdown-field-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-dropdown-field-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-dropdown-field-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-dropdown-field-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-dropdown-field-content-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-dropdown-field-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-background-active: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-background-focus: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-background-inactive: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-dropdown-field-color-background-warning: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-background-error: var(--ne-ref-color-white, #ffffff);\n  --ne-dropdown-field-color-border-active: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-dropdown-field-color-border-inactive: var(--ne-ref-color-grey40, #898F94);\n  --ne-dropdown-field-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-dropdown-field-color-border-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-dropdown-field-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-dropdown-field-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-dropdown-field-color-icon-active: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-field-color-icon-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-field-color-text-placeholder: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-dropdown-field-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-field-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-dropdown-field-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-field-border-radius-with-help-message-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-field-border-radius-with-help-message-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-dropdown-field-border-radius-active-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-dropdown-field-border-radius-active-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-dropdown-field-border-width-default: var(--ne-ref-border-width-small, 1px);\n  --ne-dropdown-field-border-width-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-dropdown-field-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-dropdown-field-font-size: var(--ne-ref-font-size-04, 0.875em);\n}\n`;\n\nconst base = css`\n  .container {\n    align-items: center;\n    position: relative;\n    padding: 0;\n    width: 100%;\n  }\n\n  .wrapper {\n    width: 100%;\n  }\n\n  .multi-select-button,\n  input {\n    display: flex;\n    width: 100%;\n    padding: var(--ne-dropdown-field-padding-vertical)\n      var(--ne-dropdown-field-padding-horizontal)\n      var(--ne-dropdown-field-padding-vertical)\n      var(--ne-dropdown-field-padding-horizontal);\n    gap: var(--ne-dropdown-field-content-gap);\n    border: var(--ne-dropdown-field-border-width-default) solid\n      var(--ne-dropdown-field-color-border-inactive);\n    border-radius: var(--ne-dropdown-field-border-radius-default);\n    background-color: var(--ne-dropdown-field-color-background-default);\n    box-sizing: border-box;\n    outline: none;\n    flex-grow: 1;\n    font-family: var(--ne-dropdown-field-font-family);\n    font-size: var(--ne-dropdown-field-font-size);\n    color: var(--ne-dropdown-field-color-text-default);\n    text-align: left;\n  }\n\n  .placeholder {\n    color: var(--ne-dropdown-field-color-text-placeholder);\n  }\n\n  .multi-select-button {\n    height: 35px;\n    padding: 0.25em;\n    align-items: center;\n  }\n\n  input.has-icon {\n    padding-right: 2em;\n  }\n\n  .multi-select-button.warning,\n  input.warning {\n    border: var(--ne-dropdown-field-border-width-default) solid\n      var(--ne-dropdown-field-color-border-warning);\n    border-radius: var(--ne-dropdown-field-border-radius-with-help-message-top)\n      var(--ne-dropdown-field-border-radius-with-help-message-top)\n      var(--ne-dropdown-field-border-radius-with-help-message-bottom)\n      var(--ne-dropdown-field-border-radius-with-help-message-bottom);\n  }\n\n  .multi-select-button.error,\n  input.error {\n    border: var(--ne-dropdown-field-border-width-default) solid\n      var(--ne-dropdown-field-color-border-error);\n    border-radius: var(--ne-dropdown-field-border-radius-with-help-message-top)\n      var(--ne-dropdown-field-border-radius-with-help-message-top)\n      var(--ne-dropdown-field-border-radius-with-help-message-bottom)\n      var(--ne-dropdown-field-border-radius-with-help-message-bottom);\n  }\n\n  .state-indicator.disabled {\n    background-color: var(--ne-dropdown-field-color-background-disabled);\n  }\n\n  .multi-select-button:focus,\n  input:focus {\n    outline: var(--ne-dropdown-field-border-width-focus) solid\n      var(--ne-dropdown-field-color-border-focus);\n    border: 1px solid transparent;\n  }\n\n  input.active,\n  input.active:focus {\n    outline: none;\n    border: var(--ne-dropdown-field-border-width-default) solid\n      var(--ne-dropdown-field-color-border-active);\n    border-radius: var(--ne-dropdown-field-border-radius-active-top)\n      var(--ne-dropdown-field-border-radius-active-top)\n      var(--ne-dropdown-field-border-radius-active-bottom)\n      var(--ne-dropdown-field-border-radius-active-bottom);\n  }\n\n  .multi-select-button.disabled,\n  input.disabled {\n    background-color: var(--ne-dropdown-field-color-background-disabled);\n    border-color: var(--ne-dropdown-field-color-border-disabled);\n    color: var(--ne-dropdown-field-color-text-disabled);\n  }\n\n  .icon {\n    color: var(--ne-dropdown-field-color-icon);\n    width: var(--ne-dropdown-field-sizing-icon);\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    padding: 0 var(--ne-dropdown-field-padding-horizontal);\n    cursor: unset;\n    flex-shrink: 0;\n    display: grid;\n    height: 100%;\n  }\n\n  .emphasis {\n    font-weight: var(--ne-dropdown-field-font-weight-highlight);\n  }\n\n  .empty-list,\n  .datalist {\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n  }\n`;\nconst styles = [tokens, commonStyles, base, tokens$1, tokens$2, validationLayoutStyles, validationStyles];\n\nvar _class;\nvar NeDropdownField_1;\n/**\n * @tag ne-dropdown-field\n * @tagname ne-dropdown-field\n *\n * @event ne-input Raised when the value of the internal input is changed\n * @event ne-change Raised when the value of the Dropdown field is changed to a valid value\n */\nlet NeDropdownField = NeDropdownField_1 = (_class = class NeDropdownField extends ValidationBaseComponent {\n  static get scopedElements() {\n    return {\n      'ne-dropdown-menu-item': NeDropdownMenuItem,\n      'ne-dropdown-menu': NeDropdownMenu,\n      'ne-icon': NeIcon,\n      'ne-pill': NePill\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  /** Specifies the list of data linked to the Dropdown field */\n  set dataList(val) {\n    const oldDataList = this._dataList;\n    this._dataList = val;\n    this.requestUpdate('dataList', oldDataList);\n  }\n  get dataList() {\n    return this._dataList;\n  }\n  constructor() {\n    super();\n    this._multiSelect = false;\n    /** Specifies the value of the Dropdown field */\n    this.value = '';\n    /** Specifies the display value of the Dropdown field */\n    this.displayValue = '';\n    /** Specifies whether the Dropdown field should be disabled */\n    this.disabled = false;\n    /** Specifies whether the Dropdown field should be the pre-defined fixed height */\n    this.fixedHeight = false;\n    /** Specifies whether the Dropdown should show the select / clear all buttons */\n    this.showFooterActions = false;\n    /** Specifies the aria-label for the Dropdown field */\n    this.ariaLabel = '';\n    /** Specifies the aria-labelledby for the Dropdown field */\n    this.ariaLabelledby = '';\n    this._expanded = false;\n    this._dataList = [];\n    this._input = createRef();\n    this._previousValue = '';\n    this.updated = () => {\n      if (!this._multiSelect) {\n        this._updateDisplayText();\n      }\n    };\n    this._updateDisplayText = () => {\n      if (this.value && this.value !== '' && !this._multiSelect) {\n        if (this._dataList && this._dataList.length > 0) {\n          this.displayValue = this.dataList.find(x => x.value === this.value)?.text;\n        }\n      } else {\n        this.displayValue = '';\n      }\n      if (this._input.value && this.displayValue) {\n        this._input.value.value = this.displayValue;\n      }\n    };\n    this._onDocumentClick = () => {\n      if (!this._expanded) return;\n      this._orderItems();\n      this._expanded = false;\n      // When nothing has been selected from the list, show the last selected value again.\n      // Unless the input box value has been cleared, then clear the value.\n      if (this._input.value?.value && this._previousValue) {\n        this._input.value.value = this._previousValue;\n      } else {\n        fire(this, 'ne-change', {\n          composed: true,\n          bubbles: true,\n          detail: {\n            value: this.value\n          }\n        });\n      }\n    };\n    this._onKeyDown = evt => {\n      switch (evt.code) {\n        case 'Space':\n        case 'Enter':\n        case 'NumpadEnter':\n          this._expanded = !this._expanded;\n          break;\n        case 'Escape':\n          this._expanded = !this._expanded;\n          break;\n      }\n      this.requestUpdate();\n    };\n    this._onMouseDown = evt => {\n      if (this.disabled) return;\n      // HTML data list element will expand the list when focusing with click, but not tab.\n      // It does not close when clicking again, only when clicking away or selecting.\n      this._expanded = !this._expanded;\n      this._orderItems();\n      evt.stopPropagation();\n      this.requestUpdate();\n    };\n    this._onMultiSelectListItemClicked = (item, value) => {\n      if (!Array.isArray(this.value)) {\n        this.value = [];\n      }\n      // eslint-disable-next-line no-param-reassign\n      item.checked = !item.checked;\n      /* Add or remove the item from the array */\n      if (item.checked === false) {\n        const idx = this.value.findIndex(r => r === value);\n        this.value.splice(idx, 1);\n      } else {\n        this.value.push(value);\n      }\n      this.requestUpdate();\n    };\n    this._onToggleAllClicked = (evt, isSelected) => {\n      if (!isSelected) {\n        this._clearSelection();\n      } else {\n        this.value = this._dataList.map(x => x.value);\n      }\n      this._expanded = false;\n    };\n    this._onListItemClicked = (evt, value) => {\n      this.value = value;\n      this._previousValue = this.displayValue;\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: this.value\n        }\n      });\n      this._expanded = false;\n      this.requestUpdate();\n    };\n    this._renderInput = () => {\n      if (this._multiSelect) {\n        return html`<div\n        tabindex=\"0\"\n        class=${classMap({\n          'multi-select-button': true,\n          'has-icon': true,\n          active: this._expanded,\n          disabled: this.disabled,\n          error: this.validationState === ValidationType.error,\n          warning: this.validationState === ValidationType.warning\n        })}\n        @mousedown=${this._onMouseDown}\n        @keydown=${this._onKeyDown}\n        @click=${NeDropdownField_1._onClick}\n      >\n        ${when(this.value.length < 1, this._renderPlaceholder)}\n        ${when(this.value.length > 0, this._renderPill)}\n      </div>`;\n      }\n      return html` <input\n      class=${classMap({\n        'has-icon': true,\n        active: this._expanded,\n        disabled: this.disabled\n      })}\n      type=\"text\"\n      ${ref(this._input)}\n      readonly=\"true\"\n      aria-label=${this.ariaLabel || nothing}\n      aria-labelledby=${this.ariaLabelledby || nothing}\n      placeholder=${ifDefined(this.placeholder)}\n      @mousedown=${this._onMouseDown}\n      @click=${NeDropdownField_1._onClick}\n    />`;\n    };\n    this._renderPlaceholder = () => html`<span class=\"placeholder\">${this.placeholder}</span>`;\n    this._renderPill = () => html`<span\n      ><ne-pill\n        ne-aria-label=\"close\"\n        closable=\"\"\n        ?disabled=${this.disabled}\n        @mousedown=${e => {\n      e.stopPropagation();\n    }}\n        @ne-click=${evt => {\n      evt.stopPropagation();\n      evt.preventDefault();\n      this._clearSelection();\n    }}\n      >\n        ${this.value.length} selected\n      </ne-pill>\n    </span>`;\n    this._clearSelection = () => {\n      this.value = [];\n      this.dataList = this.dataList.map(x => {\n        // eslint-disable-next-line no-param-reassign\n        x.checked = false;\n        return x;\n      });\n      this._orderItems();\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: this.value\n        }\n      });\n    };\n    this._orderItems = () => {\n      const checkedItems = this.dataList.filter(x => {\n        if (x.checked === true) {\n          return x;\n        }\n        return null;\n      });\n      this.value = checkedItems.map(x => x.value);\n      const noncheckedItems = this.dataList.filter(x => {\n        if (!x.checked) {\n          return x;\n        }\n        return null;\n      });\n      this.dataList = [...checkedItems, ...noncheckedItems];\n    };\n    this._renderListItems = () => html`<div class=\"datalist\">\n    <ne-dropdown-menu\n      variant=\"flat\"\n      ?fixedHeight=${this.fixedHeight}\n      ?showFooterActions=${this.showFooterActions}\n    >\n      ${this.dataList.map(item => {\n      if (this._multiSelect) {\n        return html`<ne-dropdown-menu-item\n            ne-aria-label=${ifDefined(item.ariaLabel)}\n            isMultiSelect\n            @ne-click=${() => {\n          this._onMultiSelectListItemClicked(item, item.value);\n        }}\n          >\n            <span slot=\"multi-select\">\n              <ne-checkbox\n                @ne-click=${evt => {\n          evt.stopPropagation();\n        }}\n                tabIndex=${-1}\n                text=${item.text}\n                subText=${item.subText}\n                checked=${item.checked ? 'true' : nothing}\n              >\n              </ne-checkbox>\n            </span>\n          </ne-dropdown-menu-item>`;\n      }\n      return html`<ne-dropdown-menu-item\n          ne-aria-label=${ifDefined(item.ariaLabel)}\n          @ne-click=${evt => {\n        this._onListItemClicked(evt, item.value);\n      }}\n          ><span>${item.text}</span>\n          <span slot=\"sub-text\">${item.subText}</span>\n        </ne-dropdown-menu-item>`;\n    })}\n      <span slot=\"footer-items\">\n        <ne-button-set>\n          <ne-button\n            variant=\"secondary\"\n            @click=${e => {\n      e.stopPropagation();\n    }}\n            @ne-click=${e => {\n      this._onToggleAllClicked(e, true);\n    }}\n            >Select All\n          </ne-button>\n          <ne-button\n            variant=\"text\"\n            @click=${e => {\n      e.stopPropagation();\n    }}\n            @ne-click=${e => {\n      this._onToggleAllClicked(e, false);\n    }}\n            >Clear All\n          </ne-button>\n        </ne-button-set>\n      </span>\n    </ne-dropdown-menu>\n  </div>`;\n    this.render = () => this.renderWithValidation(html`<div class=\"container\">\n        <div class=\"state-indicator\">\n          ${this._renderInput()}\n          <div class=\"icon\" @mousedown=${this._onMouseDown}>\n            ${this._expanded ? html`<ne-icon .type=${Icons.caretUp}></ne-icon>` : html`<ne-icon .type=${Icons.caretDown}></ne-icon>`}\n          </div>\n        </div>\n        ${when(this._expanded, this._renderListItems)}\n      </div>`);\n    document.addEventListener('click', this._onDocumentClick);\n  }\n  connectedCallback() {\n    super.connectedCallback?.();\n    const res = this.dataList[0];\n    if (this.dataList && res.checked) {\n      this._multiSelect = true;\n      this._orderItems();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    document.removeEventListener('click', this._onDocumentClick);\n  }\n}, _class._onClick = evt => {\n  // We don't want the event to bubble to the document,\n  // as it will close the dropdown menu. The mouse down expands the menu.\n  evt.stopPropagation();\n}, _class);\n__decorate([state()], NeDropdownField.prototype, \"_multiSelect\", void 0);\n__decorate([property({\n  type: String\n})], NeDropdownField.prototype, \"placeholder\", void 0);\n__decorate([property({\n  attribute: 'value'\n})], NeDropdownField.prototype, \"value\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'display-value'\n})], NeDropdownField.prototype, \"displayValue\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeDropdownField.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownField.prototype, \"fixedHeight\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeDropdownField.prototype, \"showFooterActions\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-label',\n  reflect: true\n})], NeDropdownField.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-labelledby',\n  reflect: true\n})], NeDropdownField.prototype, \"ariaLabelledby\", void 0);\n__decorate([property({\n  type: Array,\n  reflect: true\n})], NeDropdownField.prototype, \"dataList\", null);\n__decorate([state()], NeDropdownField.prototype, \"_expanded\", void 0);\nNeDropdownField = NeDropdownField_1 = __decorate([customElement('ne-dropdown-field')], NeDropdownField);\n\nexport { NeDropdownField };\n//# sourceMappingURL=dropdown-field.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { f as fire } from './events-1173f562.js';\nimport { trash } from './trash-56a13cc6.js';\nimport { file } from './file-4ab02705.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-file-picker-card-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-card-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-file-picker-card-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-file-picker-card-sizing-icon: var(--ne-ref-sizing-06, 1.5em);\n  --ne-file-picker-card-color-background: var(--ne-ref-color-white, #ffffff);\n  --ne-file-picker-card-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-file-picker-card-color-text-file-name: var(--ne-ref-color-grey-90, #161718);\n  --ne-file-picker-card-color-text-subtext: var(--ne-ref-color-grey-60, #575C61);\n  --ne-file-picker-card-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-file-picker-card-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-file-picker-card-font-size-file-name: var(--ne-ref-font-size-04, 0.875em);\n  --ne-file-picker-card-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-file-picker-card-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-file-picker-card-line-height: var(--ne-ref-line-height-condensed, 1.25em);\n}\n`;\n\nconst baseFileCard = css`\n  .file-card-area {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    border: var(--ne-file-picker-card-border-width) solid\n      var(--ne-file-picker-card-color-border);\n    border-radius: var(--ne-file-picker-card-border-radius);\n    padding: var(--ne-file-picker-card-padding-vertical)\n      var(--ne-file-picker-card-padding-horizontal);\n    background-color: var(--ne-file-picker-card-color-background);\n  }\n\n  .content {\n    align-self: stretch;\n    display: flex;\n    gap: var(--ne-file-picker-card-gap);\n    align-items: start;\n    justify-content: center;\n    font-family: var(--ne-file-picker-card-font-family);\n    font-size: var(--ne-file-picker-card-font-size-file-name);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  .text-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    line-height: var(--ne-file-picker-card-line-height);\n  }\n\n  .file-icon {\n    width: var(--ne-file-picker-card-sizing-icon);\n    height: var(--ne-file-picker-card-sizing-icon);\n    padding: 1px calc(var(--ne-file-picker-card-gap) / 2);\n  }\n\n  .delete-button {\n    display: flex;\n    height: fit-content;\n    width: fit-content;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto;\n    cursor: pointer;\n  }\n\n  .btn {\n    background-color: inherit;\n    border: none;\n    font-size: var(--ne-file-picker-card-sizing-icon);\n    cursor: inherit;\n  }\n\n  ne-icon {\n    display: inline-block;\n    color: var(--ne-file-picker-card-color-text-file-name);\n  }\n\n  .delete-icon {\n    cursor: pointer;\n    width: 12px;\n    height: 16px;\n  }\n\n  .sub-text {\n    display: inline-flex;\n    font-size: var(--ne-file-picker-card-font-size-subtext);\n    color: var(--ne-file-picker-card-color-text-subtext);\n    gap: calc(var(--ne-file-picker-card-gap) * 2);\n  }\n`;\nconst styles = [baseFileCard, commonStyles, tokens];\n\nconst defaultFileFormat = 'Document';\nconst formatSubtext = ' file';\nconst sizeFileFormats = ['B', 'KB', 'MB', 'GB', 'TB'];\nconst fileSizeIEC = filesize => {\n  const pow = filesize === 0 ? 0 : Math.floor(Math.log(filesize) / Math.log(1024));\n  return `${(filesize / 1024 ** pow).toFixed(2)} ${sizeFileFormats[pow]}`;\n};\n/**\n * @tag ne-file-card\n * @tagname ne-file-card\n *\n */\nlet NeFileCard = class NeFileCard extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.fileName = '';\n    this.fileSize = 0;\n    this.handleClick = e => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n      if (!this.onDelete) {\n        const uploadedFile = document.querySelector('ne-file-card');\n        uploadedFile?.style?.setProperty('display', 'none');\n      } else {\n        this.onDelete(e, this.id);\n      }\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  _handleClick(e) {\n    this.handleClick(e);\n  }\n  render() {\n    let fileFormat = `${this.fileName.slice(this.fileName.lastIndexOf('.') + 1, this.fileName.length)}`;\n    const fileName = fileFormat.length + formatSubtext.length > 10 ? this.fileName : this.fileName.split(`.${fileFormat}`)[0];\n    if (fileFormat.length + formatSubtext.length > 10) {\n      fileFormat = defaultFileFormat;\n    } else {\n      fileFormat = fileFormat.toUpperCase() + formatSubtext;\n    }\n    const fileSize = fileSizeIEC(this.fileSize);\n    return html` <div class=\"file-card-area\">\n      <div class=\"content\">\n        <div class=\"file-icon\">\n          ${renderIcon({\n      typeAsHtml: file\n    })}\n        </div>\n        <div class=\"text-content\">\n          <label class=\"file-card-label\">${fileName}</label>\n          <div class=\"sub-text\">\n            <label class=\"file-fileFormat\">${fileFormat}</label>\n            <label class=\"file-size\">${fileSize}</label>\n          </div>\n        </div>\n        <div class=\"delete-button\">\n          <button\n            class=\"btn\"\n            @click=${this._handleClick}\n            id=\"${this.id}-delete button\"\n            aria-label=\"delete button\"\n          >\n            ${renderIcon({\n      typeAsHtml: trash,\n      className: 'delete-icon'\n    })}\n          </button>\n        </div>\n      </div>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeFileCard.prototype, \"fileName\", void 0);\n__decorate([property({\n  type: Number,\n  reflect: true\n})], NeFileCard.prototype, \"fileSize\", void 0);\n__decorate([property()], NeFileCard.prototype, \"onDelete\", void 0);\nNeFileCard = __decorate([customElement('ne-file-card')], NeFileCard);\n\nexport { NeFileCard, fileSizeIEC };\n//# sourceMappingURL=file-card.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { f as fire } from './events-1173f562.js';\nimport { dropzone } from './dropzone-70166a79.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { NeButton } from './button.js';\nimport { NeFileCard } from './file-card.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-file-picker-sizing-icon: var(--ne-ref-sizing-08, 2em);\n  --ne-file-picker-sizing-height: var(--ne-ref-sizing-14, 6em);\n  --ne-file-picker-message-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-message-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-file-picker-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-file-picker-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-file-picker-color-label: var(--ne-ref-color-grey-60, #575C61);\n  --ne-file-picker-color-border-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-file-picker-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-file-picker-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-file-picker-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-file-picker-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-file-picker-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-file-picker-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-file-picker-gap: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseFilePicker = css`\n  .drag-file-area {\n    position: relative;\n    box-sizing: border-box;\n    border: var(--ne-file-picker-border-width) dashed\n      var(--ne-file-picker-color-border-default);\n    overflow: hidden;\n    border-radius: var(--ne-file-picker-border-radius);\n    padding: calc(var(--ne-file-picker-padding) / 2);\n    min-height: 96px;\n  }\n\n  .drag-file-area.dragging-over-area {\n    background-color: var(--ne-file-picker-color-background-hover);\n    height: 96px;\n    display: grid;\n    padding: 0 calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .form-container {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    width: 100%;\n    height: 100%;\n  }\n\n  .file-picker-container {\n    align-self: stretch;\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .upload-files-container {\n    position: relative;\n    display: grid;\n    width: 100%;\n    flex-direction: column;\n    gap: var(--ne-file-picker-padding);\n  }\n\n  .file-picker-container .upload-files-container ne-file-card:last-child {\n    margin-bottom: var(--ne-file-picker-padding);\n  }\n\n  .file-picker-message {\n    width: fit-content;\n    height: fit-content;\n    padding: var(--ne-file-picker-message-padding);\n    display: inline-flex;\n    gap: var(--ne-file-picker-message-gap);\n    align-items: center;\n    justify-content: center;\n    font-family: var(--ne-file-picker-font-family);\n    font-size: var(--ne-file-picker-font-size);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  #default-file-input {\n    opacity: 0;\n    display: none;\n    position: absolute;\n    z-index: -1;\n    left: 0;\n    top: 0;\n    width: 0;\n    height: 0;\n    visibility: hidden;\n  }\n`;\nconst styles$1 = [baseFilePicker, commonStyles, tokens];\n\nconst baseFileDropzone = css`\n  .file-picker-container {\n    position: inherit;\n    align-self: stretch;\n    display: flex;\n    text-align: center;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin: calc(var(--ne-file-picker-padding) / 2);\n  }\n\n  .file-picker-message {\n    width: fit-content;\n    height: fit-content;\n    padding: var(--ne-file-picker-message-padding);\n    display: inline-flex;\n    gap: var(--ne-file-picker-message-gap);\n    align-items: center;\n    justify-content: center;\n    font-family: var(--ne-file-picker-font-family);\n    font-size: var(--ne-file-picker-font-size);\n    color: var(--ne-file-picker-color-label);\n  }\n\n  #default-file-input {\n    opacity: 0;\n    position: absolute;\n    z-index: -1;\n    left: 0;\n    top: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .dropzone-icon-container {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    width: var(--ne-file-picker-sizing-icon);\n    height: var(--ne-file-picker-sizing-icon);\n  }\n\n  .dropzone-icon-container svg {\n    width: 100%;\n    height: var(--ne-file-picker-sizing-icon);\n  }\n`;\nconst styles = [baseFileDropzone, commonStyles, tokens];\n\n/**\n * @tag ne-file-dropzone\n * @tagname ne-file-dropzone\n *\n */\nlet NeFileDropzone = class NeFileDropzone extends LitElement {\n  static get styles() {\n    return styles;\n  }\n  static get properties() {\n    return {\n      singleFile: {\n        type: Boolean\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.singleFile = false;\n    this.singleFile = false;\n  }\n  render() {\n    const fileStr = this.singleFile ? 'file' : 'files';\n    return html` <div class=\"file-picker-container\">\n      <div class=\"file-picker-message\">\n        <div class=\"dropzone-icon-container dropzone-icon\">\n          ${renderIcon({\n      typeAsHtml: dropzone\n    })}\n        </div>\n        <label\n          draggable=\"true\"\n          id=\"${this.id}-dropzone-label\"\n          for=\"default-file-input\"\n          aria-label=\"Drag ${fileStr} here\"\n        >\n          Drag ${fileStr} here...\n        </label>\n        <slot>\n          <input\n            tabindex=\"-1\"\n            @input=\"${this.handleChange}\"\n            type=\"file\"\n            id=\"default-file-input\"\n            ?multiple=\"${!this.singleFile}\"\n          />\n        </slot>\n      </div>\n    </div>`;\n  }\n};\n__decorate([property()], NeFileDropzone.prototype, \"handleChange\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeFileDropzone.prototype, \"singleFile\", void 0);\nNeFileDropzone = __decorate([customElement('ne-file-dropzone')], NeFileDropzone);\n\n/**\n * @tag ne-file-picker\n * @tagname ne-file-picker\n *\n */\nlet NeFilePicker = class NeFilePicker extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-file-dropzone': NeFileDropzone,\n      'ne-button': NeButton,\n      'ne-file-card': NeFileCard\n    };\n  }\n  get filePickerCards() {\n    return this._filePickerCards;\n  }\n  set filePickerCards(value) {\n    const oldValue = this._filePickerCards;\n    this._filePickerCards = value;\n    this.requestUpdate('filePickerCards', oldValue);\n  }\n  get dragover() {\n    return this._dragover;\n  }\n  set dragover(value) {\n    const oldValue = this._dragover;\n    this._dragover = value;\n    this.requestUpdate('dragover', oldValue);\n  }\n  static get styles() {\n    return styles$1;\n  }\n  static get properties() {\n    return {\n      filePickerCards: {\n        type: Array\n      },\n      singleFile: {\n        type: Boolean\n      },\n      dragover: {\n        type: Boolean\n      },\n      accepts: {\n        type: String\n      }\n    };\n  }\n  constructor() {\n    super();\n    /**\n     * This attribute specifies whether or not the bound element is allow to upload multiple number of files. If set to true, it allow to upload only single file. By default, the attribute is true.\n     */\n    this.singleFile = false;\n    this._filePickerCards = [];\n    this._dragover = false;\n    this._inputRef = createRef();\n    this.preventDefaults = e => {\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true\n      });\n      e.preventDefault();\n      e.stopPropagation();\n    };\n    this.handleClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n    this._handleChange = async e => {\n      const files = e?.target?.files;\n      await this.getFiles(files);\n    };\n    this.onDrop = async e => {\n      if (e) {\n        if (e.type === 'drop' && e.dataTransfer) {\n          const {\n            files\n          } = e.dataTransfer;\n          await this.getFiles(files);\n        }\n      }\n      fire(this, 'ne-drop', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: e.target.value,\n          data: e.target.files,\n          originalEvent: e\n        }\n      });\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      this.dragover = false;\n    };\n    this.onDragOver = () => {\n      this.dragover = true;\n    };\n    this.onDragOverEnd = () => {\n      this.dragover = false;\n    };\n    this.filePickerCards = [];\n    this.dragover = false;\n  }\n  connectedCallback() {\n    // eslint-disable-next-line wc/guard-super-call\n    super.connectedCallback();\n    ['dragover', 'dragleave', 'drop'].forEach(eventName => {\n      this.addEventListener(eventName, this.preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach(eventName => {\n      this.addEventListener(eventName, this.onDragOver, false);\n    });\n    ['dragleave', 'drop'].forEach(eventName => {\n      this.addEventListener(eventName, this.onDragOverEnd, false);\n    });\n    this.addEventListener('drop', this.onDrop, false);\n  }\n  disconnectedCallback() {\n    ['dragover', 'dragleave', 'drop'].forEach(eventName => {\n      this.removeEventListener(eventName, this.preventDefaults, false);\n    });\n    ['dragenter', 'dragover'].forEach(eventName => {\n      this.removeEventListener(eventName, this.onDragOver, false);\n    });\n    ['dragleave', 'drop'].forEach(eventName => {\n      this.removeEventListener(eventName, this.onDragOverEnd, false);\n    });\n    this.removeEventListener('drop', this.onDrop, false);\n    // eslint-disable-next-line wc/guard-super-call\n    super.disconnectedCallback();\n  }\n  _handleClick() {\n    const fileInput = this._inputRef.value;\n    fileInput?.click();\n    this.handleClick();\n  }\n  async getFiles(files) {\n    if (files) {\n      const fileCardsList = this.filePickerCards;\n      let idx = 0;\n      if (this.filePickerCards.length > 0) {\n        idx = this.filePickerCards.length;\n      }\n      let breakMe = false;\n      Array.from(files).forEach((value, index) => {\n        if (!breakMe) {\n          const file = value;\n          fileCardsList.push({\n            id: idx !== 0 ? String(index + idx) : String(index),\n            fileName: file.name,\n            fileSize: file.size\n          });\n          if (this.singleFile && files.length > 1) {\n            breakMe = true;\n          }\n        }\n      });\n      this.filePickerCards = fileCardsList;\n      if (this.onChange) {\n        this.onChange(files);\n      }\n    }\n    this.requestUpdate();\n  }\n  async onDelete(e, id, filePickerCards) {\n    fire(this, 'ne-click', {\n      composed: true,\n      bubbles: true\n    });\n    this.filePickerCards = filePickerCards.filter(item => item.id !== id);\n    if (this.onChange) {\n      this.onChange(this.filePickerCards);\n    }\n    this.requestUpdate();\n  }\n  renderForm(uploadFilesContainer) {\n    const fileStr = this.singleFile ? 'file' : 'files';\n    if (!this.dragover) {\n      return html` <form class=\"form-container\" enctype=\"multipart/form-data\">\n        <div class=\"file-picker-container\">\n          ${uploadFilesContainer}\n          <div class=\"file-picker-message\">\n            <input\n              ${ref(this._inputRef)}\n              @input=\"${this._handleChange}\"\n              type=\"file\"\n              ?multiple=\"${!this.singleFile}\"\n              tabindex=\"-1\"\n              id=\"default-file-input\"\n              name=\"select-file-input\"\n              accept=\"${this.accepts}\"\n            />\n            <label\n              draggable=\"true\"\n              id=\"Select ${fileStr}\"\n              for=\"${this.id}-button\"\n              aria-label=\"Drag ${fileStr} here\"\n            >\n              Drag ${fileStr} here or\n            </label>\n            <ne-button\n              id=\"${this.id}-button\"\n              variant=\"secondary\"\n              @click=${this._handleClick}\n              ne-aria-label=\"Select ${fileStr}\"\n              tabindex=\"0\"\n              >Select ${fileStr}\n            </ne-button>\n          </div>\n        </div>\n      </form>`;\n    }\n    return html` <div class=\"file-picker-container\">\n      <ne-file-dropzone\n        id=\"${this.id}-dropzone\"\n        ?singleFile=\"${this.singleFile}\"\n        .handleChange=\"${this._handleChange}\"\n      ></ne-file-dropzone>\n    </div>`;\n  }\n  render() {\n    const fileCards = [];\n    const uploadFilesContainer = [];\n    if (this.filePickerCards) {\n      for (const item of this.filePickerCards) {\n        fileCards.push(html` <ne-file-card\n          .id=${item.id}\n          .fileName=${item.fileName}\n          .fileSize=\"${ifDefined(item.fileSize)}\"\n          .onDelete=\"${(e, id) => this.onDelete(e, id, this.filePickerCards)}\"\n        ></ne-file-card>`);\n      }\n      if (fileCards) {\n        uploadFilesContainer.push(html` <div class=\"upload-files-container\">${fileCards}</div>`);\n      }\n    }\n    return this.singleFile && fileCards.length === 1 ? html`${uploadFilesContainer}` : html`\n          <div\n            class=${classMap({\n      'drag-file-area': true,\n      'dragging-over-area': this.dragover\n    })}\n          >\n            ${this.renderForm(uploadFilesContainer)}\n          </div>\n        `;\n  }\n};\n__decorate([property()], NeFilePicker.prototype, \"onChange\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeFilePicker.prototype, \"singleFile\", void 0);\n__decorate([property({\n  type: String\n})], NeFilePicker.prototype, \"accepts\", void 0);\n__decorate([property({\n  type: Array,\n  reflect: true\n})], NeFilePicker.prototype, \"filePickerCards\", null);\nNeFilePicker = __decorate([customElement('ne-file-picker')], NeFilePicker);\n\nexport { NeFilePicker as N, NeFileDropzone as a };\n//# sourceMappingURL=file-picker-d0e02807.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, html, nothing } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\nimport { when } from 'lit/directives/when.js';\nimport './checkbox.js';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens$1, v as validationLayoutStyles, a as validationStyles, V as ValidationBaseComponent, b as ValidationType } from './validation.tokens-db86eca9.js';\nimport { t as tokens$2 } from './icon.tokens-e4affc49.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { closeDefault } from './closeDefault-e6da3ad8.js';\nimport './check-132c9894.js';\nimport '@open-wc/scoped-elements';\nimport './iconType-8326eddb.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-input-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-input-border-radius-with-help-message-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-input-border-radius-with-help-message-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-input-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-input-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-input-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-input-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-input-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-input-color-background-active: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-background-focus: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-background-inactive: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-input-color-background-error: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-background-warning: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-input-color-border-active: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-input-color-border-inactive: var(--ne-ref-color-grey40, #898F94);\n  --ne-input-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-input-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-input-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-input-color-border-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-input-color-icon-active: var(--ne-ref-color-grey-90, #161718);\n  --ne-input-color-icon-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-input-color-text-placeholder: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-input-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-input-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-input-border-width-default: var(--ne-ref-border-width-small, 1px);\n  --ne-input-border-width-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-input-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-input-content-gap: var(--ne-ref-spacing-x-small, 0.5em);\n}\n`;\n\nconst baseInput = css`\n  .container {\n    display: flex;\n    align-items: center;\n    position: relative;\n    padding: 0;\n    width: 100%;\n  }\n\n  input {\n    width: 100%;\n    padding: var(--ne-input-padding-vertical) var(--ne-input-padding-horizontal)\n      var(--ne-input-padding-vertical) var(--ne-input-padding-horizontal);\n    gap: var(--ne-input-content-gap);\n    font-family: var(--ne-input-font-family);\n    font-size: var(--ne-input-font-size);\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-inactive);\n    border-radius: var(--ne-input-border-radius-default);\n    background-color: var(--ne-input-color-background-default);\n    box-sizing: border-box;\n    outline: none;\n    flex-grow: 1;\n  }\n\n  .show-password-container {\n    margin-top: var(--ne-input-content-gap);\n  }\n\n  .has-left-icon input {\n    padding-left: 25px;\n    padding-right: 25px;\n  }\n\n  input::placeholder {\n    color: var(--ne-input-color-text-placeholder);\n  }\n\n  input:active {\n    background-color: var(--ne-input-color-background-active);\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-active);\n  }\n\n  input:disabled {\n    color: var(--ne-input-color-text-disabled);\n    background-color: var(--ne-input-color-background-disabled);\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-disabled);\n  }\n\n  input:focus {\n    background-color: var(--ne-input-color-background-inactive);\n    outline: var(--ne-input-border-width-focus) solid\n      var(--ne-input-color-border-focus);\n    border-radius: var(--ne-input-border-radius-default);\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-background-inactive);\n  }\n\n  input.warning {\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-warning);\n    border-radius: var(--ne-input-border-radius-with-help-message-top)\n      var(--ne-input-border-radius-with-help-message-top)\n      var(--ne-input-border-radius-with-help-message-bottom)\n      var(--ne-input-border-radius-with-help-message-bottom);\n  }\n\n  input.error {\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-error);\n    border-radius: var(--ne-input-border-radius-with-help-message-top)\n      var(--ne-input-border-radius-with-help-message-top)\n      var(--ne-input-border-radius-with-help-message-bottom)\n      var(--ne-input-border-radius-with-help-message-bottom);\n  }\n\n  input.error:focus,\n  input.warning:focus {\n    border-color: transparent;\n    outline: var(--ne-input-border-width-focus) solid\n      var(--ne-input-color-border-focus);\n    border-radius: var(--ne-input-border-radius-default);\n  }\n\n  input[readonly] {\n    border: none;\n    outline: none;\n  }\n\n  .message-container.warning {\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-warning);\n    box-sizing: border-box;\n  }\n\n  .message-container.error {\n    border: var(--ne-input-border-width-default) solid\n      var(--ne-input-color-border-error);\n    box-sizing: border-box;\n  }\n\n  .left-icon {\n    width: var(--ne-icon-size-default);\n    position: absolute;\n    padding-left: 5px;\n    cursor: unset;\n    flex-shrink: 0;\n  }\n\n  .clear-button {\n    position: absolute;\n    cursor: pointer;\n    right: 0;\n    top: 0;\n    height: 25px;\n    width: 25px;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    margin: 4px 2px;\n    transition: all 0.2s ease-in-out 0s;\n  }\n\n  .clear-button-icon {\n    cursor: pointer;\n  }\n`;\nconst styles = [tokens, baseInput, tokens$1, tokens$2, validationLayoutStyles, validationStyles, commonStyles];\n\n/**\n * @tag ne-input\n * @tagname ne-input\n *\n * @description Control that renders an input control that can be used in forms, or independantly.\n *\n * @event ne-input Raised when typing in the input control\n */\nlet NeInput = class NeInput extends ValidationBaseComponent {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies that an input should be disabled\n     */\n    this.disabled = false;\n    /**\n     * Specifies that an input should be readonly\n     */\n    this.readonly = false;\n    /**\n     * Specifies that an input value is required\n     */\n    this.required = false;\n    /**\n     * Specifies the input type. Default is text but supports password and search\n     */\n    this.type = 'text';\n    /**\n     * Specifies the text that will be read by the screen reader\n     */\n    this.ariaLabel = '';\n    /**\n     * Specifies the text that will be read by the screen reader\n     */\n    this.ariaLabelledby = '';\n    /**\n     * Specifies the value the input control contains\n     */\n    this.value = '';\n    /**\n     * Specifies that the input control will have a clear button that resets the value\n     */\n    this.reset = false;\n    /**\n     * Specifies the label for the show password checkbox\n     */\n    this.passwordWithVisibilityLabel = 'Show password';\n    // Events\n    this._handleInput = evt => {\n      const {\n        value\n      } = evt.target;\n      fire(this, 'ne-input', {\n        detail: {\n          value,\n          data: evt.data\n        }\n      });\n      this.value = value;\n    };\n    this._handleClickClear = () => {\n      this.value = '';\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  willUpdate(changedProperties) {\n    if (changedProperties.has('type') && this._type) {\n      // reset the _type state value when type changes, this may not be required ??\n      this._type = undefined;\n    }\n  }\n  _toggleShowPassword(e) {\n    const isChecked = e.target.checked;\n    fire(this, 'ne-change', {\n      composed: true,\n      bubbles: true\n    });\n    if (isChecked) {\n      this._type = 'text';\n    } else {\n      this._type = 'password';\n    }\n  }\n  // Functions\n  _inputElement() {\n    return html`<input\n      type=${this.type === 'password' && this._type ? this._type : this.type}\n      ?disabled=${this.disabled}\n      ?readonly=${this.readonly}\n      ?required=${this.required}\n      placeholder=${ifDefined(this.placeholder)}\n      aria-label=${this.ariaLabel || nothing}\n      aria-labelledby=${this.ariaLabelledby || nothing}\n      .value=${live(this.value)}\n      @input=${this._handleInput}\n      class=${classMap({\n      error: this.validationState === ValidationType.error,\n      warning: this.validationState === ValidationType.warning\n    })}\n    />`;\n  }\n  render() {\n    const enableShowPassword = this.type === 'password';\n    return html` <div>\n      ${this.renderWithValidation(html` <div\n        class=${classMap({\n      container: true,\n      'has-left-icon': this.leftIconType !== undefined\n    })}\n      >\n        <div class=${this.leftIconType !== undefined ? 'left-icon' : 'hidden'}>\n          ${renderIcon({\n      type: this.leftIconType\n    })}\n        </div>\n        ${this._inputElement()}\n        ${when(this.reset, () => html` <button\n            id=\"clear-button\"\n            type=\"button\"\n            class=${this.value.length > 0 ? 'clear-button' : 'hidden'}\n            @click=${this._handleClickClear}\n            ?disabled=${this.disabled}\n            aria-label=\"clear-button\"\n          >\n            ${renderIcon({\n      typeAsHtml: closeDefault,\n      className: 'clear-button-icon'\n    })}\n          </button>`)}\n      </div>`)}\n      ${enableShowPassword ? html`<div class=\"show-password-container\">\n            <ne-checkbox\n              text=\"${this.passwordWithVisibilityLabel}\"\n              @click=\"${e => this._toggleShowPassword(e)}\"\n            >\n            </ne-checkbox>\n          </div>` : nothing}\n    </div>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeInput.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeInput.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeInput.prototype, \"required\", void 0);\n__decorate([property({\n  type: String\n})], NeInput.prototype, \"placeholder\", void 0);\n__decorate([property({\n  reflect: true,\n  attribute: 'type',\n  type: String\n})], NeInput.prototype, \"type\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-label'\n})], NeInput.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-labelledby'\n})], NeInput.prototype, \"ariaLabelledby\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeInput.prototype, \"value\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon',\n  reflect: true\n})], NeInput.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeInput.prototype, \"reset\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeInput.prototype, \"passwordWithVisibilityLabel\", void 0);\n__decorate([state()], NeInput.prototype, \"_type\", void 0);\nNeInput = __decorate([customElement('ne-input')], NeInput);\n\nexport { NeInput };\n//# sourceMappingURL=input.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport { when } from 'lit/directives/when.js';\nimport { f as fire } from './events-1173f562.js';\nimport { NeDropdownMenu } from './dropdown-menu.js';\nimport { NeDropdownMenuItem } from './dropdown-menu-item.js';\nimport { NeIcon } from './icon.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/**\n * Escapes regex control characters found in a string.\n * @param text - The text to escape for Regex\n * @returns The escaped text\n */\nconst escapeForRegExp = text => text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-lookup-field-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-lookup-field-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-lookup-field-color-text-placeholder: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-lookup-field-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-lookup-field-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-lookup-field-color-icon: var(--ne-ref-color-grey-90, #161718);\n  --ne-lookup-field-color-border-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-lookup-field-color-border-active: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-lookup-field-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-lookup-field-color-border-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-lookup-field-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-lookup-field-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-content-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-lookup-field-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-lookup-field-border-radius-active-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-lookup-field-border-radius-active-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-lookup-field-border-width-default: var(--ne-ref-border-width-small, 1px);\n  --ne-lookup-field-border-width-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-lookup-field-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-lookup-field-font-weight-highlight: var(--ne-ref-font-weight-bold, Bold);\n}\n`;\n\nconst base = css`\n  .container {\n    align-items: center;\n    position: relative;\n    padding: 0;\n    width: 100%;\n  }\n\n  .wrapper {\n    width: 100%;\n  }\n\n  input {\n    width: 100%;\n    padding: var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal)\n      var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal);\n    gap: var(--ne-lookup-field-content-gap);\n    border: var(--ne-lookup-field-border-width-default) solid\n      var(--ne-lookup-field-color-border-default);\n    border-radius: var(--ne-lookup-field-border-radius-default);\n    background-color: var(--ne-lookup-field-color-background-default);\n    box-sizing: border-box;\n    outline: none;\n    flex-grow: 1;\n    font-family: var(--ne-lookup-field-font-family);\n    font-size: var(--ne-lookup-field-font-size);\n    color: var(--ne-lookup-field-color-text-default);\n  }\n\n  input.has-icon {\n    padding-right: 2em;\n  }\n\n  .state-indicator.disabled {\n    background-color: var(--ne-lookup-field-color-background-disabled);\n  }\n\n  input:focus {\n    outline: var(--ne-lookup-field-border-width-focus) solid\n      var(--ne-lookup-field-color-border-focus);\n    border: 1px solid transparent;\n  }\n\n  input.active,\n  input.active:focus {\n    outline: none;\n    border: var(--ne-lookup-field-border-width-default) solid\n      var(--ne-lookup-field-color-border-active);\n    border-radius: var(--ne-lookup-field-border-radius-active-top)\n      var(--ne-lookup-field-border-radius-active-top)\n      var(--ne-lookup-field-border-radius-active-bottom)\n      var(--ne-lookup-field-border-radius-active-bottom);\n  }\n\n  input.disabled {\n    background-color: var(--ne-lookup-field-color-background-disabled);\n    border-color: var(--ne-lookup-field-color-border-disabled);\n    color: var(--ne-lookup-field-color-text-disabled);\n  }\n\n  .icon {\n    color: var(--ne-lookup-field-color-icon);\n    width: var(--ne-lookup-field-sizing-icon);\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    padding: var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal)\n      var(--ne-lookup-field-padding-vertical)\n      var(--ne-lookup-field-padding-horizontal);\n    cursor: unset;\n    flex-shrink: 0;\n  }\n\n  .emphasis {\n    font-weight: var(--ne-lookup-field-font-weight-highlight);\n  }\n\n  .empty-list,\n  .datalist,\n  .loading {\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n  }\n`;\nconst styles = [tokens, commonStyles, base];\n\nvar _class;\nvar NeLookupField_1;\nconst dropdownMenuVariantsArray = ['elevated', 'flat'];\n/**\n * @tag ne-lookup-field\n * @tagname ne-lookup-field\n *\n * @event ne-input Raised when the value of the internal input is changed\n * @event ne-change Raised when the value of the lookup field is changed to a valid value\n */\nlet NeLookupField = NeLookupField_1 = (_class = class NeLookupField extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-dropdown-menu-item': NeDropdownMenuItem,\n      'ne-dropdown-menu': NeDropdownMenu,\n      'ne-icon': NeIcon\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  /** Specifies the list of data linked to the lookup field */\n  set dataList(val) {\n    const oldDataList = this._dataList;\n    this._isLoading = false;\n    this._dataList = val;\n    if (this.externalListFilter) {\n      this._filteredList = val;\n    }\n    this.requestUpdate('dataList', oldDataList);\n  }\n  get dataList() {\n    return this._dataList;\n  }\n  constructor() {\n    super();\n    /** Specifies the value of the lookup field */\n    this.value = '';\n    /** Specifies the display value of the lookup field */\n    this.displayValue = '';\n    /** Specifies whether the lookup field should be disabled */\n    this.disabled = false;\n    /** Specifies whether the lookup field should be read only */\n    this.readonly = false;\n    /** Specifies whether the data list of the lookup field is filtered externally */\n    this.externalListFilter = false;\n    /** Specifies the aria-label for the lookup field */\n    this.ariaLabel = '';\n    /** Specifies the aria-labelledby for the lookup field */\n    this.ariaLabelledby = '';\n    /** Specifies the text to display in the list when no results match the search string entered */\n    this.noResultsText = 'No matches found';\n    /** Specifies the text to display in the list when the user has not typed a search string yet, and a list isnt populated */\n    this.typeToSearchText = 'Type to search';\n    /** Specifies the text to display in the list when the search to populate the list is still in progress */\n    this.searchLoadingText = 'Loading...';\n    this.dropdownVariant = 'flat';\n    this._expanded = false;\n    this._isLoading = false;\n    this._ignoreFocusOut = false;\n    this._dataList = [];\n    this._filteredList = [];\n    this._input = createRef();\n    this._searchValue = '';\n    this._previousValue = '';\n    this.updated = () => {\n      this._updateDisplayText();\n    };\n    this._updateDisplayText = () => {\n      if (this.value && this.value !== '') {\n        if (this.dataList && this.dataList.length > 0) {\n          this.displayValue = this.dataList.find(x => x.value === this.value)?.text;\n        }\n      } else {\n        this.displayValue = '';\n      }\n      if (this._input.value && this.displayValue) {\n        this._input.value.value = this.displayValue;\n      }\n    };\n    this._filterList = () => {\n      if (!this._searchValue) {\n        this._filteredList = [];\n        return;\n      }\n      const escapedSearchValue = escapeForRegExp(this._searchValue);\n      const matcher = new RegExp(escapedSearchValue, 'gi');\n      this._filteredList = this.dataList.filter(x => !!x.text.match(matcher));\n    };\n    this._onDocumentClick = () => {\n      if (!this._expanded) return;\n      this._expanded = false;\n      // When nothing has been selected from the list, show the last selected value again.\n      // Unless the input box value has been cleared, then clear the value.\n      if (this._input.value?.value && this._previousValue) {\n        this._input.value.value = this._previousValue;\n      } else {\n        fire(this, 'ne-change', {\n          composed: true,\n          bubbles: true,\n          detail: {\n            value: this.value\n          }\n        });\n      }\n    };\n    this._onDropDownMouseDown = () => {\n      this._ignoreFocusOut = true;\n    };\n    this._onMouseDown = evt => {\n      if (this.disabled || this.readonly) return;\n      // HTML data list element will expand the list when focusing with click, but not tab.\n      // It does not close when clicking again, only when clicking away or selecting.\n      this._expanded = true;\n      evt.stopPropagation();\n    };\n    this._onInput = evt => {\n      if (this.disabled || this.readonly) return;\n      this.value = '';\n      this._searchValue = this._input.value?.value;\n      this.displayValue = this._searchValue;\n      this._expanded = true;\n      this._isLoading = true;\n      if (!this.externalListFilter) {\n        this._filterList();\n      }\n      fire(this, 'ne-input', {\n        detail: {\n          data: evt.data,\n          value: this._input.value?.value\n        }\n      });\n    };\n    this._onFocusOut = () => {\n      if (!this._ignoreFocusOut) {\n        // do the same work that would be done if the user clicked out.\n        this._onDocumentClick();\n      }\n      this._ignoreFocusOut = false;\n    };\n    this._onListItemClicked = (evt, value) => {\n      this.value = value;\n      this._updateDisplayText();\n      this._searchValue = this.displayValue;\n      this._previousValue = this.displayValue;\n      fire(this, 'ne-change', {\n        composed: true,\n        bubbles: true,\n        detail: {\n          value: this.value\n        }\n      });\n      this._expanded = false;\n    };\n    this._renderInput = () => html` <input\n    class=${classMap({\n      'has-icon': this.icon !== undefined,\n      active: this._expanded,\n      disabled: this.disabled\n    })}\n    type=\"text\"\n    ${ref(this._input)}\n    ?readonly=${this.readonly || this.disabled}\n    aria-label=${this.ariaLabel || nothing}\n    aria-labelledby=${this.ariaLabelledby || nothing}\n    placeholder=${ifDefined(this.placeholder)}\n    @keydown=${NeLookupField_1._onKeyDown}\n    @input=${this._onInput}\n    @mousedown=${this._onMouseDown}\n    @click=${NeLookupField_1._onClick}\n    @focusout=${this._onFocusOut}\n  />`;\n    this._renderListItems = () => html`<div class=\"datalist\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      ${this._filteredList.map(item => html`<ne-dropdown-menu-item\n          ne-aria-label=${ifDefined(item.ariaLabel)}\n          @ne-click=${evt => this._onListItemClicked(evt, item.value)}\n          @mousedown=${this._onDropDownMouseDown}\n          ><span>${this._renderWithHighlight(item.text)}</span>\n          <span slot=\"sub-text\">${item.subText}</span></ne-dropdown-menu-item\n        >`)}\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderEmptyList = () => html`<div class=\"empty-list\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      <ne-dropdown-menu-item disabled=\"\"\n        >${when(this._searchValue, () => this.noResultsText, () => this.typeToSearchText)}</ne-dropdown-menu-item\n      >\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderLoadingIndicator = () => html`<div class=\"loading\">\n    <ne-dropdown-menu variant=${this.dropdownVariant}>\n      <ne-dropdown-menu-item disabled=\"\"\n        >${this.searchLoadingText}</ne-dropdown-menu-item\n      >\n    </ne-dropdown-menu>\n  </div>`;\n    this._renderWithHighlight = text => {\n      if (!this._searchValue || !text) return text;\n      const escapedSearchValue = escapeForRegExp(this._searchValue);\n      const regex = new RegExp(escapedSearchValue, 'gi');\n      const matches = text.match(regex);\n      const splits = text.split(regex);\n      if (!matches || !splits) return text;\n      let displayElements = '';\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < splits.length - 1; i++) {\n        displayElements += `${splits[i]}<span class=\"emphasis\">${matches[i]}</span>`;\n      }\n      displayElements += `${splits[splits.length - 1]}`;\n      return html`${unsafeHTML(displayElements)}`;\n    };\n    this.render = () => html`<div class=\"container\">\n    <div class=\"state-indicator\">\n      ${this._renderInput()}\n      <div class=${this.icon !== undefined ? 'icon' : 'hidden'}>\n        <ne-icon .type=${this.icon}></ne-icon>\n      </div>\n    </div>\n    ${when(this._expanded && this._filteredList.length > 0, this._renderListItems)}\n    ${when(this._expanded && this._filteredList.length === 0 && !this._isLoading, this._renderEmptyList)}\n    ${when(this._expanded && this._filteredList.length === 0 && this._searchValue && this._isLoading, this._renderLoadingIndicator)}\n  </div>`;\n    document.addEventListener('click', this._onDocumentClick);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    document.removeEventListener('click', this._onDocumentClick);\n  }\n}, _class._onClick = evt => {\n  // We don't want the event to bubble to the document,\n  // as it will close the dropdown menu. The mouse down expands the menu.\n  evt.stopPropagation();\n}, _class._onKeyDown = evt => {\n  // This is necessay as the even bubbles out of the input box if we don't stop propagation\n  evt.stopPropagation();\n}, _class);\n__decorate([property({\n  type: String\n})], NeLookupField.prototype, \"placeholder\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'value'\n})], NeLookupField.prototype, \"value\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'display-value'\n})], NeLookupField.prototype, \"displayValue\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeLookupField.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeLookupField.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean,\n  attribute: 'external-list-filter',\n  reflect: true\n})], NeLookupField.prototype, \"externalListFilter\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-label',\n  reflect: true\n})], NeLookupField.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-labelledby',\n  reflect: true\n})], NeLookupField.prototype, \"ariaLabelledby\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'icon',\n  reflect: true\n})], NeLookupField.prototype, \"icon\", void 0);\n__decorate([property({\n  type: Array,\n  reflect: true\n})], NeLookupField.prototype, \"dataList\", null);\n__decorate([property({\n  type: String,\n  attribute: 'no-results-text',\n  reflect: true\n})], NeLookupField.prototype, \"noResultsText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'type-to-search-text',\n  reflect: true\n})], NeLookupField.prototype, \"typeToSearchText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'search-loading-text',\n  reflect: true\n})], NeLookupField.prototype, \"searchLoadingText\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'dropdown-variant'\n})], NeLookupField.prototype, \"dropdownVariant\", void 0);\n__decorate([state()], NeLookupField.prototype, \"_expanded\", void 0);\nNeLookupField = NeLookupField_1 = __decorate([customElement('ne-lookup-field')], NeLookupField);\n\nexport { NeLookupField, dropdownMenuVariantsArray };\n//# sourceMappingURL=lookup-field.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { NeButtonSet } from './button-set.js';\nimport 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-panel-header-font-family: var(--ne-ref-font-family-montserrat, Montserrat);\n  --ne-panel-header-font-weight: var(--ne-ref-font-weight-semi-bold, SemiBold);\n  --ne-panel-header-font-size: var(--ne-ref-font-size-08, 1.5em);\n  --ne-panel-header-title: var(--ne-ref-color-nintex-orange, #F56900);\n  --ne-panel-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-panel-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-panel-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-panel-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-panel-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-panel-gap-vertical: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseFilePanel = css`\n  .panel-container {\n    position: relative;\n    box-sizing: border-box;\n    display: grid;\n    border-radius: var(--ne-panel-border-radius);\n    border: var(--ne-panel-border-width) solid var(--ne-panel-color-border);\n    padding: 0 var(--ne-panel-padding-horizontal)\n      var(--ne-panel-padding-vertical) var(--ne-panel-padding-horizontal);\n    margin: 0;\n    background-color: var(--ne-panel-color-background);\n  }\n\n  .panel-header {\n    border-bottom: 1px solid var(--ne-panel-color-border);\n  }\n\n  .header-label {\n    font-family: var(--ne-panel-header-font-family);\n    font-weight: var(--ne-panel-header-font-weight);\n    font-size: var(--ne-panel-header-font-size);\n    color: var(--ne-panel-header-title);\n  }\n\n  .panel-content {\n    font-size: var(--ne-panel-font-size);\n    font-family: var(--ne-panel-font-family);\n    padding: var(--ne-panel-padding-vertical) var(--ne-panel-padding-horizontal);\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\nconst styles = [baseFilePanel, commonStyles, tokens];\n\n/**\n * @tag ne-panel\n * @tagname ne-panel\n *\n */\nlet NePanel = class NePanel extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.heading = '';\n  }\n  static get scopedElements() {\n    return {\n      'ne-button-set': NeButtonSet\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html` <div class=\"panel-container\">\n      <span class=\"panel-header\">\n        <ne-button-set>\n          <label class=\"header-label\">${this.heading}</label>\n        </ne-button-set>\n      </span>\n      <p class=\"panel-content\">\n        <slot></slot>\n      </p>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String\n})], NePanel.prototype, \"heading\", void 0);\nNePanel = __decorate([customElement('ne-panel')], NePanel);\n\nexport { NePanel };\n//# sourceMappingURL=panel.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-progress-bar-sizing-height: var(--ne-ref-sizing-03, 0.75em);\n  --ne-progress-bar-spacing-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-progress-bar-color-label: var(--ne-ref-color-grey-60, #575C61);\n  --ne-progress-bar-color-optional-text: var(--ne-ref-color-grey-60, #575C61);\n  --ne-progress-bar-color-indicator: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-progress-bar-color-track: var(--ne-ref-color-grey-20, #C4C7CA);\n  --ne-progress-bar-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-progress-bar-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-progress-bar-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-progress-bar-border-radius: var(--ne-ref-border-radius-large, 0.5em);\n}\n`;\n\nconst baseProgressBarStyles = css`\n  :host {\n    contain: content;\n    width: 100%;\n  }\n\n  .progress-bar-wrapper {\n    width: 100%;\n    height: var(--ne-progress-bar-sizing-height);\n    border-radius: var(--ne-progress-bar-border-radius);\n    background-color: var(--ne-progress-bar-color-track);\n  }\n\n  .progress,\n  .progress-bar-wrapper {\n    display: flex;\n    overflow: hidden;\n  }\n\n  .progress-bar {\n    height: var(--ne-progress-bar-sizing-height);\n    transition: width 0.6s ease;\n    background-color: var(--ne-progress-bar-color-indicator);\n    white-space: nowrap;\n  }\n\n  .label-top {\n    font-size: var(--ne-progress-bar-font-size);\n    font-family: var(--ne-progress-bar-font-family);\n    color: var(--ne-progress-bar-color-label);\n    gap: var(--ne-progress-bar-spacing-gap);\n    margin-bottom: 5px;\n  }\n\n  .label-bottom {\n    font-size: var(--ne-progress-bar-font-size);\n    font-family: var(--ne-progress-bar-font-family);\n    color: var(--ne-progress-bar-color-optional-text);\n    gap: var(--ne-progress-bar-spacing-gap);\n    margin-top: 5px;\n  }\n`;\nconst styles = [baseProgressBarStyles, commonStyles, tokens];\n\n/**\n * @tag ne-progress-bar\n * @tagname ne-progress-bar\n *\n */\nlet NeProgressBar = class NeProgressBar extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the label text at the top of the progress bar\n     */\n    this.topLabel = '';\n    /**\n     * Specifies the optional label text at the bottom of the progress bar\n     */\n    this.bottomLabel = '';\n    /**\n     * Specifies the progress percentage. 0 to 100.\n     */\n    this.progress = 0;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`\n      <div id=\"title\" class=\"label-top\">${this.topLabel}</div>\n      <div\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow=${this.progress}\n        aria-labelledby=\"title\"\n        class=\"progress-bar-wrapper\"\n      >\n        <div\n          class=\"progress-bar\"\n          style=${styleMap({\n      width: `${this.progress}%`\n    })}\n        ></div>\n      </div>\n      <div class=\"label-bottom\">${this.bottomLabel}</div>\n    `;\n  }\n};\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeProgressBar.prototype, \"topLabel\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeProgressBar.prototype, \"bottomLabel\", void 0);\n__decorate([property({\n  type: Number,\n  reflect: true\n})], NeProgressBar.prototype, \"progress\", void 0);\nNeProgressBar = __decorate([customElement('ne-progress-bar')], NeProgressBar);\n\nexport { NeProgressBar };\n//# sourceMappingURL=progress-bar.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, nothing, html } from 'lit';\nimport { property, customElement, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { f as fire } from './events-1173f562.js';\n\n/* eslint-disable */\nconst tokens$1 = css`\n  * {\n  --ne-radio-button-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-radio-button-padding-subtext: var(--ne-ref-spacing-x-large, 2em);\n  --ne-radio-button-color-background-selected-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-radio-button-color-background-selected-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-radio-button-color-background-selected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-radio-button-color-background-selected-focus: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-radio-button-color-background-unselected-default: var(--ne-ref-color-white, #ffffff);\n  --ne-radio-button-color-background-unselected-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-radio-button-color-background-unselected-hover: var(--ne-ref-color-white, #ffffff);\n  --ne-radio-button-color-background-unselected-focus: var(--ne-ref-color-white, #ffffff);\n  --ne-radio-button-color-mark: var(--ne-ref-color-white, #ffffff);\n  --ne-radio-button-color-border-selected-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-radio-button-color-border-selected-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-radio-button-color-border-selected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-radio-button-color-border-selected-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-radio-button-color-border-unselected-default: var(--ne-ref-color-grey40, #898F94);\n  --ne-radio-button-color-border-unselected-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-radio-button-color-border-unselected-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-radio-button-color-border-unselected-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-radio-button-color-text-enabled-option: var(--ne-ref-color-grey-90, #161718);\n  --ne-radio-button-color-text-enabled-subtext: var(--ne-ref-color-grey-60, #575C61);\n  --ne-radio-button-color-text-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-radio-button-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-radio-button-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-radio-button-font-size-option: var(--ne-ref-font-size-04, 0.875em);\n  --ne-radio-button-font-size-subtext: var(--ne-ref-font-size-02, 0.75em);\n  --ne-radio-button-sizing-mark: var(--ne-ref-sizing-02, 0.5em);\n  --ne-radio-button-sizing-radio: var(--ne-ref-sizing-04, 1em);\n  --ne-radio-button-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-radio-button-line-height: var(--ne-ref-line-height-condensed, 1.25em);\n}\n`;\n\nconst baseRadioButton = css`\n  .container {\n    position: relative;\n    display: flex;\n    gap: var(--ne-radio-button-gap);\n    min-height: var(--ne-radio-button-line-height);\n    font-family: var(--ne-radio-button-font-family);\n    line-height: var(--ne-radio-button-line-height);\n    align-items: center;\n  }\n\n  .content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .radio-label {\n    height: var(--ne-radio-button-line-height);\n    position: relative;\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n    color: var(--ne-radio-button-color-text-enabled-option);\n    font-size: var(--ne-radio-button-font-size-option);\n  }\n\n  .sub-text {\n    font-size: var(--ne-radio-button-font-size-subtext);\n    color: var(--ne-radio-button-color-text-enabled-subtext);\n  }\n\n  .radio-content {\n    display: grid;\n    align-self: baseline;\n    align-content: center;\n    height: var(--ne-radio-button-line-height);\n    width: calc(var(--ne-radio-button-sizing-radio) + 1px);\n  }\n\n  .radio-container {\n    display: flex;\n    vertical-align: middle;\n  }\n\n  .container input {\n    position: absolute;\n    opacity: 0;\n    appearance: none;\n    left: var(--ne-radio-button-border-width);\n    top: calc(\n      var(--ne-radio-button-line-height) - var(--ne-radio-button-sizing-radio)\n    );\n    height: 1px;\n  }\n\n  .checkmark {\n    position: relative;\n    left: 0;\n    height: calc(\n      var(--ne-radio-button-sizing-radio) -\n        calc(2 * var(--ne-radio-button-border-width))\n    );\n    width: calc(\n      var(--ne-radio-button-sizing-radio) -\n        calc(2 * var(--ne-radio-button-border-width))\n    );\n    border-radius: 50%;\n    border: var(--ne-radio-button-border-width) solid\n      var(--ne-radio-button-color-border-unselected-default);\n    background-color: var(\n      --ne-radio-button-color-background-unselected-default\n    );\n  }\n\n  .container input[disabled] ~ .checkmark {\n    background-color: var(\n      --ne-radio-button-color-background-unselected-disabled\n    );\n    border: var(--ne-radio-button-border-width) solid\n      var(--ne-radio-button-color-border-unselected-disabled);\n  }\n\n  .checkmark::after {\n    content: '';\n    position: absolute;\n    display: none;\n  }\n\n  .container .checkmark::after {\n    top: calc(var(--ne-radio-button-sizing-mark) / 2);\n    left: calc(var(--ne-radio-button-sizing-mark) / 2);\n    width: var(--ne-radio-button-sizing-mark);\n    height: var(--ne-radio-button-sizing-mark);\n    border-radius: 50%;\n    background-color: var(--ne-radio-button-color-mark);\n  }\n\n  .container input[checked] ~ .checkmark::after {\n    display: block;\n  }\n\n  .container input:focus ~ .checkmark {\n    border: var(--ne-radio-button-border-width) solid\n      var(--ne-radio-button-color-border-selected-hover);\n    outline: 4px solid var(--ne-radio-button-color-border-selected-focus);\n  }\n\n  .container input[checked] ~ .checkmark {\n    height: var(--ne-radio-button-sizing-radio);\n    width: var(--ne-radio-button-sizing-radio);\n    background-color: var(--ne-radio-button-color-background-selected-default);\n    border: none;\n  }\n\n  .container input:not([disabled]):hover ~ .checkmark {\n    cursor: pointer;\n    border: var(--ne-radio-button-border-width) solid\n      var(--ne-radio-button-color-border-selected-hover);\n  }\n\n  .container input[checked]:hover ~ .checkmark {\n    border: none;\n    background-color: var(--ne-radio-button-color-background-selected-hover);\n  }\n\n  .container input[disabled]:checked ~ .checkmark {\n    background-color: var(--ne-radio-button-color-background-selected-disabled);\n    border: none;\n    height: var(--ne-radio-button-sizing-radio);\n    width: var(--ne-radio-button-sizing-radio);\n  }\n\n  .container input[disabled] ~ .content label {\n    color: var(--ne-radio-button-color-text-disabled);\n  }\n`;\nconst styles$1 = [baseRadioButton, commonStyles, tokens$1];\n\n/**\n * @tag ne-radio-button\n * @tagname ne-radio-button\n *\n */\nlet NeRadioButton = class NeRadioButton extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.disabled = false;\n    this.checked = false;\n    this.name = '';\n    this.value = '';\n    this.subtext = '';\n    this.groupName = '';\n    this.handleClick = () => {\n      if (!this.onClick) {\n        fire(this, 'ne-click', {\n          composed: true,\n          bubbles: true\n        });\n        this.checked = !this.checked;\n      } else {\n        fire(this, 'ne-click', {\n          composed: true,\n          bubbles: true\n        });\n        this.onClick(this.name);\n      }\n    };\n  }\n  static get styles() {\n    return styles$1;\n  }\n  _keydownHandler(e) {\n    if (!this.keydownHandler) {\n      if (e.code === 'Space') {\n        this.handleClick();\n      }\n    } else {\n      this.keydownHandler(e);\n    }\n  }\n  render() {\n    const group = this.groupName ? `${this.groupName}-${this.id}` : nothing;\n    return html`\n      <label class=\"container\">\n        <div class=\"radio-content\">\n          <div class=\"radio-container\">\n            <input\n                class=\"input-radio\"\n                type=\"radio\"\n                id=\"${group || this.id}\"\n                ?disabled=${this.disabled}\n                ?checked=\"${this.checked}\"\n                @click=\"${this.handleClick}\"\n                name=${this.name}\n                @keydown=\"${this._keydownHandler}\"\n            >\n              <span class=\"checkmark\"\n              ></span>\n            </input>\n          </div>\n        </div>\n        <div class=\"content\">\n          <label class=\"radio-label\" for=\"input-radio\">${this.value}</label>\n          ${this.subtext.length > 0 ? html`<label class=\"sub-text\">${this.subtext}</label>` : nothing}\n        </div>\n      </label>`;\n  }\n};\n__decorate([property({\n  attribute: 'disabled',\n  type: Boolean\n})], NeRadioButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'checked',\n  type: Boolean\n})], NeRadioButton.prototype, \"checked\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeRadioButton.prototype, \"name\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeRadioButton.prototype, \"value\", void 0);\n__decorate([property({\n  type: String\n})], NeRadioButton.prototype, \"subtext\", void 0);\n__decorate([property({\n  type: String\n})], NeRadioButton.prototype, \"groupName\", void 0);\n__decorate([property()], NeRadioButton.prototype, \"onClick\", void 0);\n__decorate([property()], NeRadioButton.prototype, \"keydownHandler\", void 0);\nNeRadioButton = __decorate([customElement('ne-radio-button')], NeRadioButton);\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-radio-button-group-gap: var(--ne-ref-spacing-x-small, 0.5em);\n}\n`;\n\nconst baseRadioButtonGroup = css`\n  .radio-button-group-container {\n    height: fit-content;\n    width: fit-content;\n    margin: var(--ne-radio-button-group-gap) 0;\n    display: grid;\n    grid-row-gap: var(--ne-radio-button-group-gap);\n    font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n    color: var(--ne-ref-color-grey-60, #575c61);\n    font-size: var(--ne-ref-font-size-04, 0.875em);\n    line-height: var(--ne-ref-line-height-small, 1.1875em);\n  }\n\n  .radio-button-group {\n    display: grid;\n    gap: var(--ne-radio-button-group-gap);\n  }\n`;\nconst styles = [baseRadioButtonGroup, commonStyles, tokens];\n\n/**\n * @tag ne-radio-button-group\n * @tagname ne-radio-button-group\n *\n */\nlet NeRadioButtonGroup = class NeRadioButtonGroup extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.groupName = '';\n    this.label = '';\n    this.items = [];\n  }\n  static get styles() {\n    return styles;\n  }\n  onClick(name, items) {\n    this.items = items.map(item => {\n      const newItem = item;\n      newItem.checked = newItem.name === name;\n      return newItem;\n    });\n    if (this.handleClick) {\n      this.handleClick(name);\n    }\n    return name;\n  }\n  keydownHandler(e, i, items) {\n    let idx = i;\n    if (e.code === 'Space') {\n      this.onClick(items[idx].name, items);\n    }\n    if (e.code === 'ArrowDown') {\n      idx = i + 1;\n      if (items[idx] === undefined) {\n        idx = 0;\n      }\n      const el = document.querySelector('ne-radio-button-group')?.shadowRoot?.getElementById(items[idx].id)?.shadowRoot?.querySelector('input');\n      el?.focus();\n      this.onClick(items[idx].name, items);\n    }\n    if (e.code === 'ArrowUp') {\n      idx = i - 1;\n      if (idx < 0) {\n        idx = items.length - 1;\n      }\n      const el = document.querySelector('ne-radio-button-group')?.shadowRoot?.getElementById(items[idx].id)?.shadowRoot?.querySelector('input');\n      el?.focus();\n      this.onClick(items[idx].name, items);\n    }\n  }\n  render() {\n    const radioButtonGroup = this.items.map((item, idx) => html` <ne-radio-button\n        .keydownHandler=\"${e => this.keydownHandler(e, idx, this.items)}\"\n        ?disabled=${item?.disabled}\n        ?checked=\"${item.checked?.valueOf()}\"\n        id=${item.id}\n        groupName=${this.groupName}\n        name=\"${item.name}\"\n        .onClick=\"${name => this.onClick(name, this.items)}\"\n        value=\"${item.value}\"\n        subtext=\"${ifDefined(item.subtext)}\"\n      >\n      </ne-radio-button>`);\n    return html` <div\n      class=\"radio-button-group-container\"\n      title=\"radio group ${this.label ?? this.groupName}\"\n    >\n      <label id=\"${this.id}-label\" for=${this.groupName}>\n        ${this.label ?? nothing}\n      </label>\n      <div class=\"radio-button-group\" id=${this.id}>${radioButtonGroup}</div>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String\n})], NeRadioButtonGroup.prototype, \"groupName\", void 0);\n__decorate([property({\n  type: String\n})], NeRadioButtonGroup.prototype, \"label\", void 0);\n__decorate([property()], NeRadioButtonGroup.prototype, \"handleClick\", void 0);\n__decorate([state()], NeRadioButtonGroup.prototype, \"items\", void 0);\nNeRadioButtonGroup = __decorate([customElement('ne-radio-button-group')], NeRadioButtonGroup);\n\nexport { NeRadioButton as N, NeRadioButtonGroup as a };\n//# sourceMappingURL=radio-button-group-5a3106d2.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { check } from './check-132c9894.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-stepper-sizing-circle: var(--ne-ref-sizing-08, 2em);\n  --ne-stepper-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-stepper-padding-element: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-stepper-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-stepper-color-background-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-stepper-color-background-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-stepper-color-background-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-stepper-color-border-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-stepper-color-border-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-stepper-color-label: var(--ne-ref-color-white, #ffffff);\n  --ne-stepper-color-step-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-stepper-color-step-text-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-stepper-border-width: var(--ne-ref-border-width-medium, 2px);\n  --ne-stepper-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-stepper-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-stepper-font-weight-step-text-default: var(--ne-ref-font-weight-regular, Regular);\n  --ne-stepper-font-weight-step-text-active: var(--ne-ref-font-weight-bold, Bold);\n}\n`;\n\nconst baseStep = css`\n  .step-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n  }\n\n  .step-circle-container {\n    position: relative;\n    width: 100%;\n    height: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .stepper-title {\n    margin-top: var(--ne-stepper-padding-element);\n    font-family: var(--ne-stepper-font-family);\n    font-size: var(--ne-stepper-font-size);\n    font-weight: var(--ne-stepper-font-weight-step-text-default);\n  }\n\n  .stepper-title.disabled {\n    color: var(--ne-stepper-color-step-text-disabled);\n  }\n\n  .stepper-title.active {\n    font-weight: var(--ne-stepper-font-weight-step-text-active);\n  }\n\n  .stepper-step {\n    background: var(--ne-stepper-color-border-default);\n    width: var(--ne-stepper-sizing-circle);\n    height: var(--ne-stepper-sizing-circle);\n    border-radius: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--ne-stepper-color-label);\n    font-size: var(--ne-stepper-font-size);\n  }\n\n  .stepper-step .ne-icon {\n    color: var(--ne-stepper-color-label);\n    height: var(--ne-stepper-sizing-icon);\n    width: var(--ne-stepper-sizing-icon);\n  }\n\n  .stepper-step.disabled {\n    background: var(--ne-stepper-color-step-text-disabled);\n    pointer-events: none;\n  }\n\n  .left-line {\n    position: absolute;\n    left: 0;\n    background: var(--ne-stepper-color-border-default);\n    height: var(--ne-stepper-border-width);\n    width: 50%;\n    z-index: -1;\n  }\n\n  .right-line {\n    position: absolute;\n    right: 0;\n    background: var(--ne-stepper-color-border-default);\n    height: var(--ne-stepper-border-width);\n    width: 50%;\n    z-index: -1;\n  }\n\n  .stepper-step:focus {\n    background: var(--ne-stepper-color-background-hover);\n    box-shadow: #a3d1ff 0 0 0 calc(var(--ne-stepper-border-width) * 2);\n    outline: none;\n  }\n\n  .stepper-step:hover,\n  .stepper-step:hover > .left-line,\n  .stepper-step:hover > .right-line,\n  .stepper-step:focus .left-line,\n  .stepper-step:focus .right-line {\n    background: var(--ne-stepper-color-background-hover);\n  }\n\n  .stepper-step.disabled .left-line,\n  .stepper-step.disabled .right-line {\n    background: var(--ne-stepper-color-step-text-disabled);\n  }\n`;\nconst styles$1 = [tokens, baseStep, commonStyles];\n\nlet NeStep = class NeStep extends LitElement {\n  constructor() {\n    super(...arguments);\n    /** Progress line show icon */\n    this.completed = false;\n    /** Progress line is step active */\n    this.active = false;\n    /** Progress line is step disabled */\n    this.disabled = false;\n  }\n  static get styles() {\n    return styles$1;\n  }\n  render() {\n    let progressLineLeft = nothing;\n    let progressLineRight = nothing;\n    if (this.progressLineType === 'start' || this.progressLineType === 'center') {\n      progressLineLeft = html`<span class=\"left-line\"></span>`;\n    }\n    if (this.progressLineType === 'end' || this.progressLineType === 'center') {\n      progressLineRight = html`<span class=\"right-line\"></span>`;\n    }\n    return html` <div class=\"step-container\">\n      <div class=\"step-circle-container\">\n        <div\n          tabindex=\"${this.disabled ? '-1' : '0'}\"\n          class=${classMap({\n      'stepper-step': true,\n      disabled: this.disabled\n    })}\n        >\n          ${progressLineLeft}\n          <div>\n            ${this.completed ? renderIcon({\n      typeAsHtml: check\n    }) : this.index}\n          </div>\n          ${progressLineRight}\n        </div>\n      </div>\n      <div\n        class=${classMap({\n      'stepper-title': true,\n      disabled: this.disabled,\n      active: this.active\n    })}\n      >\n        ${this.name}\n      </div>\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'index',\n  type: String,\n  reflect: true\n})], NeStep.prototype, \"index\", void 0);\n__decorate([property({\n  attribute: 'name',\n  type: String,\n  reflect: true\n})], NeStep.prototype, \"name\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'location',\n  reflect: true\n})], NeStep.prototype, \"progressLineType\", void 0);\n__decorate([property({\n  attribute: 'completed',\n  type: Boolean,\n  reflect: true\n})], NeStep.prototype, \"completed\", void 0);\n__decorate([property({\n  attribute: 'active',\n  type: Boolean,\n  reflect: true\n})], NeStep.prototype, \"active\", void 0);\n__decorate([property({\n  attribute: 'disabled',\n  type: Boolean,\n  reflect: true\n})], NeStep.prototype, \"disabled\", void 0);\nNeStep = __decorate([customElement('ne-step')], NeStep);\n\nconst baseStepper = css`\n  ::slotted(*) {\n    width: 100%;\n  }\n\n  .stepper-container {\n    font-family: var(--ne-stepper-font-family);\n    position: relative;\n    width: 100%;\n    height: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\nconst styles = [tokens, baseStepper, commonStyles];\n\nvar _class;\nlet NeStepper = (_class = class NeStepper extends LitElement {\n  render() {\n    return html` <div class=\"stepper-container\">\n      <slot></slot>\n    </div>`;\n  }\n}, _class.styles = [styles, css`\n      :host {\n        width: 100%;\n      }\n    `], _class);\nNeStepper = __decorate([customElement('ne-stepper')], NeStepper);\n\nexport { NeStepper as N, NeStep as a };\n//# sourceMappingURL=stepper-c928b0de.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens$1 } from './label.tokens-3df70200.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-switch-border-radius: var(--ne-ref-border-radius-xl, 0.75em);\n  --ne-switch-color-background-on: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-switch-color-background-off: var(--ne-ref-color-grey-60, #575C61);\n  --ne-switch-color-background-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-switch-color-handle: var(--ne-ref-color-white, #ffffff);\n  --ne-switch-color-icon: var(--ne-ref-color-white, #ffffff);\n  --ne-switch-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-switch-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-switch-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-switch-sizing-track-height: var(--ne-ref-sizing-06, 1.5em);\n  --ne-switch-sizing-track-width: var(--ne-ref-sizing-11, 3em);\n  --ne-switch-sizing-handle: var(--ne-ref-sizing-05, 1.25em);\n  --ne-switch-border-width-focus: var(--ne-ref-border-width-large, 4px);\n}\n`;\n\nconst baseToggleButton = css`\n  .container {\n    display: flex;\n    align-items: center;\n  }\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: var(--ne-switch-sizing-track-width);\n    height: var(--ne-switch-sizing-track-height);\n  }\n\n  .switch:focus-within {\n    outline: var(--ne-switch-border-width-focus) solid\n      var(--ne-switch-color-border-focus);\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  .slider {\n    display: flex;\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--ne-switch-color-background-off);\n    transition: 0.4s;\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  input:focus + .slider {\n    box-shadow: 0 0 1px var(--ne-switch-color-background-on);\n  }\n\n  input:checked + .slider {\n    background-color: var(--ne-switch-color-background-on);\n  }\n\n  .slider::before {\n    position: absolute;\n    content: '';\n    height: var(--ne-switch-sizing-handle);\n    width: var(--ne-switch-sizing-handle);\n    left: 2px;\n    bottom: 2px;\n    background-color: var(--ne-switch-color-handle);\n    transition: 0.4s;\n    border-radius: var(--ne-switch-border-radius);\n  }\n\n  .slider.checked::before {\n    left: 0;\n  }\n\n  input:checked + .slider::before {\n    transform: translateX(26px);\n  }\n\n  .slider.disabled {\n    background-color: var(--ne-switch-color-background-disabled);\n  }\n\n  input:checked + .slider.disabled {\n    background-color: var(--ne-switch-color-background-disabled);\n  }\n\n  .icon {\n    color: var(--ne-switch-color-icon);\n    align-self: center;\n    width: var(--ne-switch-sizing-icon);\n    margin: var(--ne-switch-gap);\n  }\n\n  .state-label {\n    font-family: var(--ne-label-font-family);\n    color: var(--ne-label-color-title);\n    font-size: var(--ne-label-font-size);\n    margin-left: var(--ne-label-gap);\n  }\n\n  .state-label.left {\n    padding-inline-end: var(--ne-switch-gap);\n  }\n\n  .state-label.right {\n    padding-inline-start: var(--ne-switch-gap);\n  }\n`;\nconst styles = [tokens, tokens$1, commonStyles, baseToggleButton];\n\n/**\n * @tag ne-switch\n * @tagname ne-switch\n *\n * @event ne-change Raised when the switch is toggled.\n */\nlet NeSwitch = class NeSwitch extends LitElement {\n  constructor() {\n    super(...arguments);\n    // Ref\n    this._checkboxNode = createRef();\n    // Properties\n    /** Sets the toggle status of the switch to either on or off. False by default. */\n    this.checked = false;\n    /** Specifies that the toggle switch should be disabled. False by default. */\n    this.disabled = false;\n    /** Sets the position of the label to either be on the left or right side of the toggle switch. False by default. */\n    this.invertStateLabelPlacement = false;\n    /** Show/Hide the \"On/Off\" label next to the switch. True by default. */\n    this.stateLabelVisible = true;\n    // Events\n    this._onChange = () => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const {\n        checked\n      } = this._checkboxNode.value;\n      this.checked = checked;\n      if (!this.disabled) {\n        fire(this, 'ne-change', {\n          detail: {\n            checked,\n            description: this._statusLabelDescription()\n          }\n        });\n      }\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  _statusLabelDescription() {\n    if (this.checked) {\n      return 'On';\n    }\n    return 'Off';\n  }\n  render() {\n    const leftLabel = this.stateLabelVisible && this.invertStateLabelPlacement ? html`<div class=\"state-label left\">\n            ${this._statusLabelDescription()}\n          </div>` : null;\n    const rightLabel = this.stateLabelVisible && !this.invertStateLabelPlacement ? html`<div class=\"state-label right\">\n            ${this._statusLabelDescription()}\n          </div>` : null;\n    return html`\n      <div class=\"container\">\n        ${leftLabel}\n        <label class=\"switch\">\n          <input\n            id=\"checkbox\"\n            type=\"checkbox\"\n            aria-label=${this._statusLabelDescription()}\n            ${ref(this._checkboxNode)}\n            .checked=${this.checked}\n            ?disabled=${this.disabled}\n            @change=${this._onChange}\n          />\n          <span\n            class=${classMap({\n      slider: true,\n      disabled: this.disabled,\n      checked: this.checked\n    })}\n          >\n            <div class=${this.checked ? 'icon' : 'hidden'}>\n              ${renderIcon({\n      type: 'check'\n    })}\n            </div>\n          </span>\n        </label>\n        ${rightLabel}\n      </div>\n    `;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"checked\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"invertStateLabelPlacement\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSwitch.prototype, \"stateLabelVisible\", void 0);\nNeSwitch = __decorate([customElement('ne-switch')], NeSwitch);\n\nexport { NeSwitch };\n//# sourceMappingURL=switch.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { live } from 'lit/directives/live.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { v as validationLayoutStyles, a as validationStyles, t as tokens$1, V as ValidationBaseComponent, b as ValidationType } from './validation.tokens-db86eca9.js';\nimport { f as fire } from './events-1173f562.js';\nimport '@open-wc/scoped-elements';\nimport './iconType-8326eddb.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-textarea-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-textarea-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-textarea-padding-horizontal: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-textarea-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-textarea-color-background-active: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-background-focus: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-background-inactive: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-background-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-textarea-color-background-error: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-background-warning: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-background-default: var(--ne-ref-color-white, #ffffff);\n  --ne-textarea-color-border-active: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-textarea-color-border-inactive: var(--ne-ref-color-grey40, #898F94);\n  --ne-textarea-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-textarea-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-textarea-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-textarea-color-border-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-textarea-color-text-placeholder: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-textarea-color-text-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-textarea-color-text-disabled: var(--ne-ref-color-grey-90, #161718);\n  --ne-textarea-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-textarea-border-radius-help-message-top: var(--ne-ref-border-radius-medium, .25em);\n  --ne-textarea-border-radius-help-message-bottom: var(--ne-ref-border-radius-none, 0);\n  --ne-textarea-border-width-default: var(--ne-ref-border-width-small, 1px);\n  --ne-textarea-border-width-focus: var(--ne-ref-border-width-large, 4px);\n  --ne-textarea-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n}\n`;\n\nconst baseTextarea = css`\n  textarea {\n    display: flex;\n    width: 100%;\n    box-sizing: border-box;\n    resize: none;\n    font-family: var(--ne-textarea-font-family);\n    font-size: var(--ne-textarea-font-size);\n    color: var(--ne-textarea-color-text-default);\n    gap: var(--ne-textarea-gap);\n    padding: var(--ne-textarea-padding-vertical)\n      var(--ne-textarea-padding-horizontal);\n    border-width: 0;\n    border-radius: var(--ne-textarea-border-radius-default);\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-inactive);\n    outline: none;\n    background-color: var(--ne-textarea-color-background-default);\n  }\n\n  textarea::placeholder {\n    color: var(--ne-textarea-color-text-placeholder);\n  }\n\n  textarea:active {\n    background-color: var(--ne-textarea-color-background-active);\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-active);\n  }\n\n  textarea:focus {\n    background-color: var(--ne-textarea-color-background-focus);\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-background-focus);\n    outline: var(--ne-textarea-border-width-focus) solid\n      var(--ne-textarea-color-border-focus);\n  }\n\n  textarea:disabled {\n    color: var(--ne-textarea-color-text-disabled);\n    background-color: var(--ne-textarea-color-background-disabled);\n  }\n\n  textarea.warning {\n    border-radius: var(--ne-textarea-border-radius-help-message-top)\n      var(--ne-textarea-border-radius-help-message-top)\n      var(--ne-textarea-border-radius-help-message-bottom)\n      var(--ne-textarea-border-radius-help-message-bottom);\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-warning);\n    background-color: var(--ne-textarea-color-background-warning);\n  }\n\n  textarea.error {\n    border-radius: var(--ne-textarea-border-radius-help-message-top)\n      var(--ne-textarea-border-radius-help-message-top)\n      var(--ne-textarea-border-radius-help-message-bottom)\n      var(--ne-textarea-border-radius-help-message-bottom);\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-error);\n    background-color: var(--ne-textarea-color-background-error);\n  }\n\n  textarea.error:focus,\n  textarea.warning:focus {\n    border-color: var(--ne-textarea-color-border-active);\n    outline: none;\n  }\n\n  textarea[readonly] {\n    border: none;\n    outline: none;\n  }\n\n  .message-container.warning {\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-warning);\n  }\n\n  .message-container.error {\n    border: var(--ne-textarea-border-width-default) solid\n      var(--ne-textarea-color-border-error);\n  }\n`;\nconst styles = [tokens, baseTextarea, validationLayoutStyles, validationStyles, tokens$1, commonStyles];\n\n/**\n * @tag ne-textarea\n * @tagname ne-textarea\n *\n */\nlet NeTextarea = class NeTextarea extends ValidationBaseComponent {\n  constructor() {\n    super(...arguments);\n    // Properties\n    this.disabled = false;\n    this.readonly = false;\n    this.required = false;\n    this.value = '';\n    this.ariaLabel = '';\n    this.ariaLabelledby = '';\n    this.rows = 2;\n    // Events\n    this._handleInput = evt => {\n      fire(this, 'ne-input', {\n        detail: {\n          value: evt.target.value\n        }\n      });\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    const htmlTemplate = html`\n      <textarea\n        ?disabled=${this.disabled}\n        ?readonly=${this.readonly}\n        ?required=${this.required}\n        aria-label=${this.ariaLabel || nothing}\n        aria-labelledby=${this.ariaLabelledby || nothing}\n        placeholder=${ifDefined(this.placeholder)}\n        rows=${this.rows}\n        @input=${this._handleInput}\n        .value=${live(this.value)}\n        class=${classMap({\n      error: this.validationState === ValidationType.error,\n      warning: this.validationState === ValidationType.warning\n    })}\n      ></textarea>\n    `;\n    return this.renderWithValidation(htmlTemplate);\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeTextarea.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeTextarea.prototype, \"readonly\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeTextarea.prototype, \"required\", void 0);\n__decorate([property({\n  type: String\n})], NeTextarea.prototype, \"placeholder\", void 0);\n__decorate([property({\n  type: String\n})], NeTextarea.prototype, \"value\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-label'\n})], NeTextarea.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'ne-aria-labelledby'\n})], NeTextarea.prototype, \"ariaLabelledby\", void 0);\n__decorate([property({\n  type: Number\n})], NeTextarea.prototype, \"rows\", void 0);\nNeTextarea = __decorate([customElement('ne-textarea')], NeTextarea);\n\nexport { NeTextarea };\n//# sourceMappingURL=textarea.js.map\n","import { _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { state, property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NeIcon } from './icon.js';\nimport { f as fire } from './events-1173f562.js';\nimport { A as AlertType } from './alertType-bddadb4d.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-toast-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-toast-sizing-timer-bar-height: var(--ne-ref-sizing-01, 0.25em);\n  --ne-toast-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-toast-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-toast-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-toast-color-background-danger: var(--ne-ref-color-red-50, #E60000);\n  --ne-toast-color-background-success: var(--ne-ref-color-green-50, #008738);\n  --ne-toast-color-background-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-toast-color-background-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-toast-color-label-default: var(--ne-ref-color-white, #ffffff);\n  --ne-toast-color-label-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-toast-color-timer-default: var(--ne-ref-color-white, #ffffff);\n  --ne-toast-color-timer-warning: var(--ne-ref-color-grey-90, #161718);\n  --ne-toast-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-toast-border-radius-timer-top: var(--ne-ref-border-radius-none, 0);\n  --ne-toast-border-radius-timer-bottom-left: var(--ne-ref-border-radius-medium, .25em);\n  --ne-toast-border-radius-timer-bottom-right: var(--ne-ref-border-radius-none, 0);\n  --ne-toast-shadow: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n  --ne-toast-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-toast-font-size: var(--ne-ref-font-size-04, 0.875em);\n}\n`;\n\nconst base$1 = css`\n  :host {\n    width: 100%;\n    box-shadow: var(--ne-ref-shadow-level1);\n  }\n\n  .toast-item {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    padding: var(--ne-toast-padding-horizontal) var(--ne-toast-padding-vertical);\n    box-sizing: border-box;\n    border: none;\n    border-radius: var(--ne-toast-border-radius-default);\n    font-family: var(--ne-toast-font-family);\n    font-size: var(--ne-toast-font-size);\n    color: var(--ne-toast-color-label-default);\n  }\n\n  .timer-bar {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    height: 0.25em;\n    border-radius: var(--ne-toast-border-radius-timer-top)\n      var(--ne-toast-border-radius-timer-top)\n      var(--ne-toast-border-radius-timer-bottom-left)\n      var(--ne-toast-border-radius-timer-bottom-right);\n    background-color: var(--ne-toast-color-timer-default);\n    transition: width 50ms linear;\n  }\n\n  .info {\n    background-color: var(--ne-toast-color-background-info);\n  }\n\n  .success {\n    background-color: var(--ne-toast-color-background-success);\n  }\n\n  .danger {\n    background-color: var(--ne-toast-color-background-danger);\n  }\n\n  .warning {\n    background-color: var(--ne-toast-color-background-warning);\n    color: var(--ne-toast-color-label-warning);\n  }\n\n  .warning .timer-bar {\n    background-color: var(--ne-toast-color-timer-warning);\n  }\n\n  .content {\n    flex-grow: 1;\n    word-wrap: break-word;\n  }\n\n  .banner-alert.closable .content {\n    padding-right: 0;\n  }\n\n  .icon {\n    flex-shrink: 0;\n    display: block;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    box-sizing: border-box;\n    background-color: transparent;\n  }\n\n  .warning .icon {\n    color: var(--ne-ref-color-grey-90);\n  }\n\n  .type-icon {\n    min-width: var(--ne-toast-sizing-icon);\n    max-width: var(--ne-toast-sizing-icon);\n    margin: 0 6px;\n  }\n`;\nconst styles$1 = [base$1, tokens];\n\n/**\n * @tag ne-toast-item\n * @tagname ne-toast-item\n *\n * @description Control to render a toast notification at the top of the screen with a default timeout duration of 6000 milliseconds.\n *\n * @event ne-close Raised when the internal built in close button is clicked\n */\nlet NeToastItem = class NeToastItem extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.defaultDuration = 6000;\n    this._progressTimer = null;\n    this._progress = 100;\n    /**\n     * Specifies that variant type. Info is default\n     */\n    this.alertType = AlertType.info;\n    /**\n     * Specifies the timeout duration. 6000 by default, setting the duration to 0 will use the default value\n     */\n    this.duration = this.defaultDuration;\n    /**\n     * Specifies that the should be closable or not\n     */\n    this.closable = false;\n    /**\n     * Specifies that an input should be disabled\n     */\n    this.autoClose = true;\n    // Events\n    this._handleMouseOver = () => {\n      if (this._progressTimer) {\n        window.clearTimeout(this._progressTimer);\n      }\n      this._progressTimer = null;\n    };\n    this._handleMouseOut = () => {\n      if (this.autoClose && this._progress > 0) {\n        this._updateProgress();\n      }\n    };\n    this._handleBannerAlertNeClose = evt => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this._close();\n    };\n    // Functions\n    this._close = () => {\n      if (this._progressTimer) {\n        window.clearTimeout(this._progressTimer);\n        this._progressTimer = null;\n      }\n      if (this.messageId) {\n        fire(this, 'ne-close', {\n          detail: this.messageId\n        });\n      }\n    };\n    this._updateProgress = () => {\n      this._progress -= 1;\n      if (this._progress > 0) {\n        this._progressTimer = window.setTimeout(() => this._updateProgress(), this.duration > 0 ? this.duration / 100 : this.defaultDuration / 100);\n      } else {\n        this._close();\n      }\n    };\n    this.getTypeIcon = () => {\n      let iconType;\n      switch (this.alertType) {\n        case AlertType.info:\n          iconType = Icons.info;\n          break;\n        case AlertType.success:\n          iconType = Icons.success;\n          break;\n        case AlertType.danger:\n          iconType = Icons.dangerExclamation;\n          break;\n        case AlertType.warning:\n          iconType = Icons.warningExclamation;\n          break;\n      }\n      return iconType;\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles$1;\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon\n    };\n  }\n  render() {\n    return html`<div\n      role=\"alert\"\n      class=\"${classMap({\n      'toast-item': true,\n      [this.alertType]: true,\n      closable: this.closable\n    })}\"\n      @mouseover=\"${this._handleMouseOver}\"\n      @mouseout=\"${this._handleMouseOut}\"\n      @focus=\"${this._handleMouseOver}\"\n      @blur=\"${this._handleMouseOut}\"\n    >\n      <span class=\"icon type-icon\">${renderIcon({\n      type: this.getTypeIcon()\n    })}</ne-icon></span>\n      <div class=\"content\"><slot></slot></div>\n      ${this.closable ? html`<ne-icon-button\n              variant=${this.alertType === AlertType.warning ? 'dark' : 'light'}\n              ne-aria-label=\"close-button\"\n              icon=${Icons.closeDefault}\n              @click=${this._handleBannerAlertNeClose}\n            ></ne-icon-button>` : ''}\n      ${this.autoClose ? html`<div\n              class=\"timer-bar\"\n              style=${styleMap({\n      width: `${this._progress}%`\n    })}\n            ></div>` : ''}\n    </div>`;\n  }\n  firstUpdated() {\n    if (this.autoClose) {\n      this._updateProgress();\n    }\n  }\n};\n__decorate([state()], NeToastItem.prototype, \"_progress\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeToastItem.prototype, \"alertType\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeToastItem.prototype, \"messageId\", void 0);\n__decorate([property({\n  type: Number,\n  reflect: true\n})], NeToastItem.prototype, \"duration\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeToastItem.prototype, \"closable\", void 0);\n__decorate([property({\n  type: Boolean\n})], NeToastItem.prototype, \"autoClose\", void 0);\nNeToastItem = __decorate([customElement('ne-toast-item')], NeToastItem);\n\nconst base = css`\n  .toast-notification {\n    position: fixed;\n    left: 50%;\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    width: 50vw;\n    padding: 3px 4px 4px;\n    box-sizing: border-box;\n    transform: translateX(-50%);\n    z-index: 9999;\n  }\n\n  .toast-notification.top-center {\n    top: 0;\n    flex-direction: column;\n  }\n\n  .toast-notification.bottom-center {\n    bottom: 0;\n    flex-direction: column-reverse;\n  }\n\n  .toast-item.hidden {\n    display: none;\n  }\n`;\nconst styles = [base];\n\n/**\n * @tag ne-toast-notification\n * @tagname ne-toast-notification\n *\n */\nlet NeToastNotification = class NeToastNotification extends LitElement {\n  constructor() {\n    super(...arguments);\n    // Properties\n    this._toastItems = [];\n    this.position = 'top-center';\n    // Events\n    this._handleToastItemNeClose = evt => {\n      const idx = this._toastItems.findIndex(ti => ti.messageId === evt.detail);\n      if (idx > -1) {\n        const newToastItems = this._toastItems.slice();\n        newToastItems[idx].hidden = true;\n        const allToastsHidden = !newToastItems.some(ti => ti.hidden !== true);\n        this._toastItems = allToastsHidden ? [] : newToastItems;\n      }\n    };\n    // Functions\n    this.showToast = toastItemProps => {\n      const toastItem = {\n        ...toastItemProps\n      };\n      if (!toastItem.messageId) {\n        toastItem.messageId = Math.random().toString(36).substring(2, 9);\n      }\n      this._toastItems = [...this._toastItems, toastItem];\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div class=\"toast-notification ${this.position}\">\n      ${this._toastItems.map(ti => html`<ne-toast-item\n            class=\"toast-item ${ti.hidden ? 'hidden' : ''}\"\n            .alertType=${ti['alert-type']}\n            .messageId=${ti.messageId}\n            .duration=${ti.duration}\n            .closable=${ti.closable === true}\n            .autoClose=${ti.autoClose !== false}\n            @ne-close=${this._handleToastItemNeClose}\n            >${ti.content}</ne-toast-item\n          >`)}\n    </div>`;\n  }\n};\n__decorate([state()], NeToastNotification.prototype, \"_toastItems\", void 0);\n__decorate([property({\n  reflect: true\n})], NeToastNotification.prototype, \"position\", void 0);\nNeToastNotification = __decorate([customElement('ne-toast-notification')], NeToastNotification);\n\nexport { NeToastItem as N, NeToastNotification as a };\n//# sourceMappingURL=toast-notification-0dde6fff.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { t as tokens } from './toolbar.tokens-507f588f.js';\n\nconst baseToolbar = css`\n  .toolbar {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    gap: var(--ne-toolbar-gap);\n    box-sizing: border-box;\n    margin: 0;\n    padding: var(--ne-toolbar-padding-vertical)\n      var(--ne-toolbar-padding-horizontal);\n    background-color: var(--ne-toolbar-background);\n    box-shadow: 3px 3px 5px rgb(196 199 202 / 50%);\n  }\n\n  .toolbar ::slotted(li) {\n    display: block;\n  }\n\n  .toolbar ::slotted(.right-start) {\n    margin-left: auto;\n  }\n`;\nconst styles = [tokens, baseToolbar, commonStyles];\n\nlet NeToolbar = class NeToolbar extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.ariaLabel = '';\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div class=\"toolbar\" aria-label=${this.ariaLabel || nothing}>\n      <slot></slot>\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeToolbar.prototype, \"ariaLabel\", void 0);\nNeToolbar = __decorate([customElement('ne-toolbar')], NeToolbar);\n\nexport { NeToolbar };\n//# sourceMappingURL=toolbar.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { queryAssignedNodes, state, property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { NeIcon } from './icon.js';\nimport { t as tokens$1 } from './toolbar.tokens-507f588f.js';\nimport { f as fire } from './events-1173f562.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-toolbar-button-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-toolbar-button-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-toolbar-button-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-toolbar-button-color-background-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-toolbar-button-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-toolbar-button-color-label-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-toolbar-button-color-label-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-toolbar-button-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-toolbar-button-sizing-icon: var(--ne-ref-sizing-04, 1em);\n}\n`;\n\nconst baseToolbarButton = css`\n  .outer-container {\n    position: relative;\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  .toolbar-button {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    gap: var(--ne-toolbar-button-gap);\n    width: 100%;\n    box-sizing: border-box;\n    margin: 0;\n    padding: calc(var(--ne-toolbar-button-padding-vertical) - 4px)\n      calc(var(--ne-toolbar-button-padding-horizontal) - 4px);\n    border: 4px solid transparent;\n    outline: none;\n    background-color: transparent;\n    font-family: var(--ne-toolbar-button-font-family);\n    font-size: var(--ne-toolbar-font-size);\n    color: var(--ne-toolbar-button-color-label-default);\n  }\n\n  .toolbar-button:focus {\n    border-color: var(--ne-toolbar-button-color-border-focus);\n  }\n\n  .toolbar-button:hover,\n  .toolbar-button.dropdown-menu-shown {\n    background-color: var(--ne-toolbar-button-color-background-hover);\n  }\n\n  .toolbar-button:disabled {\n    color: var(--ne-toolbar-button-color-label-disabled);\n  }\n\n  .dropdown-menu-container {\n    position: absolute;\n    left: -4px;\n    right: initial;\n    display: none;\n    margin-top: 4px;\n    z-index: 1;\n  }\n\n  .toolbar-button.dropdown-menu-shown + .dropdown-menu-container {\n    display: block;\n  }\n\n  .dropdown-menu-container.right-aligned {\n    left: initial;\n    right: -4px;\n  }\n\n  .dropdown-menu-container ::slotted(ul) {\n    margin: 0;\n    padding: 0;\n  }\n\n  .icon {\n    height: var(--ne-toolbar-button-sizing-icon);\n    width: var(--ne-toolbar-button-sizing-icon);\n  }\n\n  .icon.fixed-size {\n    align-items: center;\n    justify-items: center;\n  }\n`;\nconst styles = [tokens, baseToolbarButton, tokens$1, commonStyles];\n\nlet NeToolbarButton = class NeToolbarButton extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon\n    };\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  constructor() {\n    super();\n    this.showDropdownMenu = false;\n    this.hasDropdownMenu = false;\n    this.buttonClicked = false;\n    this.disabled = false;\n    this.leftIconSize = '';\n    this.rightIconSize = '';\n    this.ariaLabel = '';\n    this._dropdownMenuContainerElemRef = createRef();\n    // Events\n    this._onClick = () => {\n      this.buttonClicked = true;\n      if (!this.disabled) {\n        if (this.hasDropdownMenu) {\n          this.showDropdownMenu = !this.showDropdownMenu;\n        }\n        fire(this, 'ne-click', {\n          composed: true,\n          bubbles: false\n        });\n      }\n    };\n    this._onDocumentClick = () => {\n      if (!this.buttonClicked) {\n        this.showDropdownMenu = false;\n      }\n      this.buttonClicked = false;\n    };\n    this._onDropdownMenuElemChange = () => {\n      this.hasDropdownMenu = this._slottedDropdownMenuElems.length > 0;\n    };\n    document.addEventListener('click', this._onDocumentClick);\n  }\n  render() {\n    return html`<div class=\"outer-container\">\n      <button\n        class=${classMap({\n      'toolbar-button': true,\n      'dropdown-menu-shown': this.showDropdownMenu && this.hasDropdownMenu\n    })}\n        ?disabled=${this.disabled}\n        @click=${this._onClick}\n        aria-expanded=${ifDefined(this.hasDropdownMenu ? this.showDropdownMenu : undefined)}\n        aria-label=${this.ariaLabel || nothing}\n      >\n        ${this.leftIconType !== undefined ? html`<ne-icon\n              class=${classMap({\n      icon: true,\n      'fixed-size': this.leftIconSize && this.leftIconSize !== ''\n    })}\n              type=\"${this.leftIconType}\"\n              .fixedSize=${this.leftIconSize}\n            ></ne-icon>` : ''}\n        <span class=\"button-text\"><slot></slot></span>\n        ${this.rightIconType !== undefined ? html`<ne-icon\n              class=${classMap({\n      icon: true,\n      right: true,\n      'fixed-size': this.rightIconSize && this.rightIconSize !== ''\n    })}\n              type=\"${this.rightIconType}\"\n              .fixedSize=${this.rightIconSize}\n            ></ne-icon>` : ''}\n      </button>\n      <div\n        class=\"dropdown-menu-container\"\n        ${ref(this._dropdownMenuContainerElemRef)}\n      >\n        <slot\n          name=\"dropdown-menu\"\n          @slotchange=${this._onDropdownMenuElemChange}\n        ></slot>\n      </div>\n    </div>`;\n  }\n  updated(changedProps) {\n    if (changedProps.has('showDropdownMenu') && this.hasDropdownMenu && this._dropdownMenuContainerElemRef.value) {\n      if (this.showDropdownMenu) {\n        const dropdownMenuContainerElemRect = this._dropdownMenuContainerElemRef.value.getBoundingClientRect();\n        if (dropdownMenuContainerElemRect.right > (window.innerWidth || document.documentElement.clientWidth)) {\n          this._dropdownMenuContainerElemRef.value.classList.add('right-aligned');\n        } else {\n          this._dropdownMenuContainerElemRef.value.classList.remove('right-aligned');\n        }\n      } else {\n        this._dropdownMenuContainerElemRef.value.classList.remove('right-aligned');\n      }\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback?.();\n    document.removeEventListener('click', this._onDocumentClick);\n  }\n};\n__decorate([queryAssignedNodes({\n  slot: 'dropdown-menu',\n  flatten: true\n})], NeToolbarButton.prototype, \"_slottedDropdownMenuElems\", void 0);\n__decorate([state()], NeToolbarButton.prototype, \"showDropdownMenu\", void 0);\n__decorate([state()], NeToolbarButton.prototype, \"hasDropdownMenu\", void 0);\n__decorate([state()], NeToolbarButton.prototype, \"buttonClicked\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeToolbarButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon',\n  reflect: true\n})], NeToolbarButton.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon-size',\n  reflect: true\n})], NeToolbarButton.prototype, \"leftIconSize\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'right-icon',\n  reflect: true\n})], NeToolbarButton.prototype, \"rightIconType\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'right-icon-size',\n  reflect: true\n})], NeToolbarButton.prototype, \"rightIconSize\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeToolbarButton.prototype, \"ariaLabel\", void 0);\nNeToolbarButton = __decorate([customElement('ne-toolbar-button')], NeToolbarButton);\n\nexport { NeToolbarButton };\n//# sourceMappingURL=toolbar-button.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-tooltip-sizing-width: var(--ne-ref-sizing-16, 16em);\n  --ne-tooltip-padding: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-tooltip-color-background: var(--ne-ref-color-white, #ffffff);\n  --ne-tooltip-color-text: var(--ne-ref-color-grey-90, #161718);\n  --ne-tooltip-color-icon-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-tooltip-color-border-error: var(--ne-ref-color-red-50, #E60000);\n  --ne-tooltip-color-border-warning: var(--ne-ref-color-yellow-50, #FFCF1A);\n  --ne-tooltip-color-border-success: var(--ne-ref-color-green-50, #008738);\n  --ne-tooltip-color-border-info: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-tooltip-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-tooltip-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-tooltip-shadow: 0px 0px 8px var(--ne-ref-color-grey-90-20, #16171820);\n  --ne-tooltip-border-radius-default: var(--ne-ref-border-radius-medium, .25em);\n  --ne-tooltip-border-width-bar: var(--ne-ref-border-width-large, 4px);\n  --ne-tooltip-icon-padding: var(--ne-ref-spacing-x-small, 0.5em);\n}\n`;\n\nconst baseTooltip = css`\n  .tooltip {\n    position: relative;\n  }\n\n  .tooltip-content {\n    position: absolute;\n    display: none;\n    cursor: pointer;\n    z-index: 2;\n    background-color: var(--ne-tooltip-color-background);\n    color: var(--ne-tooltip-color-text);\n    padding: var(--ne-tooltip-sizing-padding);\n    border-radius: var(--ne-tooltip-border-radius-default);\n    box-shadow: var(--ne-tooltip-shadow);\n    font-size: var(--ne-tooltip-font-size);\n    font-family: var(--ne-tooltip-font-family);\n    width: var(--ne-tooltip-sizing-width);\n  }\n\n  .show {\n    display: inline-block;\n  }\n\n  .danger {\n    border-left: var(--ne-tooltip-border-width-bar) solid\n      var(--ne-tooltip-color-border-error);\n  }\n\n  .info {\n    border-left: var(--ne-tooltip-border-width-bar) solid\n      var(--ne-tooltip-color-border-info);\n  }\n\n  .warning {\n    border-left: var(--ne-tooltip-border-width-bar) solid\n      var(--ne-tooltip-color-border-warning);\n  }\n\n  .success {\n    border-left: var(--ne-tooltip-border-width-bar) solid\n      var(--ne-tooltip-color-border-success);\n  }\n\n  .default {\n    border-left: var(--ne-tooltip-border-width-bar) solid\n      var(--ne-tooltip-color-background);\n  }\n\n  /* Placement styles */\n  .top {\n    bottom: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-bottom: 4px;\n  }\n\n  .bottom {\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-top: 4px;\n  }\n\n  .left {\n    right: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    margin-right: 4px;\n  }\n\n  .right {\n    top: 50%;\n    left: 100%;\n    transform: translateY(-50%);\n    margin-left: 4px;\n  }\n`;\nconst styles = [tokens, baseTooltip, commonStyles];\n\n/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nvar VariantType;\n(function (VariantType) {\n  VariantType[\"default\"] = \"default\";\n  VariantType[\"info\"] = \"info\";\n  VariantType[\"success\"] = \"success\";\n  VariantType[\"danger\"] = \"danger\";\n  VariantType[\"warning\"] = \"warning\";\n})(VariantType || (VariantType = {}));\n\nconst Placement = {\n  top: 'top',\n  bottom: 'bottom',\n  Left: 'left',\n  right: 'right'\n};\n\n/**\n * @tag ne-tooltip\n * @tagname ne-tooltip\n *\n * @description Control that renders a tooltip for the consuming control.\n *\n */\nlet NeTooltip = class NeTooltip extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the variant of the tooltip. Currently only \"info\" and \"danger\" are supported.\n     */\n    this.variant = VariantType.default;\n    /**\n     * Specifies where the tool tip will appear relative to the consumer component.\n     */\n    this.placement = Placement.top;\n    /**\n     * Specifies the content that will apear inside the tooltip.\n     */\n    this.content = '';\n    this._showToolTip = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  hideTooltip() {\n    this._showToolTip = false;\n  }\n  showTooltip() {\n    this._showToolTip = true;\n  }\n  render() {\n    return html`<div class=\"tooltip\">\n      <slot\n        @mouseover=\"${this.showTooltip}\"\n        @mouseout=\"${this.hideTooltip}\"\n        @focus=\"${this.showTooltip}\"\n        @blur=\"${this.hideTooltip}\"\n      ></slot>\n      <div\n        class=\"${classMap({\n      'tooltip-content': true,\n      show: this._showToolTip,\n      [this.placement]: true,\n      [this.variant]: true\n    })}\"\n      >\n        ${this.content}\n      </div>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  attribute: 'type',\n  reflect: true\n})], NeTooltip.prototype, \"variant\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeTooltip.prototype, \"placement\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeTooltip.prototype, \"content\", void 0);\n__decorate([state()], NeTooltip.prototype, \"_showToolTip\", void 0);\nNeTooltip = __decorate([customElement('ne-tooltip')], NeTooltip);\n\nexport { NeTooltip };\n//# sourceMappingURL=tooltip.js.map\n","export { I as Icons } from './iconType-8326eddb.js';\nexport { a as BadgeContainers, B as BadgeVariants, N as NeBadge } from './badge-af11fb26.js';\nexport { V as ValidationBaseComponent, v as validationLayoutStyles, a as validationStyles, t as validationTokens } from './validation.tokens-db86eca9.js';\nexport { NeAccordion } from './accordion.js';\nimport { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { chevronRight } from './chevronRight-bfcbcd0f.js';\nexport { NeBanner } from './banner.js';\nexport { NeButton } from './button.js';\nexport { NeButtonSet } from './button-set.js';\nexport { NeCheckbox } from './checkbox.js';\nexport { N as NeConfigPanel, a as NeConfigPanelHeader } from './config-panel-87664186.js';\nexport { NeDropdownMenu } from './dropdown-menu.js';\nexport { NeDropdownMenuItem } from './dropdown-menu-item.js';\nexport { NeDropdownField } from './dropdown-field.js';\nexport { NeFileCard } from './file-card.js';\nexport { a as NeFileDropzone, N as NeFilePicker } from './file-picker-d0e02807.js';\nexport { NeIcon } from './icon.js';\nexport { NeIconButton } from './icon-button.js';\nexport { NeInput } from './input.js';\nexport { NeLookupField } from './lookup-field.js';\nexport { NeLabel } from './label.js';\nexport { NeModal } from './modal.js';\nexport { NeOverlay } from './overlay.js';\nexport { NePanel } from './panel.js';\nexport { NeProgressBar } from './progress-bar.js';\nexport { N as NeRadioButton, a as NeRadioButtonGroup } from './radio-button-group-5a3106d2.js';\nexport { N as NeSpinner } from './spinner-aa6c59c9.js';\nexport { NeStatusOverlay } from './status-overlay.js';\nexport { a as NeStep, N as NeStepper } from './stepper-c928b0de.js';\nexport { NeSwitch } from './switch.js';\nexport { NeTextarea } from './textarea.js';\nexport { N as NeToastItem, a as NeToastNotification } from './toast-notification-0dde6fff.js';\nexport { NeToolbar } from './toolbar.js';\nexport { NeToolbarButton } from './toolbar-button.js';\nexport { NePill } from './pill.js';\nexport { NeTooltip } from './tooltip.js';\nimport '@open-wc/scoped-elements';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\nimport './alertType-bddadb4d.js';\nimport './button.tokens-e79c8bbf.js';\nimport './check-132c9894.js';\nimport 'lit/directives/if-defined.js';\nimport 'lit/directives/ref.js';\nimport 'lit/directives/when.js';\nimport './icon.tokens-e4affc49.js';\nimport './trash-56a13cc6.js';\nimport './file-4ab02705.js';\nimport './dropzone-70166a79.js';\nimport 'lit/directives/live.js';\nimport './closeDefault-e6da3ad8.js';\nimport 'lit/directives/unsafe-html.js';\nimport './label.tokens-3df70200.js';\nimport 'lit/directives/unsafe-svg.js';\nimport './toolbar.tokens-507f588f.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-accordion-sizing-icon: var(--ne-ref-sizing-04, 1em);\n  --ne-accordion-padding-header: var(--ne-ref-spacing-medium, 1em);\n  --ne-accordion-padding-body: var(--ne-ref-spacing-medium, 1em);\n  --ne-accordion-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-accordion-color-background: var(--ne-ref-color-white, #ffffff);\n  --ne-accordion-color-header-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-accordion-color-header-default: var(--ne-ref-color-white, #ffffff);\n  --ne-accordion-color-title: var(--ne-ref-color-grey-90, #161718);\n  --ne-accordion-color-asterisk: var(--ne-ref-color-red-60, #B80000);\n  --ne-accordion-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-accordion-color-icon: var(--ne-ref-color-grey-90, #161718);\n  --ne-accordion-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-accordion-font-family-title: var(--ne-ref-font-family-montserrat, Montserrat);\n  --ne-accordion-font-size-title: var(--ne-ref-font-size-06, 1.125em);\n  --ne-accordion-content-gap-vertical: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseAccordionItem = css`\n  .accordion-item-container {\n    border-bottom: var(--ne-accordion-border-width) solid\n      var(--ne-accordion-color-border);\n  }\n\n  .accordion-title-container {\n    border: none;\n    width: 100%;\n    font-family: var(--ne-accordion-font-family-title);\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    background: var(--ne-accordion-color-header-default);\n    padding: var(--ne-accordion-padding-header);\n    font-size: var(--ne-accordion-font-size-title);\n    color: var(--ne-accordion-color-title);\n    cursor: pointer;\n    transition: all 0.3s ease;\n  }\n\n  .accordion-title-container:hover,\n  .accordion-title-container:focus {\n    outline: none;\n    background: var(--ne-accordion-color-header-hover);\n  }\n\n  .accordion-chevron {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: var(--ne-accordion-sizing-icon);\n    width: var(--ne-accordion-sizing-icon);\n    margin-right: var(--ne-accordion-gap);\n    transition: all 0.3s ease;\n  }\n\n  .accordion-chevron .ne-icon {\n    color: var(--ne-accordion-color-icon);\n    height: 10px;\n    width: 10px;\n  }\n\n  .accordion-title-container.open .accordion-chevron {\n    transform: rotateZ(90deg);\n  }\n\n  .accordion-content-container {\n    display: none;\n    padding: var(--ne-accordion-padding-body);\n    background: var(--ne-accordion-color-background);\n  }\n\n  .accordion-content-container.open {\n    display: block;\n  }\n`;\nconst styles = [tokens, baseAccordionItem, commonStyles];\n\n/**\n * @tag ne-accordion-item\n * @tagname ne-accordion-item\n *\n */\nlet NeAccordionItem = class NeAccordionItem extends LitElement {\n  constructor() {\n    super(...arguments);\n    /** Accordion item title */\n    this.accordionTitle = '';\n    /** Accordion item is open */\n    this.open = false;\n    this.onClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n      this.open = !this.open;\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html` <div class=\"accordion-item-container\">\n      <button\n        id=\"accordionId\"\n        type=\"button\"\n        aria-expanded=\"${this.open}\"\n        aria-controls=\"sect\"\n        class=\"${classMap({\n      'accordion-title-container': true,\n      open: this.open\n    })}\"\n        @click=\"${this.onClick}\"\n      >\n        <div class=\"accordion-chevron\">\n          ${renderIcon({\n      typeAsHtml: chevronRight\n    })}\n        </div>\n        <div>${this.accordionTitle}</div>\n      </button>\n      <div\n        id=\"sect\"\n        role=\"region\"\n        aria-labelledby=\"accordionId\"\n        class=\"${classMap({\n      'accordion-content-container': true,\n      open: this.open\n    })}\"\n      >\n        <slot></slot>\n      </div>\n    </div>`;\n  }\n};\n__decorate([property({\n  attribute: 'accordion-title',\n  type: String,\n  reflect: true\n})], NeAccordionItem.prototype, \"accordionTitle\", void 0);\n__decorate([property({\n  attribute: 'open',\n  type: Boolean,\n  reflect: true\n})], NeAccordionItem.prototype, \"open\", void 0);\nNeAccordionItem = __decorate([customElement('ne-accordion-item')], NeAccordionItem);\n\nexport { NeAccordionItem };\n//# sourceMappingURL=index.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property, customElement } from 'lit/decorators.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { NeIcon } from '@nintexglobal/earthling-components';\n\n/**\n *\n * @param element The Element that triggers the event, normally 'this'\n * @param eventType chose from CustomEventTypes\n * @param data the data passed in the event\n * @returns an instance of the event that was dispatched\n */\nconst fire = (element, eventType, data) => {\n  const args = {\n    bubbles: true,\n    cancelable: false,\n    composed: true,\n    ...data\n  };\n  const event = new CustomEvent(eventType, args);\n  element.dispatchEvent(event);\n  return event;\n};\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-link-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n  --ne-link-color-default: var(--ne-ref-color-blue-60, #006BD6);\n  --ne-link-color-hover: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-link-color-focus: var(--ne-ref-color-blue-70, #0052A3);\n  --ne-link-color-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-link-color-border-focus: var(--ne-ref-color-blue-20, #A3D1FF);\n  --ne-link-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-link-font-size: var(--ne-ref-font-size-04, 0.875em);\n  --ne-link-text-decroration-default: var(--ne-ref-text-decoration-none, none);\n  --ne-link-text-decroration-hover: var(--ne-ref-text-decoration-underline, underline);\n  --ne-link-text-decroration-focus: var(--ne-ref-text-decoration-underline, underline);\n  --ne-link-sizing-icon: var(--ne-ref-sizing-04, 1em);\n}\n`;\n\nconst baseLink = css`\n  :host {\n    display: inline-grid;\n    vertical-align: text-bottom;\n  }\n\n  a {\n    color: var(--ne-link-color-default);\n    font-family: var(--ne-link-font-family);\n    text-decoration: var(--ne-link-text-decroration-default);\n    outline: none;\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: min-content min-content min-content;\n    align-items: center;\n    white-space: nowrap;\n  }\n\n  a:hover {\n    text-decoration: var(--ne-link-text-decroration-hover);\n    color: var(--ne-link-color-hover);\n  }\n\n  a:focus-visible {\n    box-sizing: border-box;\n    text-decoration: var(--ne-link-text-decroration-focus);\n    outline: 4px solid var(--ne-link-color-border-focus);\n    color: var(--ne-link-color-focus);\n  }\n\n  a.disabled {\n    cursor: default;\n    text-decoration: var(--ne-link-text-decroration-default);\n    color: var(--ne-link-color-disabled);\n  }\n\n  .icon-slot {\n    min-width: var(--ne-link-sizing-icon);\n    max-width: var(--ne-link-sizing-icon);\n    display: grid;\n  }\n\n  .icon-slot-right {\n    margin-left: var(--ne-link-gap);\n  }\n\n  .icon-slot-left {\n    margin-right: var(--ne-link-gap);\n  }\n\n  span.default {\n    /* This sets sizing for all em sizing on current element so be careful */\n    font-size: var(--ne-link-font-size);\n  }\n`;\nconst styles = [commonStyles, baseLink, tokens];\n\n/* eslint-disable no-shadow */\nvar TargetTypes;\n(function (TargetTypes) {\n  // Opens the linked document in the same frame as it was clicked (this is default)\n  TargetTypes[\"self\"] = \"_self\";\n  // Opens the linked document in a new window or tab\n  TargetTypes[\"blank\"] = \"_blank\";\n  // Opens the linked document in the parent frame\n  TargetTypes[\"parent\"] = \"_parent\";\n  // Opens the linked document in the full body of the window\n  TargetTypes[\"top\"] = \"_top\";\n})(TargetTypes || (TargetTypes = {}));\nconst defaultHrefValue = 'javascript.void(0);';\nconst defaultTargetValue = TargetTypes.self;\n\n/**\n * @tag ne-link\n * @tagname ne-link\n *\n */\nlet NeLink = class NeLink extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.label = '';\n    this.href = defaultHrefValue;\n    this.target = defaultTargetValue;\n    this.onClick = e => {\n      if (this.href === defaultHrefValue || this.disabled?.valueOf() === true) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      if (ifDefined(this.disabled).valueOf() === true) {\n        return;\n      }\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    const leftIcon = this.leftIconType?.valueOf() ? html`<ne-icon id=\"leftIcon\" type=${this.leftIconType}></ne-icon>` : '';\n    const rightIcon = this.rightIconType?.valueOf() ? html`<ne-icon id=\"rightIcon\" type=${this.rightIconType}></ne-icon>` : '';\n    return html`<a\n      @click=\"${this.onClick}\"\n      href=\"${ifDefined(this.disabled) && this.disabled?.valueOf() === true ? defaultHrefValue : this.href}\"\n      target=\"${this.target}\"\n      class=\"${ifDefined(this.disabled) && this.disabled?.valueOf() === true ? 'disabled' : ''} ${ifDefined(this.leftIconType)}\"\n    >\n      <span\n        class=${ifDefined(this.leftIconType) && this.leftIconType !== undefined ? 'icon-slot  icon-slot-left' : 'hidden'}\n      >\n        ${leftIcon}\n      </span>\n      <slot><span class=\"default\">${this.label}</span></slot>\n      <span\n        class=${this.rightIconType !== undefined ? 'icon-slot icon-slot-right' : 'hidden'}\n      >\n        ${rightIcon}\n      </span>\n    </a>`;\n  }\n};\n__decorate([property({\n  attribute: 'label'\n})], NeLink.prototype, \"label\", void 0);\n__decorate([property({\n  attribute: 'left-icon-type',\n  type: String\n})], NeLink.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  attribute: 'right-icon-type',\n  type: String\n})], NeLink.prototype, \"rightIconType\", void 0);\n__decorate([property({\n  attribute: 'href',\n  type: String\n})], NeLink.prototype, \"href\", void 0);\n__decorate([property({\n  attribute: 'target',\n  type: String\n})], NeLink.prototype, \"target\", void 0);\n__decorate([property({\n  attribute: 'disabled',\n  type: Boolean\n})], NeLink.prototype, \"disabled\", void 0);\nNeLink = __decorate([customElement('ne-link')], NeLink);\n\nexport { NeLink as N, fire as f };\n//# sourceMappingURL=link-ac065d28.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, html, LitElement } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { NeIcon, NeLabel, NeCheckbox } from '@nintexglobal/earthling-components';\nimport { N as NeLink, f as fire } from './link-ac065d28.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n    --ne-data-table-padding-vertical: var(--ne-ref-spacing-small, 0.75em);\n    --ne-data-table-padding-horizontal: var(--ne-ref-spacing-small, 0.75em);\n    --ne-data-table-color-border: var(--ne-ref-color-grey-10, #e2e3e4);\n    --ne-data-table-color-column-header-background-focus: var(--ne-ref-color-blue-05,#f0f7ff);\n    --ne-data-table-color-column-header-background-hover: var(--ne-ref-color-blue-05,#f0f7ff);\n    --ne-data-table-color-column-header-text: var(--ne-ref-color-grey-60,#575c61);\n    --ne-data-table-color-column-header-icon-sorted-default: var(--ne-ref-color-grey-90,#161718);\n    --ne-data-table-color-column-header-icon-sorted-hover: var(--ne-ref-color-blue-60,#006bd6);\n    --ne-data-table-color-column-header-icon-sorted-focus: var(--ne-ref-color-blue-60,#006bd6);\n    --ne-data-table-color-column-header-border-focus: var(--ne-ref-color-blue-20,#a3d1ff);\n    --ne-data-table-column-header-icon: var(--ne-ref-sizing-04, 1em);\n    --ne-data-table-column-header-gap: var(--ne-ref-spacing-xx-small, 0.25em);\n    --ne-data-table-font-family-column-header: var(--ne-ref-font-family-open-sans,'Open Sans');\n    --ne-data-table-font-weight-column-header: var(--ne-ref-font-weight-bold,Bold);\n    --ne-data-table-font-size-column-header: var(--ne-ref-font-size-04,0.875em);\n    --ne-data-table-border-width-column-header-default: var(--ne-ref-border-width-small,1px);\n    --ne-data-table-border-width-column-header-focus: var(--ne-ref-border-width-large,4px);\n  }\n`;\n\nconst baseTable = css`\n  :host {\n    display: block;\n    position: relative;\n  }\n\n  * {\n    font-family: var(--ne-data-table-font-family-column-header);\n    font-weight: inherit;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  thead {\n    color: var(--ne-data-table-color-column-header-text);\n    font-family: var(--ne-data-table-font-family-column-header);\n    font-weight: var(--ne-data-table-font-weight-column-header);\n  }\n\n  th,\n  td {\n    vertical-align: top;\n    box-sizing: border-box;\n    font-size: var(--ne-data-table-font-size-column-header);\n    padding: var(--ne-data-table-padding-vertical)\n      var(--ne-data-table-padding-vertical);\n  }\n\n  thead,\n  tbody {\n    text-align: left;\n  }\n\n  td {\n    border-bottom: var(--ne-data-table-border-width-column-header-default) solid\n      var(--ne-data-table-color-border);\n  }\n\n  tbody td {\n    border-bottom: var(--ne-data-table-border-width-column-header-default) solid\n      var(--ne-data-table-color-border);\n  }\n\n  tbody tr:first-child td {\n    border-top: var(--ne-data-table-border-width-column-header-default) solid\n      var(--ne-data-table-color-border);\n  }\n\n  tbody tr:last-child td {\n    border-bottom: none;\n  }\n\n  tbody tr:hover,\n  th.sortable:hover {\n    background: var(--ne-data-table-color-column-header-background-hover);\n  }\n\n  th.sortable:has(:focus) {\n    background: var(--ne-data-table-color-column-header-background-focus);\n\n    /* The left border does not show with this and will be attended in one of the other GitHubIsssue items. */\n\n    /* border: var(--ne-data-table-border-width-column-header-focus) solid\n      var(--ne-data-table-color-column-header-border-focus); */\n  }\n\n  th.sortable button {\n    font-size: 1em;\n    background: transparent;\n    border: none;\n    outline: none;\n    color: inherit;\n    align-items: center;\n    display: flex;\n    text-align: left;\n    padding: 0;\n  }\n\n  th.sortable label {\n    display: flex;\n    align-items: center;\n  }\n\n  .icon {\n    width: var(--ne-data-table-column-header-icon);\n    min-width: var(--ne-data-table-column-header-icon);\n    outline: none;\n    display: block;\n    color: transparent;\n    padding-left: var(--ne-ref-spacing-xx-small, 0.25em);\n  }\n\n  a .icon {\n    padding: var(--ne-ref-spacing-xx-small, 0.25em)\n      var(--ne-ref-spacing-xx-small, 0.25em) 0;\n    display: block;\n    color: unset;\n    width: var(--ne-data-table-column-header-icon);\n    height: var(--ne-data-table-column-header-icon);\n  }\n\n  .icon.avatar {\n    display: block;\n    color: unset;\n    width: calc(2 * var(--ne-data-table-column-header-icon));\n    height: calc(2 * var(--ne-data-table-column-header-icon));\n  }\n\n  .sort-direction-asc {\n    transform: rotate(180deg);\n  }\n\n  th.sortable:hover .icon,\n  th.sortable:has(:focus) .icon {\n    color: var(--ne-data-table-color-column-header-icon-sorted-hover);\n  }\n\n  .icon.sorted {\n    display: block;\n    color: var(--ne-data-table-color-column-header-icon-sorted-default);\n  }\n\n  a {\n    color: var(--ne-ref-color-blue-60, #006bd6);\n    font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n    text-decoration: var(--ne-ref-text-decoration-none, none);\n    outline: none;\n    margin: 0;\n    padding: 0;\n    display: grid;\n    grid-template-columns: min-content min-content min-content;\n    align-items: center;\n    white-space: nowrap;\n  }\n\n  a:hover {\n    text-decoration: var(--ne-ref-text-decoration-underline, underline);\n    color: var(--ne-ref-color-blue-70, #0052a3);\n  }\n\n  a:focus-visible {\n    box-sizing: border-box;\n    text-decoration: var(--ne-ref-text-decoration-underline, underline);\n    outline: 4px solid var(--ne-ref-color-blue-20, #a3d1ff);\n    color: var(--ne-ref-color-blue-70, #0052a3);\n  }\n`;\nconst styles = [commonStyles, baseTable, tokens];\n\nconst browserLocale = navigator.language;\nconst formatDateFn = locale => (date, dateStyle) => {\n  if (!date) {\n    return '';\n  }\n  return new Intl.DateTimeFormat(locale, {\n    dateStyle\n  }).format(date);\n};\nconst getFriendlyPastDate = (diff, value, friendlyDateStyle) => {\n  // https://stackoverflow.com/questions/3552461/how-to-format-a-javascript-date/38676384\n  // https://devhints.io/wip/intl-datetime\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString\n  const rtf = new Intl.RelativeTimeFormat([], {\n    style: friendlyDateStyle,\n    numeric: 'auto'\n  });\n  // < 1 min.\n  if (diff < 60000) {\n    return 'Just now';\n  }\n  // < 1 hour.\n  if (diff < 3600000) {\n    const mins = 0 - Math.floor(diff / (1000 * 60));\n    return rtf.format(mins, 'minute');\n  }\n  // < 24 hours.\n  if (diff < 86400000) {\n    const hours = 0 - Math.floor(diff / (1000 * 60 * 60));\n    return rtf.format(hours, 'hour');\n  }\n  // Day difference.\n  const todayDate = new Date();\n  todayDate.setHours(0, 0, 0, 0);\n  let diffDay = todayDate.getTime() - value.getTime();\n  // < this week.\n  if (diffDay < todayDate.getDay() * 86400000) {\n    const days = 0 - Math.ceil(diffDay / 86400000);\n    return rtf.format(days, 'day');\n  }\n  // Set date to beginning of week for next comparisons.\n  todayDate.setTime(todayDate.getTime() - (todayDate.getDay() - 1) * 86400000);\n  diffDay = todayDate.getTime() - value.getTime();\n  // < 4 weeks.\n  if (diffDay <= 28 * 86400000) {\n    const weeks = 0 - Math.ceil(diffDay / (86400000 * 7));\n    return rtf.format(weeks, 'week');\n  }\n  // < a year less excluding same month which might be confusing.\n  const lastYear = new Date();\n  if (lastYear.getMonth() === 12) {\n    lastYear.setMonth(1, 1);\n  } else {\n    lastYear.setFullYear(lastYear.getFullYear() - 1);\n    lastYear.setMonth(lastYear.getMonth() + 1, 1);\n  }\n  if (value >= lastYear) {\n    return value.toLocaleString([], {\n      month: 'long'\n    });\n  }\n  // the rest.\n  return value.toLocaleString([], {\n    year: 'numeric'\n  });\n};\nconst formatDate = formatDateFn(browserLocale);\n\nclass TableControls {\n  // CONTROL RENDERING\n  renderCellIcon(isAvatar, detailData) {\n    return html`<div class=${classMap({\n      icon: true,\n      avatar: isAvatar\n    })}>\n      <ne-icon type=${detailData}></ne-icon>\n    </div>`;\n  }\n  renderDateTime(text,\n  // eslint-disable-next-line default-param-last\n  dateStyle = 'custom', dateFormat) {\n    if (dateFormat || dateStyle === 'custom') {\n      let df = dateFormat;\n      if (!dateFormat) {\n        df = new Intl.DateTimeFormat('en-US', {\n          dateStyle: 'medium',\n          timeStyle: 'short'\n        });\n      }\n      return html`<ne-label>${df?.format(new Date(text))}</ne-label>`;\n    }\n    return html`<ne-label\n      >${formatDate(new Date(text), dateStyle)}</ne-label\n    >`;\n  }\n  renderFriendlyDate(text, timeStyle) {\n    const dt1 = +new Date();\n    const dt2 = +new Date(text);\n    const diff = dt1 - dt2;\n    return html`<ne-label\n      >${getFriendlyPastDate(diff, new Date(text), timeStyle)}</ne-label\n    >`;\n  }\n  renderCheckbox(changeEvent, checked) {\n    return html`<ne-checkbox\n      @ne-click=${changeEvent}\n      .checked=${checked ?? false}\n    ></ne-checkbox>`;\n  }\n  renderRadio(checked, changeEvent) {\n    return html`<ne-radio-button\n      @ne-click=${changeEvent}\n      name=\"selected\"\n      .checked=${checked ?? false}\n    >\n    </ne-radio-button>`;\n  }\n  renderHyperlink(text, url, iconName, target, changeEvent) {\n    return html`<ne-link\n      label=${text}\n      target=${ifDefined(target)}\n      href=${ifDefined(url)}\n      left-icon-type=${ifDefined(iconName)}\n      @ne-click=${e => {\n      changeEvent?.(e);\n    }}\n    ></ne-link>`;\n  }\n}\n\n/**\n * @tag ne-data-table\n * @tagname ne-data-table\n * @event ne-click Raised when the checkbox is clicked for every row that is selected or the select all\n * @event ne-sort Raised when the sorting action is clicked in the table header\n * @event ne-change Raised when the radiobutton is clicked on the singleSelect table variant\n */\nlet NeDataTable = class NeDataTable extends ScopedElementsMixin(LitElement) {\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon,\n      'ne-link': NeLink,\n      'ne-label': NeLabel,\n      'ne-checkbox': NeCheckbox\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  get headers() {\n    return this._tableHeaders;\n  }\n  set headers(val) {\n    this._tableHeaders = val;\n  }\n  constructor() {\n    super();\n    this.options = {\n      variant: 'default',\n      showHeaders: true\n    };\n    this.rows = [];\n    this._tableHeaders = [];\n    this.allSelected = false;\n    this._tableControls = new TableControls();\n  }\n  // HEADER RENDERING\n  renderHeaderRow() {\n    return html`<tr>\n      ${this.renderHeaders()}\n    </tr>`;\n  }\n  renderHeaders() {\n    const tableHeaders = [];\n    switch (this.options.variant) {\n      case 'multiSelect':\n        const c = {\n          type: 'checkbox',\n          property: undefined,\n          title: 'Select All',\n          checked: this.allSelected\n        };\n        tableHeaders.push(html`<th scope=\"col\">${this.renderHeaderCell(c)}</th>`);\n        break;\n      case 'singleSelect':\n        const conf = {\n          type: 'string',\n          property: undefined,\n          title: '',\n          checked: false\n        };\n        tableHeaders.push(html`<th scope=\"col\">${this.renderHeaderCell(conf)}</th>`);\n        break;\n    }\n    this.headers.forEach((headerColumn, index) => {\n      tableHeaders.push(html`<th\n        scope=\"col\"\n        key=${index}\n        class=${classMap({\n        sortable: headerColumn.sortable === true\n      })}\n      >\n        ${this.renderHeaderContent(headerColumn)}\n      </th>`);\n    });\n    return tableHeaders;\n  }\n  renderHeaderContent(headerColumn) {\n    return html`${this.renderHeaderCell(headerColumn)} `;\n  }\n  renderHeaderCell(header) {\n    switch (header.type) {\n      case 'checkbox':\n        const myChangeEvent = e => {\n          e.preventDefault();\n          e.stopPropagation();\n          this.allSelected = !this.allSelected;\n          // set the state for all the rows.\n          this.rows.map(x => {\n            // eslint-disable-next-line no-param-reassign\n            x.checked = this.allSelected;\n            return true;\n          });\n          this.fireSelect(e, header);\n        };\n        return this._tableControls.renderCheckbox(myChangeEvent, this.allSelected);\n      case 'radioButton':\n        return this._tableControls.renderRadio(false, e => {\n          console.log(e);\n          /* */\n        });\n\n      default:\n        return html`${this.renderSort(header)}`;\n    }\n  }\n  // ROW RENDERING\n  renderTableRows() {\n    if (!this.rows?.length) {\n      return [];\n    }\n    return this.rows.map(r => html`<tr>\n          ${this.renderRowColumn(r)}\n        </tr>`);\n  }\n  renderRowColumn(row) {\n    const tds = [];\n    switch (this.options.variant) {\n      case 'multiSelect':\n        tds.push(html`<td>\n            ${this.renderCellContent({\n          type: 'checkbox',\n          property: undefined\n        }, row)}\n          </td>`);\n        break;\n      case 'singleSelect':\n        tds.push(html`<td>\n            ${this.renderCellContent({\n          type: 'radioButton',\n          property: undefined\n        }, row)}\n          </td>`);\n        break;\n    }\n    this.headers.forEach(th => {\n      if (!th.property) {\n        tds.push(html`<td></td>`);\n      }\n      tds.push(html`<td>${this.renderCellContent(th, row)}</td>`);\n    });\n    return tds;\n  }\n  renderCellContent(header, row) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let cellItemValue;\n    let textProperty;\n    if (header.property) {\n      textProperty = header.property;\n      cellItemValue = row.record[textProperty];\n    }\n    switch (header.type) {\n      case 'icon':\n        return this._tableControls.renderCellIcon(true, cellItemValue);\n      case 'datetime':\n        return this._tableControls.renderDateTime(cellItemValue, header.dateStyle, header.dateFormat);\n      case 'datetime_rtf':\n        return this._tableControls.renderFriendlyDate(cellItemValue, header.timeStyle);\n      case 'hyperlink':\n        const urlProp = header.urlProperty;\n        let urlValue;\n        if (urlProp) {\n          urlValue = row.record[urlProp];\n        }\n        const prop = header.iconProperty;\n        let iconName;\n        if (prop) {\n          iconName = row.record[prop];\n        }\n        const myHyperlinkEvent = e => {\n          e.stopPropagation();\n          e.preventDefault();\n          const d = {\n            property: textProperty,\n            item: row\n          };\n          this.fireClick(d);\n        };\n        return this._tableControls.renderHyperlink(cellItemValue, urlValue, iconName, header.target, myHyperlinkEvent);\n      case 'checkbox':\n        const myChangeEvent = e => {\n          e.stopPropagation();\n          e.preventDefault();\n          this.fireSelect(e, row);\n          // eslint-disable-next-line no-param-reassign\n          row.checked = !row.checked;\n          this.allSelected = this.rows.map(x => x.checked === true).filter(d => d === true).length === this.rows.length;\n          this.requestUpdate();\n        };\n        return this._tableControls.renderCheckbox(myChangeEvent, this.allSelected ? true : row.checked);\n      case 'radioButton':\n        const myClickEvent = e => {\n          e.stopPropagation();\n          e.preventDefault();\n          this.fireSelect(e, row);\n          this.requestUpdate();\n          this.allSelected = false;\n          this.selectedRecord = row.record;\n        };\n        return this._tableControls.renderRadio(row.record === this.selectedRecord, myClickEvent);\n      default:\n        return html`<ne-label>${cellItemValue}</ne-label>`;\n    }\n  }\n  renderSort(header) {\n    if (!header.sortable && header.title) {\n      return html`<ne-label>${header.title}</ne-label>`;\n    }\n    if (header.sortable) {\n      switch (header.sortDirection) {\n        case 'asc':\n          return html`<button\n            type=\"button\"\n            @click=${e => this.fireSort(e, header)}\n          >\n            <ne-label>${header.title}</ne-label>\n            <div\n              class=${classMap({\n            icon: true,\n            sorted: header.sorted === true\n          })}\n            >\n              <ne-icon .type=${'arrowUp'}></ne-icon>\n            </div>\n          </button>`;\n        default:\n          return html`<button\n            type=\"button\"\n            @click=${e => this.fireSort(e, header)}\n          >\n            <ne-label>${header.title}</ne-label>\n            <div\n              class=${classMap({\n            icon: true,\n            sorted: header.sorted === true\n          })}\n            >\n              <ne-icon .type=${'arrowDown'}></ne-icon>\n            </div>\n          </button>`;\n      }\n    }\n    return html``;\n  }\n  fireSelect(e, item) {\n    const detail = {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      newValue: !e.target?.checked,\n      property: 'checked',\n      item\n    };\n    fire(this, 'ne-change', {\n      composed: true,\n      bubbles: true,\n      detail\n    });\n  }\n  fireSort(e, columnHeaderItem) {\n    const detail = {\n      property: columnHeaderItem?.property,\n      newSortDirection: columnHeaderItem?.sortDirection === 'desc' ? 'asc' : 'desc',\n      columnHeader: columnHeaderItem\n    };\n    fire(this, 'ne-sort', {\n      composed: true,\n      bubbles: true,\n      detail\n    });\n    // reset all the columns and set sort direction and sorted\n    this._tableHeaders.forEach((h, i) => {\n      const hs = this._tableHeaders[i];\n      if (h !== columnHeaderItem && h.sortable) {\n        hs.sortDirection = undefined;\n        hs.sorted = undefined;\n      } else {\n        hs.sorted = true;\n        hs.sortDirection = detail.newSortDirection;\n      }\n    });\n    this.requestUpdate();\n  }\n  fireClick(detail) {\n    fire(this, 'ne-click', {\n      composed: true,\n      bubbles: true,\n      detail\n    });\n  }\n  render() {\n    return html`\n      <table>\n        <thead>\n          ${this.options.showHeaders === true ? this.renderHeaderRow() : ''}\n        </thead>\n        <tbody>\n          ${this.renderTableRows()}\n        </tbody>\n      </table>\n    `;\n  }\n};\n__decorate([property({\n  type: Object\n})], NeDataTable.prototype, \"options\", void 0);\n__decorate([property({\n  type: Array\n})], NeDataTable.prototype, \"headers\", null);\n__decorate([property({\n  type: Array\n})], NeDataTable.prototype, \"rows\", void 0);\n__decorate([state()], NeDataTable.prototype, \"allSelected\", void 0);\n__decorate([state()\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n], NeDataTable.prototype, \"selectedRecord\", void 0);\nNeDataTable = __decorate([customElement('ne-data-table')], NeDataTable);\n\nexport { NeDataTable };\n//# sourceMappingURL=data-table.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-button-set-padding-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-gap: var(--ne-ref-spacing-medium, 1em);\n  --ne-button-set-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-button-set-border-width: var(--ne-ref-border-width-small, 1px);\n}\n`;\n\nconst base = css`\n  :host {\n    width: 100%;\n  }\n\n  .ne-button-set {\n    display: flex;\n    flex-flow: row;\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    padding-top: var(--ne-button-set-padding-vertical);\n    padding-bottom: var(--ne-button-set-padding-vertical);\n    gap: var(--ne-button-set-gap);\n    width: 100%;\n  }\n\n  .ne-button-set ::slotted(.right-start) {\n    margin-left: auto;\n  }\n\n  .divider-top {\n    border-top: solid;\n    border-top-width: var(--ne-button-set-border-width);\n    border-top-color: var(--ne-button-set-color-border);\n  }\n\n  .divider-bottom {\n    border-bottom: solid;\n    border-bottom-width: var(--ne-button-set-border-width);\n    border-bottom-color: var(--ne-button-set-color-border);\n  }\n`;\nconst styles = [base, commonStyles, tokens];\n\n/**\n * @tag ne-button-set\n * @tagname ne-button-set\n *\n * @slot default This is where the contents of the button set will be inserted\n */\nlet NeButtonSet = class NeButtonSet extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    this.showTopDivider = false;\n    this.showBottomDivider = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<div\n      class=\"${classMap({\n      'ne-button-set': true,\n      'divider-top': this.showTopDivider,\n      'divider-bottom': this.showBottomDivider\n    })}\"\n    >\n      <slot></slot>\n    </div>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-top'\n})], NeButtonSet.prototype, \"showTopDivider\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true,\n  attribute: 'show-divider-bottom'\n})], NeButtonSet.prototype, \"showBottomDivider\", void 0);\nNeButtonSet = __decorate([customElement('ne-button-set')], NeButtonSet);\n\nexport { NeButtonSet };\n//# sourceMappingURL=button-set.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { f as fire } from './events-1173f562.js';\nimport { t as tokens } from './button.tokens-e79c8bbf.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst baseButton = css`\n  .btn {\n    font-family: var(--ne-button-font-family);\n    font-size: var(--ne-button-font-size);\n    padding: var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal) var(--ne-button-padding-vertical)\n      var(--ne-button-padding-horizontal);\n    gap: var(--ne-button-gap);\n    border-radius: var(--ne-button-border-radius);\n    outline: none;\n    display: grid;\n    grid-auto-flow: column;\n  }\n\n  .btn:focus {\n    outline: 4px solid var(--ne-button-color-border-focus);\n  }\n\n  .btn-primary {\n    border: 1px solid var(--ne-button-color-border-primary-default);\n    color: var(--ne-button-color-label-primary-default);\n    background-color: var(--ne-button-color-background-primary-default);\n  }\n\n  .btn-primary:hover {\n    background-color: var(--ne-button-color-background-primary-hover);\n  }\n\n  .btn-primary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-primary-disabled);\n    background-color: var(--ne-button-color-background-primary-disabled);\n  }\n\n  .btn-secondary {\n    border: 1px solid var(--ne-button-color-border-secondary-default);\n    color: var(--ne-button-color-label-secondary-default);\n    background-color: var(--ne-button-color-background-secondary-default);\n  }\n\n  .btn-secondary:hover {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-secondary:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-secondary-disabled);\n    background-color: var(--ne-button-color-background-secondary-disabled);\n  }\n\n  .btn-secondary:focus {\n    background-color: var(--ne-button-color-background-secondary-hover);\n  }\n\n  .btn-destructive {\n    border: 1px solid var(--ne-button-color-border-destructive-default);\n    color: var(--ne-button-color-label-destructive-default);\n    background-color: var(--ne-button-color-background-destructive-default);\n  }\n\n  .btn-destructive:hover {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-destructive:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-destructive-disabled);\n    background-color: var(--ne-button-color-background-destructive-disabled);\n  }\n\n  .btn-destructive:focus {\n    background-color: var(--ne-button-color-background-destructive-hover);\n  }\n\n  .btn-text {\n    border: 0;\n    color: var(--ne-button-color-label-text-default);\n    background-color: transparent;\n  }\n\n  .btn-text:hover {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-text:disabled {\n    border: 0;\n    color: var(--ne-button-color-label-text-disabled);\n    background-color: var(--ne-button-color-background-text-disabled);\n  }\n\n  .btn-text:focus {\n    background-color: var(--ne-button-color-background-text-hover);\n  }\n\n  .btn-inverse {\n    color: var(--ne-button-color-label-inverse-default);\n    background-color: transparent;\n    border: 1px solid var(--ne-button-color-border-inverse-default);\n  }\n\n  .btn-inverse:hover {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .btn-inverse:disabled {\n    border: 1px solid var(--ne-button-color-border-disabled);\n    color: var(--ne-button-color-label-inverse-disabled);\n    background-color: var(--ne-button-color-background-inverse-disabled);\n  }\n\n  .btn-inverse:focus {\n    background-color: var(--ne-button-color-background-inverse-hover);\n  }\n\n  .icon-slot {\n    min-width: 18px;\n    max-width: 18px;\n  }\n`;\nconst styles = [tokens, baseButton, commonStyles];\n\nconst buttonVariantsArray = ['primary', 'secondary', 'destructive', 'text', 'inverse'];\n/**\n * @tag ne-button\n * @tagname ne-button\n *\n * @slot default This is where the contents of the button will be inserted\n *\n * @event ne-click Raised when the button is clicked.\n */\nlet NeButton = class NeButton extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies that a button should be disabled */\n    this.disabled = false;\n    /** Specifies the text that will be read by the screen reader */\n    this.ariaLabel = '';\n    this.variant = 'primary';\n    this.onClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`\n      <button\n        id=${this.id}\n        type=\"button\"\n        ?disabled=${this.disabled}\n        @click=\"${this.onClick}\"\n        aria-label=${this.ariaLabel || nothing}\n        class=${classMap({\n      btn: true,\n      'btn-primary': this.variant === 'primary',\n      'btn-secondary': this.variant === 'secondary',\n      'btn-destructive': this.variant === 'destructive',\n      'btn-text': this.variant === 'text',\n      'btn-inverse': this.variant === 'inverse'\n    })}\n      >\n        <span class=${this.leftIconType !== undefined ? 'icon-slot' : 'hidden'}>\n          <slot name=\"left\">${renderIcon({\n      type: this.leftIconType\n    })}</slot>\n        </span>\n        <slot></slot>\n        <span\n          class=${this.rightIconType !== undefined ? 'icon-slot' : 'hidden'}\n        >\n          <slot name=\"right\">${renderIcon({\n      type: this.rightIconType\n    })}</slot>\n        </span>\n      </button>\n    `;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeButton.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'left-icon',\n  reflect: true\n})], NeButton.prototype, \"leftIconType\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'right-icon',\n  reflect: true\n})], NeButton.prototype, \"rightIconType\", void 0);\n__decorate([property({\n  reflect: true\n})], NeButton.prototype, \"variant\", void 0);\nNeButton = __decorate([customElement('ne-button')], NeButton);\n\nexport { NeButton, buttonVariantsArray };\n//# sourceMappingURL=button.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { f as fire } from './events-1173f562.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport { t as tokens$1 } from './button.tokens-e79c8bbf.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-icon-button-icon-size: var(--ne-ref-sizing-04, 1em);\n  --ne-icon-button-color-icon-dark-on-light-bg-default: var(--ne-ref-color-grey-90, #161718);\n  --ne-icon-button-color-icon-dark-on-light-bg-disabled: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-icon-button-color-icon-light-on-dark-bg-default: var(--ne-ref-color-white, #ffffff);\n  --ne-icon-button-color-icon-light-on-dark-bg-disabled: var(--ne-ref-color-grey-30, #A7ABAF);\n  --ne-icon-button-color-icon-light-on-dark-bg-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-icon-button-color-icon-light-on-dark-bg-focused: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-icon-button-color-background-dark-on-light-bg-hover: var(--ne-ref-color-blue-05, #F0F7FF);\n  --ne-icon-button-padding: var(--ne-ref-spacing-xx-small, 0.25em);\n}\n`;\n\nconst baseIconButton = css`\n  .btn {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    box-sizing: border-box;\n    margin: 0;\n    padding: var(--ne-icon-button-padding);\n    font-size: 1em;\n    border: none;\n    border-radius: var(--ne-button-border-radius);\n    outline: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n\n  .btn * {\n    cursor: pointer;\n  }\n\n  .btn:disabled * {\n    cursor: default;\n  }\n\n  .btn-dark {\n    color: var(--ne-icon-button-color-icon-dark-on-light-bg-default);\n  }\n\n  .btn-dark:hover {\n    background-color: var(\n      --ne-icon-button-color-background-dark-on-light-bg-hover\n    );\n  }\n\n  .btn-dark:focus-visible {\n    outline: var(--ne-button-border-width-focus) solid\n      var(--ne-button-color-border-focus);\n  }\n\n  .btn-dark:disabled,\n  .btn-dark:hover:disabled {\n    color: var(--ne-icon-button-color-icon-dark-on-light-bg-disabled);\n    background-color: transparent;\n    cursor: default;\n  }\n\n  .btn-light {\n    color: var(--ne-icon-button-color-icon-light-on-dark-bg-default);\n  }\n\n  .btn-light:hover {\n    color: var(--ne-icon-button-color-icon-light-on-dark-bg-hover);\n  }\n\n  .btn-light:focus-visible {\n    color: var(--ne-icon-button-color-icon-light-on-dark-bg-focused);\n    outline: var(--ne-button-border-width-focus) solid\n      var(--ne-button-color-border-focus);\n  }\n\n  .btn-light:disabled,\n  .btn-light:hover:disabled {\n    color: var(--ne-icon-button-color-icon-light-on-dark-bg-disabled);\n    background-color: transparent;\n    cursor: default;\n  }\n\n  .icon {\n    height: var(--ne-icon-button-icon-size);\n    width: var(--ne-icon-button-icon-size);\n  }\n`;\nconst styles = [tokens$1, tokens, baseIconButton, commonStyles];\n\nconst iconButtonVariantsArray = ['dark', 'light'];\n/**\n * @tag ne-icon-button\n * @tagname ne-icon-button\n *\n * @description Control that renders a button containing an SVG icon.\n *\n * @event ne-click Raised when the icon button is clicked.\n */\nlet NeIconButton = class NeIconButton extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies that the icon button should be disabled */\n    this.disabled = false;\n    /** Specifies the text that will be read by the screen reader */\n    this.ariaLabel = '';\n    /** Specifies the variant of the icon button to display. Currently 'dark' (for light backgrounds) and 'light' (for dark backgrounds) are supported */\n    this.variant = 'dark';\n    this._onClick = () => {\n      fire(this, 'ne-click', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<button\n      id=${this.id}\n      type=\"button\"\n      ?disabled=${this.disabled}\n      @click=\"${this._onClick}\"\n      aria-label=${this.ariaLabel || nothing}\n      class=${classMap({\n      btn: true,\n      'btn-dark': this.variant === 'dark',\n      'btn-light': this.variant === 'light'\n    })}\n    >\n      <span class=\"icon\">${renderIcon({\n      type: this.iconType\n    })}</span>\n    </button>`;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeIconButton.prototype, \"disabled\", void 0);\n__decorate([property({\n  attribute: 'ne-aria-label',\n  type: String,\n  reflect: true\n})], NeIconButton.prototype, \"ariaLabel\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'icon',\n  reflect: true\n})], NeIconButton.prototype, \"iconType\", void 0);\n__decorate([property({\n  reflect: true\n})], NeIconButton.prototype, \"variant\", void 0);\nNeIconButton = __decorate([customElement('ne-icon-button')], NeIconButton);\n\nexport { NeIconButton, iconButtonVariantsArray };\n//# sourceMappingURL=icon-button.js.map\n","import { nothing, html } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { until } from 'lit/directives/until.js';\n\nconst iconLookup = {\n  _export: () => import('./_export-de25e895.js').then(x => x._export),\n  _import: () => import('./_import-8064398d.js').then(x => x._import),\n  add: () => import('./add-ecd09d1a.js').then(x => x.add),\n  archive: () => import('./archive-d2c5ad4f.js').then(x => x.archive),\n  arrowDown: () => import('./arrowDown-555a28e1.js').then(x => x.arrowDown),\n  arrowUp: () => import('./arrowUp-9b5629d6.js').then(x => x.arrowUp),\n  caretDown: () => import('./caretDown-7f7286c8.js').then(x => x.caretDown),\n  caretLeft: () => import('./caretLeft-308038e5.js').then(x => x.caretLeft),\n  caretRight: () => import('./caretRight-1410368f.js').then(x => x.caretRight),\n  caretUp: () => import('./caretUp-64d19119.js').then(x => x.caretUp),\n  check: () => import('./check-132c9894.js').then(x => x.check),\n  chevronDown: () => import('./chevronDown-eb47b21f.js').then(x => x.chevronDown),\n  chevronLeft: () => import('./chevronLeft-f0139883.js').then(x => x.chevronLeft),\n  chevronLightDown: () => import('./chevronLightDown-1dcd16ff.js').then(x => x.chevronLightDown),\n  chevronLightLeft: () => import('./chevronLightLeft-213c4c09.js').then(x => x.chevronLightLeft),\n  chevronLightRight: () => import('./chevronLightRight-589da5b7.js').then(x => x.chevronLightRight),\n  chevronLightUp: () => import('./chevronLightUp-ae84e278.js').then(x => x.chevronLightUp),\n  chevronRight: () => import('./chevronRight-bfcbcd0f.js').then(x => x.chevronRight),\n  chevronUp: () => import('./chevronUp-322a0eba.js').then(x => x.chevronUp),\n  closeDefault: () => import('./closeDefault-e6da3ad8.js').then(x => x.closeDefault),\n  dangerExclamation: () => import('./dangerExclamation-0305ece2.js').then(x => x.dangerExclamation),\n  dropzone: () => import('./dropzone-70166a79.js').then(x => x.dropzone),\n  feedback: () => import('./feedback-e8ecb764.js').then(x => x.feedback),\n  file: () => import('./file-4ab02705.js').then(x => x.file),\n  hide: () => import('./hide-d6fa62d1.js').then(x => x.hide),\n  info: () => import('./info-29eea0cd.js').then(x => x.info),\n  maximise: () => import('./maximise-5bf50b00.js').then(x => x.maximise),\n  meatballs: () => import('./meatballs-c388d76a.js').then(x => x.meatballs),\n  minus: () => import('./minus-018729c4.js').then(x => x.minus),\n  openInNewWindow: () => import('./openInNewWindow-e12de645.js').then(x => x.openInNewWindow),\n  process: () => import('./process-cef14086.js').then(x => x.process),\n  processModel: () => import('./processModel-21be796e.js').then(x => x.processModel),\n  publish: () => import('./publish-4da999be.js').then(x => x.publish),\n  refresh: () => import('./refresh-71d6cc8d.js').then(x => x.refresh),\n  save: () => import('./save-01c1b022.js').then(x => x.save),\n  schedule: () => import('./schedule-7eaebbfd.js').then(x => x.schedule),\n  search: () => import('./search-b1b062da.js').then(x => x.search),\n  show: () => import('./show-ceb3bba3.js').then(x => x.show),\n  success: () => import('./success-7fb9f336.js').then(x => x.success),\n  summary: () => import('./summary-da7addaa.js').then(x => x.summary),\n  tick: () => import('./tick-28cf727d.js').then(x => x.tick),\n  trash: () => import('./trash-56a13cc6.js').then(x => x.trash),\n  user: () => import('./user-6fce53af.js').then(x => x.user),\n  users: () => import('./users-99c1c348.js').then(x => x.users),\n  versionHistory: () => import('./versionHistory-baec5ad8.js').then(x => x.versionHistory),\n  warningExclamation: () => import('./warningExclamation-4a694e7e.js').then(x => x.warningExclamation)\n};\n\nconst placeHolderIcon = () => html`<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 16 16\"\n></svg>`;\n/**\n * The base function for rendering an icon, this can be use to aviod lazy loading of SVG resources\n * @returns The html element with the SVG icon rendered\n */\nconst renderIcon = ({\n  type,\n  typeAsHtml,\n  fixedSize,\n  className\n}) => {\n  if (!type && !typeAsHtml) {\n    return nothing;\n  }\n  if (type && !(type in iconLookup)) {\n    // eslint-disable-next-line no-console\n    console.warn('Icon not found', type);\n    return nothing;\n  }\n  const iconPromise = type ? iconLookup[type]() : Promise.resolve(typeAsHtml);\n  return html`\n    <div\n      aria-hidden=\"true\"\n      class=${className || 'ne-icon'}\n      style=${styleMap({\n    height: fixedSize,\n    width: fixedSize,\n    display: 'grid',\n    alignItems: 'center',\n    justifyItems: 'center'\n  })}\n    >\n      ${until(iconPromise, placeHolderIcon())}\n    </div>\n  `;\n};\n\nexport { renderIcon as r };\n//# sourceMappingURL=icon.base-7a919db2.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { r as renderIcon } from './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\n\nconst base = css`\n  :host {\n    display: grid;\n    color: inherit;\n  }\n`;\nconst styles = [commonStyles, base];\n\n/**\n * @tag ne-icon\n * @tagname ne-icon\n *\n * @description Control that renders an SVG icon, this will typically be used inside of other elements such as a toolbar button.\n *\n * @cssproperty {color} [color] Icon color inheted from the parent color\n */\nlet NeIcon = class NeIcon extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.fixedSize = '';\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return renderIcon({\n      type: this.type,\n      fixedSize: this.fixedSize\n    });\n  }\n};\n__decorate([property({\n  attribute: 'type',\n  reflect: true\n})], NeIcon.prototype, \"type\", void 0);\n__decorate([property({\n  type: String\n})], NeIcon.prototype, \"fixedSize\", void 0);\nNeIcon = __decorate([customElement('ne-icon')], NeIcon);\n\nexport { NeIcon };\n//# sourceMappingURL=icon.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html, nothing } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property, customElement } from 'lit/decorators.js';\nimport { t as tokens } from './label.tokens-3df70200.js';\n\nconst baseLabel = css`\n  * {\n    color: var(--ne-label-color-title);\n    font-family: var(--ne-label-font-family);\n    font-size: 1em;\n  }\n\n  .outer-label {\n    display: flex;\n    font-size: var(--ne-label-font-size);\n  }\n\n  .required-indicator {\n    margin-left: var(--ne-label-gap);\n    color: var(--ne-label-color-asterisk);\n  }\n`;\nconst styles = [baseLabel, commonStyles, tokens];\n\n/**\n * @tag ne-label\n * @tagname ne-label\n *\n */\nlet NeLabel = class NeLabel extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.for = '';\n    this.required = false;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<label\n      class=\"outer-label\"\n      id=${ifDefined(this.id)}\n      for=${ifDefined(this.for)}\n    >\n      <slot></slot>\n      ${this.required ? html`<span class=\"required-indicator\">*</span>` : nothing}\n    </label> `;\n  }\n};\n__decorate([property({\n  attribute: 'for'\n})], NeLabel.prototype, \"for\", void 0);\n__decorate([property({\n  attribute: 'required',\n  type: Boolean,\n  reflect: true\n})], NeLabel.prototype, \"required\", void 0);\nNeLabel = __decorate([customElement('ne-label')], NeLabel);\n\nexport { NeLabel };\n//# sourceMappingURL=label.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { NeIcon } from './icon.js';\nimport { f as fire } from './events-1173f562.js';\nimport { NeOverlay } from './overlay.js';\nimport { NeIconButton } from './icon-button.js';\nimport { I as Icons } from './iconType-8326eddb.js';\nimport { NeButtonSet } from './button-set.js';\nimport './icon.base-7a919db2.js';\nimport 'lit/directives/style-map.js';\nimport 'lit/directives/until.js';\nimport './button.tokens-e79c8bbf.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-modal-sizing-width-small: var(--ne-ref-sizing-18, 32em);\n  --ne-modal-sizing-width-medium: var(--ne-ref-sizing-21, 56em);\n  --ne-modal-sizing-width-large: var(--ne-ref-sizing-22, 64em);\n  --ne-modal-sizing-height-small: var(--ne-ref-sizing-16, 16em);\n  --ne-modal-sizing-height-medium: var(--ne-ref-sizing-17, 24em);\n  --ne-modal-sizing-height-large: var(--ne-ref-sizing-19, 40em);\n  --ne-modal-padding-horizontal: var(--ne-ref-spacing-medium, 1em);\n  --ne-modal-header-font-family: var(--ne-ref-font-family-montserrat, Montserrat);\n  --ne-modal-header-padding-vertical: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-modal-header-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-modal-header-title: var(--ne-ref-color-nintex-orange, #F56900);\n  --ne-modal-header-font-size: var(--ne-ref-font-size-08, 1.5em);\n  --ne-modal-header-font-weight: var(--ne-ref-font-weight-semi-bold, SemiBold);\n  --ne-modal-content-padding: var(--ne-ref-spacing-medium, 1em);\n  --ne-modal-content-gap-vertical: var(--ne-ref-spacing-medium, 1em);\n  --ne-modal-border-radius: var(--ne-ref-border-radius-medium, .25em);\n  --ne-modal-color-border: var(--ne-ref-color-grey-10, #E2E3E4);\n  --ne-modal-border-width: var(--ne-ref-border-width-small, 1px);\n  --ne-modal-gap-vertical: var(--ne-ref-spacing-medium, 1em);\n}\n`;\n\nconst baseModal = css`\n  dialog {\n    display: flex;\n    flex-direction: column;\n    padding-inline: var(--ne-modal-padding-horizontal);\n    max-height: 80%;\n    padding-block: 0;\n    border: var(--ne-modal-border-width) solid var(--ne-modal-color-border);\n    border-radius: var(--ne-modal-border-radius);\n  }\n\n  .hide {\n    display: none;\n  }\n\n  .small {\n    width: var(--ne-modal-sizing-width-small);\n    min-height: var(--ne-modal-sizing-height-small);\n  }\n\n  .medium {\n    width: var(--ne-modal-sizing-width-medium);\n    min-height: var(--ne-modal-sizing-height-medium);\n  }\n\n  .large {\n    width: var(--ne-modal-sizing-width-large);\n    min-height: var(--ne-modal-sizing-height-large);\n    height: 80%;\n  }\n\n  .heading-label {\n    font-family: var(--ne-modal-header-font-family);\n    font-size: var(--ne-modal-header-font-size);\n    font-weight: var(--ne-modal-header-font-weight);\n    color: var(--ne-modal-header-title);\n    gap: var(--ne-modal-header-gap);\n  }\n\n  .content {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: flex-start;\n    overflow-y: auto;\n    flex-grow: 1;\n    margin-block: var(--ne-modal-gap-vertical);\n  }\n`;\nconst styles = [tokens, commonStyles, baseModal];\n\nconst ModalSize = {\n  small: 'small',\n  medium: 'medium',\n  large: 'large'\n};\n\n/**\n * @tag ne-modal\n * @tagname ne-modal\n *\n * @slot content. This is where the content of the modal will be inserted\n *\n * @slot footer. This is where the footer buttons will be configured. to position footer content on the right apply the .right-start class to last control you want on the right(view storybook for example)\n *\n * @event ne-close Raised when the close dialog is clicked\n */\nlet NeModal = class NeModal extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /** Specifies the header text of the dialog */\n    this.header = '';\n    /** Specifies the size of the modal dialog */\n    this.size = ModalSize.small;\n    /** Specifies is the modal is open, this defaults to true meaning you can't use the ?open token in lit to control it. false needs to be set, undefined or null will result in it been open */\n    this.open = true;\n    // Events\n    this._handleClose = () => {\n      this.open = false;\n      fire(this, 'ne-close', {\n        composed: true,\n        bubbles: true\n      });\n    };\n  }\n  static get scopedElements() {\n    return {\n      'ne-icon': NeIcon,\n      'ne-overlay': NeOverlay,\n      'ne-icon-button': NeIconButton,\n      'ne-button-set': NeButtonSet\n    };\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return html`<ne-overlay .show=${this.open}>\n      <dialog\n        class=\"${classMap({\n      dialog: true,\n      [this.size]: true,\n      hide: this.open !== true\n    })}\"\n        part=\"dialog\"\n        aria-modal=\"true\"\n        ?open=${this.open}\n        @cancel=${this._handleClose}\n      >\n      <span>\n        <ne-button-set .showBottomDivider=${true}>\n          <label class=\"heading-label\">${this.header}</label>\n          <ne-icon-button\n            class=\"right-start\"\n            variant=\"dark\"\n            ne-aria-label=\"close-button\"\n            icon=${Icons.closeDefault}\n            @click=${this._handleClose}\n          ></ne-icon-button>\n          </ne-button-set>\n      </span>\n        <div class=\"content\">\n          <slot></slot>\n        </div>\n        <ne-button-set .showTopDivider=${true}>\n        <slot name=\"footer\">\n      </ne-button-set>\n      </dialog>\n    </ne-overlay>`;\n  }\n};\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeModal.prototype, \"header\", void 0);\n__decorate([property({\n  attribute: 'modal-size',\n  reflect: true\n})], NeModal.prototype, \"size\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeModal.prototype, \"open\", void 0);\nNeModal = __decorate([customElement('ne-modal')], NeModal);\n\nexport { NeModal };\n//# sourceMappingURL=modal.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-overlay-color: var(--ne-ref-color-grey-90-30, #16171830);\n}\n`;\n\nconst style = css`\n  .overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: var(--ne-overlay-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 9999;\n  }\n`;\nconst styles = [tokens, style, commonStyles];\n\n/**\n * @tag ne-overlay\n * @tagname ne-overlay\n *\n * @slot default This is where the contents of the overlay will be rendered\n *\n */\nlet NeOverlay = class NeOverlay extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the showing and hiding of the overlay\n     */\n    this.show = true;\n  }\n  static get styles() {\n    return styles;\n  }\n  render() {\n    return this.show ? html`\n          <div>\n            <div class=\"overlay\">\n              <slot></slot>\n            </div>\n          </div>\n        ` : html``;\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeOverlay.prototype, \"show\", void 0);\nNeOverlay = __decorate([customElement('ne-overlay')], NeOverlay);\n\nexport { NeOverlay };\n//# sourceMappingURL=overlay.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { css, LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { unsafeSVG } from 'lit/directives/unsafe-svg.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\n/* eslint-disable */\nconst tokens = css`\n  * {\n  --ne-spinner-sizing-large: var(--ne-ref-sizing-12, 4em);\n  --ne-spinner-sizing-medium: var(--ne-ref-sizing-11, 3em);\n  --ne-spinner-sizing-small: var(--ne-ref-sizing-04, 1em);\n  --ne-spinner-gap: var(--ne-ref-spacing-x-small, 0.5em);\n  --ne-spinner-color-dark-left: var(--ne-ref-color-grey-90, #161718);\n  --ne-spinner-color-dark-right: var(--ne-ref-color-grey-50, #6D7379);\n  --ne-spinner-color-dark-text: var(--ne-ref-color-grey-90, #161718);\n  --ne-spinner-color-light-right: var(--ne-ref-color-grey-20, #C4C7CA);\n  --ne-spinner-color-light-left: var(--ne-ref-color-white, #ffffff);\n  --ne-spinner-color-light-text: var(--ne-ref-color-white, #ffffff);\n  --ne-spinner-font-family: var(--ne-ref-font-family-open-sans, Open Sans);\n  --ne-spinner-font-size-large: var(--ne-ref-font-size-06, 1.125em);\n  --ne-spinner-font-size-medium: var(--ne-ref-font-size-04, 0.875em);\n  --ne-spinner-font-size-small: var(--ne-ref-font-size-02, 0.75em);\n}\n`;\n\nconst baseLoadingIndicator = css`\n  @keyframes middle {\n    0% {\n      opacity: 0;\n    }\n\n    32% {\n      opacity: 0;\n    }\n\n    50% {\n      opacity: 1;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes second {\n    0% {\n      opacity: 0;\n    }\n\n    24% {\n      opacity: 0;\n    }\n\n    32% {\n      opacity: 0.9;\n    }\n\n    40% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes third {\n    0% {\n      opacity: 0;\n    }\n\n    16% {\n      opacity: 0;\n    }\n\n    24% {\n      opacity: 0.8;\n    }\n\n    40% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes forth {\n    0% {\n      opacity: 0;\n    }\n\n    8% {\n      opacity: 0.7;\n    }\n\n    24% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @keyframes fifth {\n    0% {\n      opacity: 0.6;\n    }\n\n    10% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 0;\n    }\n  }\n\n  .ne-spinner {\n    color: var(--ne-spinner-color-dark-text);\n  }\n\n  .ne-spinner-status {\n    margin: 1em;\n    font-size: var(--ne-spinner-font-size-large);\n    text-align: center;\n    font-family: var(--ne-spinner-font-family);\n  }\n\n  .ne-spinner-container {\n    width: 100%;\n    position: relative;\n    display: flex;\n    align-items: center;\n  }\n\n  .ne-spinner-container-large {\n    flex-direction: column;\n  }\n\n  .ne-spinner-container-center {\n    justify-content: center;\n  }\n\n  .ne-icon {\n    fill: currentcolor;\n    vertical-align: top;\n    pointer-events: none;\n  }\n\n  .ne-nintex-spinner .ne-icon {\n    height: var(--ne-spinner-sizing-large);\n    width: var(--ne-spinner-sizing-large);\n  }\n\n  .ne-nintex-spinner > div {\n    display: inline-block;\n  }\n\n  .ne-nintex-spinner-middle {\n    animation-name: middle;\n    position: relative;\n  }\n\n  .ne-nintex-spinner-left {\n    position: absolute;\n  }\n\n  .ne-nintex-spinner-trail-left,\n  .ne-nintex-spinner-trail-right {\n    margin: 0 -8px;\n  }\n\n  .ne-nintex-spinner-trail-left,\n  .ne-nintex-spinner-left {\n    color: var(--ne-spinner-color-dark-left);\n  }\n\n  .ne-nintex-spinner-trail-right,\n  .ne-nintex-spinner-right {\n    color: var(--ne-spinner-color-dark-right);\n  }\n\n  .ne-nintex-spinner-middle,\n  .ne-nintex-spinner-second,\n  .ne-nintex-spinner-third,\n  .ne-nintex-spinner-forth,\n  .ne-nintex-spinner-fifth {\n    animation-duration: 2000ms;\n    transform-origin: center;\n    animation-iteration-count: infinite;\n    animation-timing-function: ease-in-out;\n  }\n\n  .ne-nintex-spinner-second {\n    animation-name: second;\n  }\n\n  .ne-nintex-spinner-third {\n    animation-name: third;\n  }\n\n  .ne-nintex-spinner-forth {\n    animation-name: forth;\n  }\n\n  .ne-nintex-spinner-fifth {\n    animation-name: fifth;\n  }\n\n  .ne-nintex-spinner-small {\n    padding: 0;\n  }\n\n  .ne-nintex-spinner-small .ne-icon {\n    height: var(--ne-spinner-sizing-small);\n    width: var(--ne-spinner-sizing-small);\n  }\n\n  .ne-nintex-spinner-small .ne-nintex-spinner-trail-left,\n  .ne-nintex-spinner-small .ne-nintex-spinner-trail-right {\n    margin: 0 -2px;\n  }\n\n  .ne-nintex-spinner-small .ne-spinner-status {\n    font-size: var(--ne-spinner-font-size-small);\n    margin: 0;\n  }\n\n  .ne-nintex-spinner-medium .ne-icon {\n    height: var(--ne-spinner-sizing-medium);\n    width: var(--ne-spinner-sizing-medium);\n  }\n\n  .ne-nintex-spinner-medium .ne-nintex-spinner-trail-left,\n  .ne-nintex-spinner-medium .ne-nintex-spinner-trail-right {\n    margin: 0 -6px;\n  }\n\n  .ne-nintex-spinner-medium .ne-spinner-status {\n    font-size: var(--ne-spinner-font-size-medium);\n    margin: 0.875em;\n  }\n\n  .ne-spinner-theme-light .ne-nintex-spinner-trail-left,\n  .ne-spinner-theme-light .ne-nintex-spinner-trail-right {\n    color: var(--ne-spinner-color-light-right);\n  }\n\n  .ne-spinner-theme-light .ne-nintex-spinner-left {\n    color: var(--ne-spinner-color-light-left);\n  }\n\n  .ne-spinner-theme-light .ne-nintex-spinner-trail-right,\n  .ne-spinner-theme-light .ne-nintex-spinner-right {\n    color: var(--ne-spinner-color-light-right);\n  }\n\n  .ne-spinner-theme-light .ne-spinner-status {\n    color: var(--ne-spinner-color-light-text);\n  }\n\n  .ne-spinner-status.visually-hidden {\n    display: none;\n  }\n`;\nconst styles = [tokens, baseLoadingIndicator, commonStyles];\n\n/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nvar SpinnerType;\n(function (SpinnerType) {\n  SpinnerType[\"large\"] = \"large\";\n  SpinnerType[\"medium\"] = \"medium\";\n  SpinnerType[\"small\"] = \"small\";\n})(SpinnerType || (SpinnerType = {}));\nvar SpinnerThemeType;\n(function (SpinnerThemeType) {\n  SpinnerThemeType[\"light\"] = \"light\";\n  SpinnerThemeType[\"regular\"] = \"regular\";\n})(SpinnerThemeType || (SpinnerThemeType = {}));\n\nconst centerLeft = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 34 34\" width=\"1em\" height=\"1em\" class=\"ne-icon__logos-nintex-x-loader-center-left ne-icon ne-icon-inline ne-nintex-spinner-left\"><path d=\"M24.01 17l-17 17L0 26.99 9.99 17 0 7.01 7.01 0l17 17z\"></path></svg>';\n\nconst centerRight = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 34 34\" width=\"1em\" height=\"1em\" class=\"ne-icon__logos-nintex-x-loader-center-right ne-icon ne-icon-inline ne-nintex-spinner-right\"><path d=\"M24.01 17L34 26.99 26.99 34l-17-17 17-17L34 7.01 24.01 17z\"></path></svg>';\n\nconst left = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 34\" width=\"1em\" height=\"1em\" class=\"ne-icon__logos-nintex-x-loader-left ne-icon ne-icon-inline\"><path d=\"M24 17L7.01 34 0 26.99 9.98 17 0 7.01 7.01 0 24 17z\"></path></svg>';\n\nconst right = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 34\" width=\"1em\" height=\"1em\" class=\"ne-icon__logos-nintex-x-loader-right ne-icon ne-icon-inline\"><path d=\"M14.02 16.99L24 26.98l-7.01 7L0 16.99 16.99 0 24 7.01l-9.98 9.98z\"></path></svg>';\n\n/**\n * @tag ne-spinner\n * @tagname ne-spinner\n * @description Control that renders the spinner.\n *\n */\nlet NeSpinner = class NeSpinner extends LitElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Specifies the size of the loading icon\n     */\n    this.size = SpinnerType.medium;\n    /**\n     * Specifies the theme of the loading icon\n     */\n    this.theme = SpinnerThemeType.regular;\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  render() {\n    const spinner = html`<div\n      class=${classMap({\n      'ne-nintex-spinner ne-spinner': true,\n      'ne-nintex-spinner-small': this.size === SpinnerType.small,\n      'ne-nintex-spinner-medium': this.size === SpinnerType.medium,\n      'ne-nintex-spinner-large': this.size === SpinnerType.large,\n      'ne-spinner-theme-light': this.theme === SpinnerThemeType.light,\n      'ne-spinner-theme-regular': this.theme === SpinnerThemeType.regular\n    })}\n    >\n      <div class=\"ne-nintex-spinner-trail-left ne-nintex-spinner-fifth\">\n        ${unsafeSVG(left)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-left ne-nintex-spinner-forth\">\n        ${unsafeSVG(left)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-left ne-nintex-spinner-third\">\n        ${unsafeSVG(left)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-left ne-nintex-spinner-second\">\n        ${unsafeSVG(left)}\n      </div>\n      <div class=\"ne-nintex-spinner-middle\">\n        ${unsafeSVG(centerLeft)} ${unsafeSVG(centerRight)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-right ne-nintex-spinner-second\">\n        ${unsafeSVG(right)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-right ne-nintex-spinner-third\">\n        ${unsafeSVG(right)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-right ne-nintex-spinner-forth\">\n        ${unsafeSVG(right)}\n      </div>\n      <div class=\"ne-nintex-spinner-trail-right ne-nintex-spinner-fifth\">\n        ${unsafeSVG(right)}\n      </div>\n      ${this.status ? html` <p class=\"ne-spinner-status\" role=\"status\">${this.status}</p> ` : html`\n            <p class=\"ne-spinner-status visually-hidden\" role=\"status\">\n              ${this.defaultStatus}\n            </p>\n          `}\n    </div>`;\n    if (!this.wrapped) {\n      return html`${spinner}`;\n    }\n    return html`<div class=\"ne-spinner-container ne-spinner-container-center\">\n      ${spinner}\n    </div>`;\n  }\n};\n__decorate([property({\n  type: String,\n  attribute: 'default-status'\n})], NeSpinner.prototype, \"defaultStatus\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'size',\n  reflect: true\n})], NeSpinner.prototype, \"size\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'status',\n  reflect: true\n})], NeSpinner.prototype, \"status\", void 0);\n__decorate([property({\n  type: String,\n  reflect: true\n})], NeSpinner.prototype, \"theme\", void 0);\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeSpinner.prototype, \"wrapped\", void 0);\nNeSpinner = __decorate([customElement('ne-spinner')], NeSpinner);\n\nexport { NeSpinner as N, SpinnerType as S, SpinnerThemeType as a };\n//# sourceMappingURL=spinner-aa6c59c9.js.map\n","import { c as commonStyles, _ as __decorate } from './base.styles-11d39181.js';\nimport { LitElement, html } from 'lit';\nimport { property, state, customElement } from 'lit/decorators.js';\nimport { ScopedElementsMixin } from '@open-wc/scoped-elements';\nimport { S as SpinnerType, a as SpinnerThemeType, N as NeSpinner } from './spinner-aa6c59c9.js';\nimport { NeOverlay } from './overlay.js';\nimport 'lit/directives/unsafe-svg.js';\nimport 'lit/directives/class-map.js';\n\nconst styles = [commonStyles];\n\n/**\n * @tag ne-status-overlay\n * @tagname ne-status-overlay\n *\n */\nlet NeStatusOverlay = class NeStatusOverlay extends ScopedElementsMixin(LitElement) {\n  constructor() {\n    super(...arguments);\n    // Properties\n    /**\n     * Specifies the showing and hiding of the overlay\n     */\n    this.show = true;\n    /**\n     * Specifies the delay before the overlay is rendered\n     */\n    this.delay = 0;\n    /**\n     * Specifies the size of the loading indicator\n     */\n    this.size = SpinnerType.medium;\n    /**\n     * Specifies the theme of the loading icon\n     */\n    this.theme = SpinnerThemeType.regular;\n    this._showSetTimeout = 0;\n    this._isShowOverLay = false;\n  }\n  // Styles\n  static get styles() {\n    return styles;\n  }\n  static get scopedElements() {\n    return {\n      'ne-overlay': NeOverlay,\n      'ne-spinner': NeSpinner\n    };\n  }\n  render() {\n    return html`<ne-overlay .show=${this._isShowOverLay}>\n      <ne-spinner\n        .status=${this.status}\n        theme=${this.theme}\n        .size=${this.size}\n      ></ne-spinner>\n    </ne-overlay>`;\n  }\n  updated(changedProps) {\n    if (changedProps.has('show')) {\n      if (this._showSetTimeout) {\n        window.clearTimeout(this._showSetTimeout);\n      }\n      if (this.show) {\n        if (this.delay > 0) {\n          this._showSetTimeout = window.setTimeout(() => {\n            this._isShowOverLay = true;\n          }, this.delay);\n        } else {\n          this._isShowOverLay = true;\n        }\n      } else {\n        this._isShowOverLay = false;\n      }\n    }\n  }\n};\n__decorate([property({\n  type: Boolean,\n  reflect: true\n})], NeStatusOverlay.prototype, \"show\", void 0);\n__decorate([property({\n  type: Number,\n  attribute: 'status-delay'\n})], NeStatusOverlay.prototype, \"delay\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'size'\n})], NeStatusOverlay.prototype, \"size\", void 0);\n__decorate([property({\n  type: String,\n  attribute: 'status'\n})], NeStatusOverlay.prototype, \"status\", void 0);\n__decorate([property({\n  type: String\n})], NeStatusOverlay.prototype, \"theme\", void 0);\n__decorate([state()], NeStatusOverlay.prototype, \"_showSetTimeout\", void 0);\n__decorate([state()], NeStatusOverlay.prototype, \"_isShowOverLay\", void 0);\nNeStatusOverlay = __decorate([customElement('ne-status-overlay')], NeStatusOverlay);\n\nexport { NeStatusOverlay };\n//# sourceMappingURL=status-overlay.js.map\n"],"names":[],"sourceRoot":""}